(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{429:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("ul",[t("li",[t("a",{attrs:{href:"#1-commonjs-%E6%A8%A1%E5%9D%97%E4%B8%8E-es6-%E6%A8%A1%E5%9D%97%E7%9A%84%E5%8C%BA%E5%88%AB"}},[s._v("1. CommonJS 模块与 ES6 模块的区别")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#11-commonjs"}},[s._v("1.1. CommonJS")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#12-es6%E6%A8%A1%E5%9D%97"}},[s._v("1.2. ES6模块")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#13-commonjs-%E6%A8%A1%E5%9D%97%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%8E%9F%E7%90%86"}},[s._v("1.3. CommonJS 模块的加载原理")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#14-commonjs-%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%E7%9A%84%E4%BE%8B%E5%AD%90"}},[s._v("1.4. CommonJS 循环引用的例子")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#2-es6-%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%E7%9A%84%E4%BE%8B%E5%AD%90"}},[s._v("2. ES6 循环引用的例子")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#21-%E4%B8%BA%E4%BB%80%E4%B9%88-es-%E6%A8%A1%E5%9D%97%E6%AF%94-commonjs-%E6%9B%B4%E5%A5%BD"}},[s._v("2.1. 为什么 ES 模块比 CommonJS 更好？")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#22-es6-%E7%9A%84-export-default-"}},[s._v("2.2. ES6 的 "),t("code",[s._v("export default")])])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#3-nodejs%E5%8C%BA%E5%88%86es6%E5%92%8Ccommonjs%E6%A8%A1%E5%9D%97"}},[s._v("3. Node.js区分ES6和CommonJS模块")])])]),s._v(" "),t("h3",{attrs:{id:"_1-commonjs-模块与-es6-模块的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-commonjs-模块与-es6-模块的区别"}},[s._v("#")]),s._v(" 1. CommonJS 模块与 ES6 模块的区别")]),s._v(" "),t("h4",{attrs:{id:"_1-1-commonjs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-commonjs"}},[s._v("#")]),s._v(" 1.1. CommonJS")]),s._v(" "),t("ol",[t("li",[s._v("对于基本数据类型，属于"),t("strong",[s._v("复制")]),s._v("。即会被模块缓存。同时，在另一个模块可以对该模块输出的变量重新赋值。")]),s._v(" "),t("li",[s._v("对于复杂数据类型，属于"),t("strong",[s._v("浅拷贝")]),s._v("。由于两个模块引用的对象指向同一个内存空间，因此对该模块的值做修改时会影响另一个模块。")]),s._v(" "),t("li",[s._v("当使用require命令加载某个模块时，就会"),t("strong",[s._v("运行整个模块的代码")]),s._v("。")]),s._v(" "),t("li",[s._v("当使用require命令加载同一个模块时，不会再执行该模块，而是"),t("strong",[s._v("取到缓存之中的值")]),s._v("。也就是说，CommonJS模块无论加载多少次，都只会在第一次加载时运行一次，以后再加载，就返回第一次运行的结果，除非手动清除系统缓存。")]),s._v(" "),t("li",[s._v("循环加载时，属于"),t("strong",[s._v("加载时执行")]),s._v('。即脚本代码在require的时候，就会全部执行。一旦出现某个模块被"循环加载"，就'),t("strong",[s._v("只输出已经执行的部分")]),s._v("，还未执行的部分不会输出。")])]),s._v(" "),t("h4",{attrs:{id:"_1-2-es6模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-es6模块"}},[s._v("#")]),s._v(" 1.2. ES6模块")]),s._v(" "),t("ol",[t("li",[s._v("ES6模块中的值属于【"),t("strong",[s._v("动态只读引用")]),s._v("】。")]),s._v(" "),t("li",[s._v("对于只读来说，即不允许修改引入变量的值，"),t("strong",[t("code",[s._v("import")]),s._v("的变量是只读的")]),s._v("，不论是基本数据类型还是复杂数据类型。当模块遇到"),t("code",[s._v("import")]),s._v("命令时，就会生成一个只读引用。等到脚本真正执行时，再根据这个只读引用，到被加载的那个模块里面去取值。")]),s._v(" "),t("li",[s._v("对于动态来说，"),t("strong",[s._v("原始值发生变化，import加载的值也会发生变化")]),s._v("。不论是基本数据类型还是复杂数据类型。")]),s._v(" "),t("li",[s._v("循环加载时，ES6模块是动态引用。只要两个模块之间存在某个引用，代码就能够执行。")])]),s._v(" "),t("p",[s._v("小结：")]),s._v(" "),t("ol",[t("li",[t("code",[s._v("CommonJS")]),s._v(" 模块是"),t("strong",[s._v("运行时加载")]),s._v("，ES6 模块是"),t("strong",[s._v("编译时输出接口")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("CommonJS")]),s._v(" 模块输出的是一个"),t("strong",[s._v("值的拷贝")]),s._v("，ES6 模块输出的是"),t("strong",[s._v("值的引用")]),s._v("。")])]),s._v(" "),t("ul",[t("li",[s._v("第一个差异是因为"),t("strong",[s._v("CommonJS 加载的是一个对象（即module.exports属性）")]),s._v("，该对象"),t("strong",[s._v("只有在脚本运行完才会生成")]),s._v("。而 ES6 模块"),t("strong",[s._v("不是对象，它的对外接口只是一种静态定义")]),s._v("，在代码静态解析阶段就会生成。")]),s._v(" "),t("li",[s._v("CommonJS 模块输出的是值的拷贝，也就是说，"),t("strong",[s._v("一旦输出一个值，模块内部的变化就影响不到这个值")]),s._v("。")]),s._v(" "),t("li",[s._v("ES6 模块不会缓存运行结果，而是动态地去被加载的模块取值，并且变量总是绑定其所在的模块。")]),s._v(" "),t("li",[s._v("export通过接口，输出的是同一个值。不同的脚本加载这个接口，得到的都是同样的实例。")])]),s._v(" "),t("h4",{attrs:{id:"_1-3-commonjs-模块的加载原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-commonjs-模块的加载原理"}},[s._v("#")]),s._v(" 1.3. CommonJS 模块的加载原理")]),s._v(" "),t("p",[s._v("CommonJS 的一个模块，就是一个脚本文件。require命令第一次加载该脚本，就会执行整个脚本，然后在"),t("strong",[s._v("内存")]),s._v("生成一个对象。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'...'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("exports")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("loaded")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("上面代码就是 Node 内部加载模块后生成的一个对象。该对象的"),t("code",[s._v("id")]),s._v("属性是模块名，"),t("code",[s._v("exports")]),s._v("属性是模块输出的各个接口，"),t("code",[s._v("loaded")]),s._v("属性是一个布尔值，表示"),t("strong",[s._v("该模块的脚本是否执行完毕")]),s._v("。")]),s._v(" "),t("p",[s._v("以后需要用到这个模块的时候，就会"),t("strong",[s._v("到"),t("code",[s._v("exports")]),s._v("属性上面取值")]),s._v("。即使再次执行"),t("code",[s._v("require")]),s._v("命令，也不会再次执行该模块，而是到"),t("strong",[s._v("缓存")]),s._v("之中取值。也就是说，CommonJS 模块无论加载多少次，都只会在第一次加载时运行一次，以后再加载，就返回第一次运行的结果，除非手动清除系统缓存。")]),s._v(" "),t("h4",{attrs:{id:"_1-4-commonjs-循环引用的例子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-commonjs-循环引用的例子"}},[s._v("#")]),s._v(" 1.4. CommonJS 循环引用的例子")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a.js")]),s._v("\nexports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("done "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./b.js'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'在 a.js 之中，b.done = %j'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("done"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nexports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("done "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a.js 执行完毕'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// b.js")]),s._v("\nexports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("done "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./a.js'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'在 b.js 之中，a.done = %j'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("done"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nexports"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("done "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.js 执行完毕'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// main.js")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./a.js'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./b.js'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'在 main.js 之中, a.done=%j, b.done=%j'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("done"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("done"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[t("code",[s._v("node main.js")]),s._v("执行结果：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("在 b.js 之中，a.done = false\nb.js 执行完毕\n在 a.js 之中，b.done = true\na.js 执行完毕\n在 main.js 之中, a.done=true, b.done=true\n")])])]),t("ul",[t("li",[t("code",[s._v("a.js")]),s._v("脚本先输出一个"),t("code",[s._v("done")]),s._v("变量，然后加载另一个脚本文件"),t("code",[s._v("b.js")]),s._v("。此时"),t("code",[s._v("a.js")]),s._v("代码就停在这里，等待"),t("code",[s._v("b.js")]),s._v("执行完毕，再往下执行。")]),s._v(" "),t("li",[t("code",[s._v("b.js")]),s._v("执行到第二行，就会去加载"),t("code",[s._v("a.js")]),s._v("，这时，就发生了“循环加载”。系统会去"),t("code",[s._v("a.js")]),s._v("模块对应对象的"),t("code",[s._v("exports")]),s._v("属性取值，可是因为"),t("code",[s._v("a.js")]),s._v("还没有执行完，从"),t("code",[s._v("exports")]),s._v("属性只能取回已经执行的部分，而不是最后的值。而"),t("code",[s._v("a.js")]),s._v("已经执行的部分，只有一行。 "),t("code",[s._v("exports.done = false;")]),s._v("因此，对于"),t("code",[s._v("b.js")]),s._v("来说，它从"),t("code",[s._v("a.js")]),s._v("只输入一个变量"),t("code",[s._v("done")]),s._v("，值为"),t("code",[s._v("false")]),s._v("。")]),s._v(" "),t("li",[s._v("然后，"),t("code",[s._v("b.js")]),s._v("接着往下执行，等到全部执行完毕，再把执行权交还给"),t("code",[s._v("a.js")]),s._v("。于是，"),t("code",[s._v("a.js")]),s._v("接着往下执行，直到执行完毕。")])]),s._v(" "),t("p",[s._v("可以看出：")]),s._v(" "),t("ol",[t("li",[s._v("在"),t("code",[s._v("b.js")]),s._v("之中，"),t("code",[s._v("a.js")]),s._v("没有执行完毕，只执行了第一行。")]),s._v(" "),t("li",[t("code",[s._v("main.js")]),s._v("执行到第二行时，不会再次执行"),t("code",[s._v("b.js")]),s._v("，而是输出缓存的"),t("code",[s._v("b.js")]),s._v("的执行结果，即它的第四行。"),t("code",[s._v("exports.done = true;")])])]),s._v(" "),t("h3",{attrs:{id:"_2-es6-循环引用的例子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-es6-循环引用的例子"}},[s._v("#")]),s._v(" 2. ES6 循环引用的例子")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a.mjs")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("bar"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./b'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a.mjs'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bar"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" foo "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// b.mjs")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("foo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./a'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.mjs'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("foo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" bar "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("ul",[t("li",[t("p",[s._v("首先，执行"),t("code",[s._v("a.mjs")]),s._v("以后，引擎发现它加载了"),t("code",[s._v("b.mjs")]),s._v("，因此会优先执行"),t("code",[s._v("b.mjs")]),s._v("，然后再执行"),t("code",[s._v("a.mjs")]),s._v("。")])]),s._v(" "),t("li",[t("p",[s._v("接着，执行"),t("code",[s._v("b.mjs")]),s._v("的时候，已知它从"),t("code",[s._v("a.mjs")]),s._v("输入了"),t("code",[s._v("foo")]),s._v("接口，这时不会去执行"),t("code",[s._v("a.mjs")]),s._v("，而是认为这个接口已经存在了，继续往下执行。执行到第三行"),t("code",[s._v("console.log(foo)")]),s._v("的时候，才发现这个接口根本没定义，因此报错。")])])]),s._v(" "),t("p",[s._v("解决这个问题的方法，就是让b.mjs运行的时候，foo已经有定义了。这可以通过将"),t("code",[s._v("foo")]),s._v("写成函数来解决。这是因为函数具有"),t("strong",[s._v("提升")]),s._v("作用，在执行"),t("code",[s._v("import {bar} from './b'")]),s._v("时，函数foo就已经有定义了，所以"),t("code",[s._v("b.mjs")]),s._v("加载的时候不会报错。这也意味着，如果把函数foo改写成函数表达式，也会报错。")]),s._v(" "),t("h4",{attrs:{id:"_2-1-为什么-es-模块比-commonjs-更好"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-为什么-es-模块比-commonjs-更好"}},[s._v("#")]),s._v(" 2.1. 为什么 ES 模块比 CommonJS 更好？")]),s._v(" "),t("p",[s._v("由于 ES6 模块是"),t("strong",[s._v("编译时加载")]),s._v("（静态加载），使得"),t("strong",[s._v("静态分析")]),s._v("成为可能。有了它，就能进一步拓宽 JavaScript 的语法，比如引入宏（macro）和类型检验（type system）这些只能靠静态分析实现的功能。")]),s._v(" "),t("h4",{attrs:{id:"_2-2-es6-的-export-default"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-es6-的-export-default"}},[s._v("#")]),s._v(" 2.2. ES6 的 "),t("code",[s._v("export default")])]),s._v(" "),t("p",[t("code",[s._v("export default")]),s._v("命令用于指定模块的默认输出。显然，一个模块只能有一个默认输出，因此"),t("code",[s._v("export default")]),s._v("命令只能使用一次。所以，import命令后面才不用加大括号，因为只可能唯一对应"),t("code",[s._v("export default")]),s._v("命令。")]),s._v(" "),t("p",[s._v("本质上，"),t("code",[s._v("export default")]),s._v("就是输出一个叫做"),t("code",[s._v("default")]),s._v("的变量或方法，然后系统允许你为它取任意名字。所以，下面的写法是有效的。")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// modules.js")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("add "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// export default add;")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// app.js")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" foo "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'modules'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// import foo from 'modules';")]),s._v("\n")])])]),t("p",[s._v("正是因为"),t("code",[s._v("export default")]),s._v("命令其实只是输出一个叫做"),t("code",[s._v("default")]),s._v("的变量，所以它后面不能跟变量声明语句。")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 正确")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 正确")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 错误")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("上面代码中，"),t("code",[s._v("export default a")]),s._v("的含义是将变量"),t("code",[s._v("a")]),s._v("的值赋给变量"),t("code",[s._v("default")]),s._v("。所以，最后一种写法会报错。")]),s._v(" "),t("p",[s._v("同样地，因为"),t("code",[s._v("export default")]),s._v("命令的本质是将后面的值，赋给"),t("code",[s._v("default")]),s._v("变量，所以可以直接将一个值写在"),t("code",[s._v("export default")]),s._v("之后。")]),s._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 正确")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("上面代码中，后一句报错是因为没有指定对外的接口，而前一句指定对外接口为"),t("code",[s._v("default")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"_3-node-js区分es6和commonjs模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-node-js区分es6和commonjs模块"}},[s._v("#")]),s._v(" 3. Node.js区分ES6和CommonJS模块")]),s._v(" "),t("ul",[t("li",[t("strong",[t("code",[s._v(".mjs")]),s._v("文件总是以 "),t("code",[s._v("ES6")]),s._v(" 模块加载")]),s._v(";")]),s._v(" "),t("li",[t("strong",[t("code",[s._v(".cjs")]),s._v("文件总是以 "),t("code",[s._v("CommonJS")]),s._v(" 模块加载")]),s._v(";")]),s._v(" "),t("li",[t("code",[s._v(".js")]),s._v("文件的加载取决于"),t("code",[s._v("package.json")]),s._v("里面"),t("code",[s._v("type")]),s._v("字段的设置\n"),t("ul",[t("li",[t("strong",[t("code",[s._v("type")]),s._v("为"),t("code",[s._v("module")]),s._v("是"),t("code",[s._v("ES6")]),s._v("模块")])]),s._v(" "),t("li",[t("strong",[t("code",[s._v("type")]),s._v("为"),t("code",[s._v("commonjs")]),s._v("是"),t("code",[s._v("CommonJS")]),s._v("模块")]),s._v("。")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);