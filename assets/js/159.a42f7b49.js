(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{462:function(e,t,_){"use strict";_.r(t);var a=_(25),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("ul",[t("li",[t("a",{attrs:{href:"#1-redux"}},[e._v("1. Redux")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#11-%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8redux"}},[e._v("1.1. 为什么用redux？")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#12-%E4%B8%89%E5%A4%A7%E5%8E%9F%E5%88%99"}},[e._v("1.2. 三大原则")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#13-%E5%B8%B8%E8%A7%81%E6%A6%82%E5%BF%B5"}},[e._v("1.3. 常见概念")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#131-action"}},[e._v("1.3.1. Action")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#132-reducer"}},[e._v("1.3.2. Reducer")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#133-redux-middleware"}},[e._v("1.3.3. Redux middleware")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#134-redux-middleware%E7%9A%84%E6%9C%AC%E8%B4%A8"}},[e._v("1.3.4. "),t("code",[e._v("Redux middleware")]),e._v("的本质")])])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#14-redux%E4%B8%AD%E7%9A%84reducer%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E5%81%9Areducer"}},[e._v("1.4. "),t("code",[e._v("redux")]),e._v("中的"),t("code",[e._v("reducer")]),e._v("为什么叫做"),t("code",[e._v("reducer")]),e._v("？")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#15-action%E5%BC%82%E6%AD%A5%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E4%B8%AD%E9%97%B4%E4%BB%B6"}},[e._v("1.5. action异步，为什么需要中间件？")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#16-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB-thunk-"}},[e._v("1.6. 为什么叫 thunk ？")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#17-react-redux%E6%95%B0%E6%8D%AE%E6%B5%81"}},[e._v("1.7. "),t("code",[e._v("react-redux")]),e._v("数据流")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#18-mapstatetoprops-%E5%92%8C-mapdispatchtoprops"}},[e._v("1.8. "),t("code",[e._v("mapStateToProps")]),e._v(" 和 "),t("code",[e._v("mapDispatchToProps")])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#19-%E4%B8%BA%E4%BB%80%E4%B9%88reducer%E6%98%AF%E7%BA%AF%E5%87%BD%E6%95%B0"}},[e._v("1.9. 为什么reducer是纯函数")])])])])]),e._v(" "),t("h2",{attrs:{id:"_1-redux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-redux"}},[e._v("#")]),e._v(" 1. Redux")]),e._v(" "),t("h3",{attrs:{id:"_1-1-为什么用redux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-为什么用redux"}},[e._v("#")]),e._v(" 1.1. 为什么用redux？")]),e._v(" "),t("ul",[t("li",[e._v("不用的话只能A流向子组件B，B流向子组件C，不能跨级，这时需要redux。")]),e._v(" "),t("li",[e._v("更好的管理状态\n"),t("ul",[t("li",[e._v("随着单页面应用的普及，web app内部需要管理的状态越来越多，这些状态可能来自服务器端，用户输入的数据，用户交互数据，当前UI状态，本地的缓存数据等等。如何能够有条理的管理这些数据，成为前端开发中一个难题。")])])])]),e._v(" "),t("h3",{attrs:{id:"_1-2-三大原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-三大原则"}},[e._v("#")]),e._v(" 1.2. 三大原则")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("单一数据源")]),e._v(" "),t("ul",[t("li",[e._v("使用redux的程序，所有的state都存储在一个单一的数据源store内部，类似一个巨大的对象树。")])])]),e._v(" "),t("li",[t("p",[e._v("state是只读的")]),e._v(" "),t("ul",[t("li",[e._v("state是只读的，能改变state的唯一方式是通过触发action来修改")])])]),e._v(" "),t("li",[t("p",[e._v("使用纯函数执行修改")]),e._v(" "),t("ul",[t("li",[e._v("为了描述 action 如何改变 state tree ， 你需要编写 reducers。")]),e._v(" "),t("li",[e._v("reducers是一些纯函数，接口当前state和action。只需要根据action，返回对应的state。而且必须要有返回。")]),e._v(" "),t("li",[e._v("一个函数的返回结果只依赖于它的参数，并且在执行过程里面没有副作用，我们就把这个函数叫做纯函数")])])])]),e._v(" "),t("h3",{attrs:{id:"_1-3-常见概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-常见概念"}},[e._v("#")]),e._v(" 1.3. 常见概念")]),e._v(" "),t("h4",{attrs:{id:"_1-3-1-action"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-action"}},[e._v("#")]),e._v(" 1.3.1. Action")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("{\n  type: ADD_TODO,\n  text: 'Build my first Redux app'\n}\n")])])]),t("p",[e._v("Action 本质上是 JavaScript 普通对象。")]),e._v(" "),t("p",[e._v("我们约定，action 内必须使用一个字符串类型的type字段来表示将要执行的动作。多数情况下，type会被定义成字符串常量。当应用规模越来越大时，建议使用单独的模块或文件来存放action。")]),e._v(" "),t("h4",{attrs:{id:"_1-3-2-reducer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-reducer"}},[e._v("#")]),e._v(" 1.3.2. Reducer")]),e._v(" "),t("ul",[t("li",[e._v("Action 只是描述了有事情发生了这件事实，但并没有说明要做哪些改变，这正是reducer需要做的事情。")]),e._v(" "),t("li",[e._v("Reducer作为纯函数，内部不建议使用任何有副作用的操作，比如操作外部的变量，任何导致相同输入但输出却不一致的操作。")])]),e._v(" "),t("h4",{attrs:{id:"_1-3-3-redux-middleware"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-redux-middleware"}},[e._v("#")]),e._v(" 1.3.3. Redux middleware")]),e._v(" "),t("p",[e._v("Redux middleware提供的是位于 action 被发起之后，到达 reducer 之前的扩展点。")]),e._v(" "),t("h4",{attrs:{id:"_1-3-4-redux-middleware的本质"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-redux-middleware的本质"}},[e._v("#")]),e._v(" 1.3.4. "),t("code",[e._v("Redux middleware")]),e._v("的本质")]),e._v(" "),t("p",[t("code",[e._v("Middleware")]),e._v(" 接收了一个 "),t("code",[e._v("next()")]),e._v(" 的 "),t("code",[e._v("dispatch")]),e._v(" 函数，并返回一个 "),t("code",[e._v("dispatch")]),e._v(" 函数，返回的函数会被作为下一个 "),t("code",[e._v("middleware")]),e._v(" 的 "),t("code",[e._v("next()")]),e._v("，以此类推。")]),e._v(" "),t("h3",{attrs:{id:"_1-4-redux中的reducer为什么叫做reducer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-redux中的reducer为什么叫做reducer"}},[e._v("#")]),e._v(" 1.4. "),t("code",[e._v("redux")]),e._v("中的"),t("code",[e._v("reducer")]),e._v("为什么叫做"),t("code",[e._v("reducer")]),e._v("？")]),e._v(" "),t("p",[e._v("因为它和 "),t("code",[e._v("Array.prototype.reduce")]),e._v(" 当中传入的回调函数非常相似。")]),e._v(" "),t("p",[t("code",[e._v("reducer")]),e._v("应该返回新的对象，为什么呢？因为比较两个对象是否相同，是看对象地址是否相同，所以要返回新的对象，而不是直接改变原来的state")]),e._v(" "),t("h3",{attrs:{id:"_1-5-action异步-为什么需要中间件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-action异步-为什么需要中间件"}},[e._v("#")]),e._v(" 1.5. action异步，为什么需要中间件？")]),e._v(" "),t("p",[e._v("因为dispatch的时候，需要"),t("code",[e._v("action.data")]),e._v("需要等待，而"),t("code",[e._v("redux")]),e._v("的"),t("code",[e._v("action")]),e._v("没有这个等待，而是立马返回。")]),e._v(" "),t("h3",{attrs:{id:"_1-6-为什么叫-thunk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-为什么叫-thunk"}},[e._v("#")]),e._v(" 1.6. 为什么叫 thunk ？")]),e._v(" "),t("p",[e._v("Thunk 是一类函数的别名，主要特征是"),t("strong",[e._v("对另外一个函数添加了一些额外的操作")]),e._v("，类似"),t("strong",[e._v("装饰器")]),e._v("。其主要用途为延迟函数执行（惰性求值）或者给一个函数执行前后添加一些额外的操作。")]),e._v(" "),t("h3",{attrs:{id:"_1-7-react-redux数据流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-react-redux数据流"}},[e._v("#")]),e._v(" 1.7. "),t("code",[e._v("react-redux")]),e._v("数据流")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Provider")]),e._v("将"),t("code",[e._v("store")]),e._v("提供给组件，组件"),t("code",[e._v("connect(mapStateToProps, mapDispatchToProps)(Comp)")]),e._v("，")]),e._v(" "),t("li",[e._v("组件每次拿到的都是"),t("code",[e._v("mapStateToProps")]),e._v("中最新的"),t("code",[e._v("state")]),e._v("，")]),e._v(" "),t("li",[e._v("调用"),t("code",[e._v("props.add")]),e._v("方法，"),t("code",[e._v("add")]),e._v("方法在"),t("code",[e._v("mapDispatchToProps")]),e._v("中定义，"),t("code",[e._v("dispatch")]),e._v("一个对象，交给"),t("code",[e._v("reducer")]),e._v("的"),t("code",[e._v("dispatch")]),e._v("，改变"),t("code",[e._v("state")]),e._v("，然后组件获得更新后的"),t("code",[e._v("state")]),e._v("。")])]),e._v(" "),t("h3",{attrs:{id:"_1-8-mapstatetoprops-和-mapdispatchtoprops"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-mapstatetoprops-和-mapdispatchtoprops"}},[e._v("#")]),e._v(" 1.8. "),t("code",[e._v("mapStateToProps")]),e._v(" 和 "),t("code",[e._v("mapDispatchToProps")])]),e._v(" "),t("ul",[t("li",[t("code",[e._v("mapStateToProps")]),e._v("，参数为"),t("code",[e._v("state")]),e._v("，返回一个"),t("strong",[e._v("对象(普通对象)")]),e._v("，为组件需要的数据。")]),e._v(" "),t("li",[t("code",[e._v("mapDispatchToProps")]),e._v("，参数为"),t("code",[e._v("dispatch")]),e._v("，返回一个"),t("strong",[e._v("对象(包含一些方法)")]),e._v("，每个方法调用"),t("code",[e._v("dispatch")]),e._v("。")])]),e._v(" "),t("h3",{attrs:{id:"_1-9-为什么reducer是纯函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-9-为什么reducer是纯函数"}},[e._v("#")]),e._v(" 1.9. 为什么reducer是纯函数")]),e._v(" "),t("p",[e._v("因为不能改变输入值"),t("code",[e._v("state")]),e._v("，说白了就是reducer传"),t("code",[e._v("state")]),e._v("和action返回新的"),t("code",[e._v("state")]),e._v("。")]),e._v(" "),t("p",[e._v("为什么这样设计？")]),e._v(" "),t("p",[e._v("因为"),t("strong",[e._v("页面渲染需要比较新旧"),t("code",[e._v("state")]),e._v("，react比较"),t("code",[e._v("state")]),e._v("比较的是地址")]),e._v("（也就是浅比较，如果深比较耗费性能）所以必须返回新的"),t("code",[e._v("state")]),e._v("，否则页面不更新")])])}),[],!1,null,null,null);t.default=r.exports}}]);