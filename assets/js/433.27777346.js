(window.webpackJsonp=window.webpackJsonp||[]).push([[433],{707:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、开始"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、开始"}},[t._v("#")]),t._v(" 一、开始")]),t._v(" "),s("p",[t._v("本文讲解 DNS 的基础知识和查询流程，分析递归和迭代的区别，以及尾递归的相关知识。")]),t._v(" "),s("h2",{attrs:{id:"二、dns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、dns"}},[t._v("#")]),t._v(" 二、DNS")]),t._v(" "),s("h3",{attrs:{id:"_1-概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念"}},[t._v("#")]),t._v(" 1. 概念")]),t._v(" "),s("p",[t._v("DNS 即域名系统，全称是 "),s("code",[t._v("Domain Name System")]),t._v("。当我们在浏览器输入一个 URL 地址时，浏览器要向这个 URL 的主机名对应的服务器发送请求，就得知道服务器的 IP，对于浏览器来说，DNS 的作用就是将主机名转换成 IP 地址。下面是摘自《计算机网络：自顶向下方法》的概念：")]),t._v(" "),s("blockquote",[s("p",[t._v("DNS 是：\n一个由"),s("strong",[t._v("分层")]),t._v("的 DNS 服务器实现的"),s("strong",[t._v("分布式数据库")]),t._v("\n一个使得主机能够查询分布式数据库的"),s("strong",[t._v("应用层协议")])])]),t._v(" "),s("p",[t._v("什么是分布式？")]),t._v(" "),s("p",[t._v("这个世界上没有一台 DNS 服务器拥有因特网上所有主机的映射，每台 DNS 只负责部分映射。")]),t._v(" "),s("p",[t._v("什么是层次？")]),t._v(" "),s("p",[t._v("DNS 服务器有 3 种类型：根 DNS 服务器、顶级域（Top-Level Domain, TLD）DNS 服务器和权威 DNS 服务器。它们的层次结构如下图所示：")]),t._v(" "),s("img",{attrs:{src:"http://doc.uwayfly.com/dns-server-level-2.png",width:"600"}}),t._v(" "),s("h3",{attrs:{id:"_2-域名的层级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-域名的层级"}},[t._v("#")]),t._v(" 2. 域名的层级")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("www.example.com")]),t._v(" 真正的域名是 "),s("code",[t._v("www.example.com.root")]),t._v("，简写为 "),s("code",[t._v("www.example.com.")]),t._v("，这里的“.”就是根域名。因为，根域名 "),s("code",[t._v(".root")]),t._v(" 对于所有域名都是一样的，所以平时是省略的。")]),t._v(" "),s("li",[t._v("根域名的下一级，叫做"),s("code",[t._v('"顶级域名"')]),t._v("（"),s("code",[t._v("top-level domain")]),t._v("，缩写为TLD），也可称为“一级域名”，比如 "),s("code",[t._v(".com")]),t._v("、"),s("code",[t._v(".net")]),t._v("。")]),t._v(" "),s("li",[t._v("再下一级叫做"),s("code",[t._v('"次级域名"')]),t._v("（"),s("code",[t._v("second-level domain")]),t._v("，缩写为SLD），比如 "),s("code",[t._v("www.example.com")]),t._v(" 里面的 "),s("code",[t._v(".example")]),t._v("，这一级域名是用户可以注册的。")]),t._v(" "),s("li",[t._v("次级域名左侧的，就是"),s("code",[t._v("其它级别域名")]),t._v("，即最靠近二级域名左侧的字段，从右向左便可依次有三级域名、四级域名、五级域名等，依次类推即可。")]),t._v(" "),s("li",[t._v("最左侧的是主机名（"),s("code",[t._v("host")]),t._v("），比如"),s("code",[t._v("www.example.com")]),t._v("里面的"),s("code",[t._v("www")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_3-本地dns服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-本地dns服务器"}},[t._v("#")]),t._v(" 3. 本地DNS服务器")]),t._v(" "),s("p",[t._v("本地 DNS 服务器并不属于 DNS 的层次结构，但它对 DNS 层次结构是至关重要的。")]),t._v(" "),s("p",[t._v("每个 ISP（"),s("code",[t._v("Internet Service Provider")]),t._v("，互联网服务提供商） 都有一台本地 DNS 服务器，比如一个居民区的 ISP、一个大学的 ISP、一个机构的 ISP，都有一台或多台本地 DNS 服务器。当主机发出 DNS 请求时，该请求被发往本地 DNS 服务器，本地 DNS 服务器起着代理的作用，并负责将该请求转发到 DNS 服务器层次结构中。")]),t._v(" "),s("h2",{attrs:{id:"三、dns查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、dns查询"}},[t._v("#")]),t._v(" 三、DNS查询")]),t._v(" "),s("h3",{attrs:{id:"_1-递归查询和迭代查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-递归查询和迭代查询"}},[t._v("#")]),t._v(" 1. 递归查询和迭代查询")]),t._v(" "),s("p",[t._v("假设主机 "),s("code",[t._v("m.n.com")]),t._v(" 想要获取主机 "),s("code",[t._v("a.b.com")]),t._v(" 的 IP 地址，会经过以下几个步骤：")]),t._v(" "),s("img",{attrs:{src:"http://doc.uwayfly.com/dns-search-process-5.png",width:"500"}}),t._v(" "),s("ol",[s("li",[t._v("首先，主机 "),s("code",[t._v("m.n.com")]),t._v(" 向它的本地 DNS 服务器发送一个 DNS 查询报文，其中包含期待被转换的主机名 "),s("code",[t._v("a.b.com")]),t._v("；")]),t._v(" "),s("li",[t._v("本地 DNS 服务器将该报文转发到根 DNS 服务器；")]),t._v(" "),s("li",[t._v("该根 DNS 服务器注意到 "),s("code",[t._v("com")]),t._v(" 前缀，便向本地 DNS 服务器返回 com 对应的顶级域 DNS 服务器（TLD）的 IP 地址列表。\n意思就是，我不知道 "),s("code",[t._v("a.b.com")]),t._v(" 的 IP，不过这些 TLD 服务器可能知道，你去问他们吧；")]),t._v(" "),s("li",[t._v("本地 DNS 服务器则向其中一台 TLD 服务器发送查询报文；")]),t._v(" "),s("li",[t._v("该 TLD 服务器注意到 b.com 前缀，便向本地 DNS 服务器返回权威 DNS 服务器的 IP 地址。\n意思就是，我不知道 "),s("code",[t._v("a.b.com")]),t._v(" 的 IP，不过这些权威服务器可能知道，你去问他们吧；")]),t._v(" "),s("li",[t._v("本地 DNS 服务器又向其中一台权威服务器发送查询报文；")]),t._v(" "),s("li",[t._v("终于，该权威服务器返回了 "),s("code",[t._v("a.b.com")]),t._v(" 的 IP 地址；")]),t._v(" "),s("li",[t._v("本地 DNS 服务器将 "),s("code",[t._v("a.b.com")]),t._v(" 跟 IP 地址的映射返回给主机 "),s("code",[t._v("m.n.com")]),t._v("，"),s("code",[t._v("m.n.com")]),t._v(" 就可以用该 IP 向 "),s("code",[t._v("a.b.com")]),t._v(" 发送请求啦。")])]),t._v(" "),s("p",[t._v("其中，主机 "),s("code",[t._v("m.n.com")]),t._v(" 向本地 DNS 服务器 "),s("code",[t._v("dns.n.com")]),t._v(" 发出的查询就是"),s("strong",[t._v("递归查询")]),t._v("，这个查询是主机 "),s("code",[t._v("m.n.com")]),t._v(" 以自己的名义向本地 DNS 服务器请求想要的 IP 映射，并且本地 DNS 服务器直接返回映射结果给到主机。")]),t._v(" "),s("p",[t._v("而后继的三个查询是"),s("strong",[t._v("迭代查询")]),t._v("，包括本地 DNS 服务器向根 DNS 服务器发送查询请求、本地 DNS 服务器向 TLD 服务器发送查询请求、本地 DNS 服务器向权威 DNS 服务器发送查询请求，所有的请求都是由本地 DNS 服务器发出，所有的响应都是直接返回给本地 DNS 服务器。")]),t._v(" "),s("h3",{attrs:{id:"_2-dns-记录的类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-dns-记录的类型"}},[t._v("#")]),t._v(" 2. DNS 记录的类型")]),t._v(" "),s("p",[t._v('域名与IP之间的对应关系，称为"记录"（record）。根据使用场景，"记录"可以分成不同的类型（type）。')]),t._v(" "),s("p",[t._v("常见的DNS记录类型如下：")]),t._v(" "),s("ul",[s("li",[t._v("A：地址记录（Address），返回域名指向的IP地址。")]),t._v(" "),s("li",[t._v("NS：域名服务器记录（Name Server），返回保存下一级域名信息的服务器地址。该记录只能设置为域名，不能设置为IP地址。")]),t._v(" "),s("li",[t._v("MX：邮件记录（Mail eXchange），返回接收电子邮件的服务器地址。")]),t._v(" "),s("li",[t._v("CNAME：规范名称记录（Canonical Name），返回另一个域名，即当前查询的域名是另一个域名的跳转。")]),t._v(" "),s("li",[t._v("PTR：逆向查询记录（Pointer Record），只用于从IP地址查询域名。")])]),t._v(" "),s("h3",{attrs:{id:"_3-dns-查询相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-dns-查询相关命令"}},[t._v("#")]),t._v(" 3. DNS 查询相关命令")]),t._v(" "),s("h4",{attrs:{id:"_1-dig-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-dig-命令"}},[t._v("#")]),t._v(" （1）dig 命令")]),t._v(" "),s("ol",[s("li",[t._v("显示 DNS 查询的整个过程")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("域名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比如")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" baidu.com\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("显示 DNS 分级查询过程")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" +trace "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("域名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比如")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" +trace baidu.com\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("code",[t._v("dig")]),t._v(" 命令可以单独查看每一级域名的 NS 记录")])]),t._v(" "),s("p",[t._v("比如")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" ns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分级域名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比如")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" ns com\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" ns baidu.com\n")])])]),s("p",[s("code",[t._v("dig")]),t._v(" 后面的的 "),s("code",[t._v("ns")]),t._v(" 可以换成其他的DNS记录类型，比如 "),s("code",[t._v("a")]),t._v("、"),s("code",[t._v("mx")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" a github.com\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" ns github.com\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" mx github.com\n")])])]),s("p",[s("code",[t._v("+short")]),t._v(" 参数可以显示简化的结果")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" +short ns com\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" +short ns baidu.com\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[s("code",[t._v("dig")]),t._v(" 命令加上 "),s("code",[t._v("-x")]),t._v(" 可以从IP地址反查域名")])]),t._v(" "),s("p",[t._v("比如：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dig")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-x")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("220.181")]),t._v(".38.251\n")])])]),s("h4",{attrs:{id:"_2-host-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-host-命令"}},[t._v("#")]),t._v(" （2）host 命令")]),t._v(" "),s("p",[s("code",[t._v("host")]),t._v(" 命令可以看作 "),s("code",[t._v("dig")]),t._v(" 命令的简化版本，返回当前请求域名的各种记录。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" baidu.com\n")])])]),s("p",[s("code",[t._v("host")]),t._v(" 命令也可以用于逆向查询，即从 IP 地址查询域名，等同于 "),s("code",[t._v("dig -x <ip>")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("220.181")]),t._v(".38.251\n")])])]),s("h4",{attrs:{id:"_3-nslookup-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-nslookup-命令"}},[t._v("#")]),t._v(" （3）nslookup 命令")]),t._v(" "),s("p",[s("code",[t._v("nslookup")]),t._v(" 命令用于互动式地查询域名记录。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nslookup")]),t._v("\n")])])]),s("h2",{attrs:{id:"四、递归和迭代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、递归和迭代"}},[t._v("#")]),t._v(" 四、递归和迭代")]),t._v(" "),s("h3",{attrs:{id:"_1-概念-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念-2"}},[t._v("#")]),t._v(" 1. 概念")]),t._v(" "),s("p",[t._v("递归是一个树结构，从字面可以其理解为重复“递推”和“回归”的过程，当“递推”到达底部时就会开始“回归”，其过程相当于树的深度优先遍历。")]),t._v(" "),s("p",[t._v("迭代是一个环结构，从初始状态开始，每次迭代都遍历这个环，并更新状态，多次迭代直到到达结束状态。")]),t._v(" "),s("p",[t._v("相同点：递归和迭代都是循环的一种。")]),t._v(" "),s("p",[t._v("不同点：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("程序结构不同")]),t._v(" "),s("ul",[s("li",[t._v("递归是重复调用函数自身实现循环。")]),t._v(" "),s("li",[t._v("迭代是函数内某段代码实现循环。")]),t._v(" "),s("li",[t._v("其中，迭代与普通循环的区别是：迭代时，循环代码中参与运算的变量同时是保存结果的变量，当前保存的结果作为下一次循环计算的初始值。")])])]),t._v(" "),s("li",[s("p",[t._v("算法结束方式不同")]),t._v(" "),s("ul",[s("li",[t._v("递归循环中，遇到满足终止条件的情况时逐层返回来结束。")]),t._v(" "),s("li",[t._v("迭代则使用计数器结束循环。")]),t._v(" "),s("li",[t._v("当然很多情况都是多种循环混合采用，这要根据具体需求。")])])]),t._v(" "),s("li",[s("p",[t._v("效率不同")]),t._v(" "),s("ul",[s("li",[t._v("在循环的次数较大的时候，迭代的效率明显高于递归。因为，大量的递归调用会建立函数的副本，会耗费大量的时间和内存。而迭代则不需要反复调用函数和占用额外的内存。")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-实例"}},[t._v("#")]),t._v(" 2. 实例")]),t._v(" "),s("p",[t._v("（1）计算 n!")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fa")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fa")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 迭代")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fa2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("（2）斐波那契数列")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 迭代")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("看了递归和迭代的概念和例子，再去理解 DNS 的递归查询和迭代就简单多了。")]),t._v(" "),s("h3",{attrs:{id:"_3-尾调用优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-尾调用优化"}},[t._v("#")]),t._v(" 3. 尾调用优化")]),t._v(" "),s("p",[t._v("尾调用（Tail Call）是函数式编程的一个重要概念，是指某个函数的最后一步是调用另一个函数，比如：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("g")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("函数调用会在内存形成一个“调用记录”，又称“调用帧”（call frame），保存调用位置和内部变量等信息。如果在函数A的内部调用函数B，那么在A的调用帧上方，还会形成一个B的调用帧。等到B运行结束，将结果返回到A，B的调用帧才会消失。如果函数B内部还调用函数C，那就还有一个C的调用帧，以此类推。所有的调用帧，就形成一个“调用栈”（"),s("code",[t._v("call stack")]),t._v("）。")]),t._v(" "),s("p",[t._v("尾调用由于是函数的最后一步操作，所以不需要保留外层函数的调用帧，因为调用位置、内部变量等信息都不会再用到了，只要直接用内层函数的调用帧，取代外层函数的调用帧就可以了。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("g")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("g")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("g")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上面代码中，如果函数"),s("code",[t._v("g")]),t._v("不是尾调用，函数"),s("code",[t._v("f")]),t._v("就需要保存内部变量"),s("code",[t._v("m")]),t._v("和"),s("code",[t._v("n")]),t._v("的值、"),s("code",[t._v("g")]),t._v("的调用位置等信息。但由于调用"),s("code",[t._v("g")]),t._v("之后，函数"),s("code",[t._v("f")]),t._v("就结束了，所以执行到最后一步，完全可以删除"),s("code",[t._v("f(x)")]),t._v("的调用帧，只保留"),s("code",[t._v("g(3)")]),t._v("的调用帧。")]),t._v(" "),s("p",[t._v("这就叫做“尾调用优化”（"),s("code",[t._v("Tail call optimization")]),t._v("），即只保留内层函数的调用帧。如果所有函数都是尾调用，那么完全可以做到每次执行时，调用帧只有一项，这将大大节省内存。")]),t._v(" "),s("h3",{attrs:{id:"_4-尾递归"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-尾递归"}},[t._v("#")]),t._v(" 4. 尾递归")]),t._v(" "),s("p",[t._v("函数调用自身，称为递归。如果尾调用自身，就称为尾递归。")]),t._v(" "),s("p",[t._v("递归非常耗费内存，因为需要同时保存成千上百个调用帧，很容易发生“栈溢出”错误（"),s("code",[t._v("stack overflow")]),t._v("）。但对于尾递归来说，由于只存在一个调用帧，所以永远不会发生“栈溢出”错误。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("factorial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("factorial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("factorial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 120")]),t._v("\n")])])]),s("p",[t._v("上面代码是一个阶乘函数，计算n的阶乘，最多需要保存"),s("code",[t._v("n")]),t._v("个调用记录，复杂度 "),s("code",[t._v("O(n)")]),t._v(" 。")]),t._v(" "),s("p",[t._v("如果改写成尾递归，只保留一个调用记录，复杂度 "),s("code",[t._v("O(1)")]),t._v(" 。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("factorial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("factorial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("factorial")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 120")]),t._v("\n")])])]),s("p",[t._v("还有一个比较著名的例子，就是计算 Fibonacci 数列，也能充分说明尾递归优化的重要性。")]),t._v(" "),s("p",[t._v("非尾递归的 Fibonacci 数列实现如下。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fibonacci")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fibonacci")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fibonacci")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fibonacci")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 89")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fibonacci")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 超时")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fibonacci")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 超时")]),t._v("\n")])])]),s("p",[t._v("尾递归优化过的 Fibonacci 数列实现如下。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fibonacci2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ac1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ac2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ac2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fibonacci2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ac2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ac1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ac2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fibonacci2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 573147844013817200000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fibonacci2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7.0330367711422765e+208")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fibonacci2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Infinity")]),t._v("\n")])])]),s("h2",{attrs:{id:"五、相关资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、相关资料"}},[t._v("#")]),t._v(" 五、相关资料")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/06/dns.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("DNS 原理入门"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.zhihu.com/question/29998374/answer/399176525",target:"_blank",rel:"noopener noreferrer"}},[t._v("顶级域名 一级域名 二级域名 三级域名什么区别?"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6844903752890056711",target:"_blank",rel:"noopener noreferrer"}},[t._v("DNS解析流程"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.cn/post/6990344840181940261",target:"_blank",rel:"noopener noreferrer"}},[t._v("是时候搞懂 DNS 了"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/qq_40817827/article/details/89950325",target:"_blank",rel:"noopener noreferrer"}},[t._v("迭代和递归的理解和区别"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/32bcc45efd32",target:"_blank",rel:"noopener noreferrer"}},[t._v("递归与迭代的区别"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/daijin888888/article/details/70157153",target:"_blank",rel:"noopener noreferrer"}},[t._v("递归和迭代"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/function",target:"_blank",rel:"noopener noreferrer"}},[t._v("尾调用优化"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);