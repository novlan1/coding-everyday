(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{727:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("ul",[s("li",[s("a",{attrs:{href:"#2-%E6%AD%A3%E5%88%99%E4%B8%AD%E7%9A%84%E5%92%8C%E6%9C%89%E6%9C%AC%E8%B4%A8%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("2. 正则中的"),s("code",[t._v("()")]),t._v("和"),s("code",[t._v("[]")]),t._v("有本质的区别")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#21-%E5%9C%86%E6%8B%AC%E5%8F%B7%E6%98%AF%E7%BB%84%E4%B8%BB%E8%A6%81%E5%BA%94%E7%94%A8%E5%9C%A8%E9%99%90%E5%88%B6%E5%A4%9A%E9%80%89%E7%BB%93%E6%9E%84%E7%9A%84%E8%8C%83%E5%9B%B4%E5%88%86%E7%BB%84%E6%8D%95%E8%8E%B7%E6%96%87%E6%9C%AC%E7%8E%AF%E8%A7%86%E7%89%B9%E6%AE%8A%E6%A8%A1%E5%BC%8F%E5%A4%84%E7%90%86"}},[t._v("2.1. 圆括号()是组，主要应用在限制多选结构的范围/分组/捕获文本/环视/特殊模式处理")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#22-%E6%96%B9%E6%8B%AC%E5%8F%B7%E6%98%AF%E5%8D%95%E4%B8%AA%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E9%9B%86%E6%8E%92%E9%99%A4%E5%AD%97%E7%AC%A6%E9%9B%86%E5%91%BD%E5%90%8D%E5%AD%97%E7%AC%A6%E9%9B%86"}},[t._v("2.2. 方括号是单个匹配，字符集/排除字符集/命名字符集")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#23-%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9"}},[t._v("2.3. "),s("code",[t._v("[]")]),t._v("注意事项")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#3-%E6%AD%A3%E5%88%99%E6%96%AD%E8%A8%80"}},[t._v("3. 正则断言")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#4-%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E7%94%B1%E9%87%8D%E5%A4%8D%E5%AD%90%E4%B8%B2%E6%9E%84%E6%88%90%E6%AF%94%E5%A6%82abcabcabab"}},[t._v("4. 判断是否由重复子串构成，比如"),s("code",[t._v("abcabc")]),t._v("，"),s("code",[t._v("abab")])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#5-ocb"}},[t._v("5. "),s("code",[t._v("o|cb")])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#6-x"}},[t._v("6. "),s("code",[t._v("(x)")])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#7-x"}},[t._v("7. "),s("code",[t._v("(?:x)")])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#8-python%E7%9A%84re%E5%BA%93%E4%B8%ADmatch%E6%96%B9%E6%B3%95%E5%92%8Csearch%E7%9A%84%E4%B8%8D%E5%90%8C"}},[t._v("8. Python的re库中"),s("code",[t._v("match")]),t._v("方法和"),s("code",[t._v("search")]),t._v("的不同")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#9-%E5%B8%B8%E8%A7%81%E6%AD%A3%E5%88%99"}},[t._v("9. 常见正则")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#91-mac%E5%92%8Cip%E5%9C%B0%E5%9D%80%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D"}},[t._v("9.1. MAC和IP地址正则匹配")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#92-%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D%E4%B8%A4%E4%BD%8D%E4%BB%A5%E5%86%85%E6%9C%89%E6%95%88%E6%95%B0%E5%AD%97"}},[t._v("9.2. 正则匹配两位以内有效数字")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#93-%E8%8E%B7%E5%8F%96cookie%E7%9A%84%E6%AD%A3%E5%88%99"}},[t._v("9.3. 获取"),s("code",[t._v("cookie")]),t._v("的正则")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#94-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%8E%B7%E5%8F%96url%E5%8F%82%E6%95%B0"}},[t._v("9.4. 正则表达式获取URL参数")])])])])]),t._v(" "),s("h3",{attrs:{id:"_1-正则中的-和-有本质的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-正则中的-和-有本质的区别"}},[t._v("#")]),t._v(" 1. 正则中的"),s("code",[t._v("()")]),t._v("和"),s("code",[t._v("[]")]),t._v("有本质的区别")]),t._v(" "),s("ul",[s("li",[t._v("()内的内容表示的是一个子表达式，()本身不匹配任何东西，也不限制匹配任何东西，只是把括号内的内容作为同一个表达式来处理，例如(ab){1,3}，就表示ab一起连续出现最少1次，最多3次。\n如果没有括号的话，ab{1,3},就表示a，后面紧跟的b出现最少1次，最多3次。\n另外，括号在匹配模式中也很重要。")]),t._v(" "),s("li",[s("code",[t._v("[]")]),t._v("表示匹配的字符在"),s("code",[t._v("[]")]),t._v("中，并且只能出现一次，并且特殊字符写在"),s("code",[t._v("[]")]),t._v("会被当成普通字符来匹配。例如[(a)]，会匹配(、a、)、这三个字符。")])]),t._v(" "),s("p",[t._v("所以() [] 无论是作用还是表示的含义，都有天壤之别，没什么联系")]),t._v(" "),s("h4",{attrs:{id:"_1-1-圆括号-是组-主要应用在限制多选结构的范围-分组-捕获文本-环视-特殊模式处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-圆括号-是组-主要应用在限制多选结构的范围-分组-捕获文本-环视-特殊模式处理"}},[t._v("#")]),t._v(" 1.1. 圆括号()是组，主要应用在限制多选结构的范围/分组/捕获文本/环视/特殊模式处理")]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("(abc|bcd|cde)")]),t._v("，表示这一段是abc、bcd、cde三者之一均可，顺序也必须一致")]),t._v(" "),s("li",[s("code",[t._v("(abc)?")]),t._v("，表示这一组要么一起出现，要么不出现，出现则按此组内的顺序出现")]),t._v(" "),s("li",[s("code",[t._v("(?:abc)")]),t._v("表示找到这样abc这样一组，但不记录，不保存到$变量中，否则可以通过$x取第几个括号所匹配到的项，比如："),s("code",[t._v("(aaa)(bbb)(ccc)(?:ddd)(eee)")]),t._v("，可以用"),s("code",[t._v("$1")]),t._v("获取"),s("code",[t._v("(aaa)")]),t._v("匹配到的内容，而"),s("code",[t._v("$3")]),t._v("则获取到了"),s("code",[t._v("(ccc)")]),t._v("匹配到的内容，而"),s("code",[t._v("$4")]),t._v("则获取的是由"),s("code",[t._v("(eee)")]),t._v("匹配到的内容，因为前一对括号没有保存变量")]),t._v(" "),s("li",[s("code",[t._v("a(?=bbb)")]),t._v(" 顺序环视 表示a后面必须紧跟3个连续的b")]),t._v(" "),s("li",[s("code",[t._v("(?i:xxxx)")]),t._v(" 不区分大小写 (?s:.*) 跨行匹配.可以匹配回车符")])]),t._v(" "),s("h4",{attrs:{id:"_1-2-方括号是单个匹配-字符集-排除字符集-命名字符集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-方括号是单个匹配-字符集-排除字符集-命名字符集"}},[t._v("#")]),t._v(" 1.2. 方括号是单个匹配，字符集/排除字符集/命名字符集")]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("[0-3]")]),t._v("，表示找到这一个位置上的字符只能是0到3这四个数字，与(abc|bcd|cde)的作用比较类似，但圆括号可以匹配多个连续的字符，而一对方括号只能匹配单个字符")]),t._v(" "),s("li",[s("code",[t._v("[^0-3]")]),t._v("，表示找到这一个位置上的字符只能是除了0到3之外的所有字符")]),t._v(" "),s("li",[s("code",[t._v("[:digit:]")]),t._v("：0-9，"),s("code",[t._v("[:alnum:]")]),t._v(" ：A-Za-z0-9")])]),t._v(" "),s("h4",{attrs:{id:"_1-3-注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-注意事项"}},[t._v("#")]),t._v(" 1.3. "),s("code",[t._v("[]")]),t._v("注意事项")]),t._v(" "),s("ul",[s("li",[t._v("中括号的"),s("code",[t._v("-")]),t._v("有特殊意义，表示区间")]),t._v(" "),s("li",[s("code",[t._v("[.]")]),t._v("中括号的点失去通配符的意义，变成了一个纯字符串 "),s("code",[t._v("点")])])]),t._v(" "),s("h3",{attrs:{id:"_2-正则断言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-正则断言"}},[t._v("#")]),t._v(" 2. 正则断言")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("(?=)")]),t._v("这个语法结构在正则里表示“设定后面是”的意思。")]),t._v(" "),s("li",[s("code",[t._v("(?=.*[a-zA-Z])")]),t._v("  这句的意思就是后面必须有一位大写或小写字母")]),t._v(" "),s("li",[s("code",[t._v("(?=.*[1-9])")]),t._v(" 这句的意思是后面必须有一位数字")])]),t._v(" "),s("p",[t._v("正则表达式从文本头部向尾部开始解析，文本尾部方向为“前”，头部方向为“后”\n前瞻：正则表达式匹配到规则的时候，向前检查是否符合断言，后顾/后瞻方向相反（javascript不支持）")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("reg(?=exp)")]),t._v("，零宽度正先行断言，reg匹配的内容后面内容满足exp规则")]),t._v(" "),s("li",[s("code",[t._v("reg(?!exp)")]),t._v("，零宽度负先行断言，reg匹配的内容后面内容不满足exp规则")]),t._v(" "),s("li",[s("code",[t._v("(?<=exp)reg")]),t._v("，零宽度正后发断言，reg匹配的内容前面内容满足exp规则")]),t._v(" "),s("li",[s("code",[t._v("(?<!exp)reg")]),t._v("，零宽度负后发断言，reg匹配的内容前面内容不满足exp规则")])]),t._v(" "),s("p",[t._v('"先行"表示待校验的位置在前，即校验的位置在exp匹配的内容之前\n"正"表示exp描述的规则，匹配校验位置后面的内容')]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[s("code",[t._v("x(?=exp)")]),t._v("  匹配 exp 前面的位置"),s("code",[t._v("x")])])]),t._v(" "),s("ul",[s("li",[t._v("比如，要匹配后面跟着百分号的数字，可以写成"),s("code",[t._v("/\\d+(?=%)/")])]),t._v(" "),s("li",[s("code",[t._v('"How are you doing"')]),t._v(" 正则"),s("code",[t._v('"(.+(?=ing))"')]),t._v(" 这里取ing前所有的字符，值为"),s("code",[t._v('"How are you do";')])])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("(?<=exp)x")]),t._v("  匹配 exp 后面的位置"),s("code",[t._v("x")])])]),t._v(" "),s("ul",[s("li",[t._v("如 "),s("code",[t._v('"How are you doing"')]),t._v(" 正则"),s("code",[t._v('"((?<=How).+)"')]),t._v(" 这里取"),s("code",[t._v('"How"')]),t._v("之后所有的字符，值为"),s("code",[t._v('" are you doing";')])])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("x(?!exp)")]),t._v("  匹配后面跟的不是 exp 的位置"),s("code",[t._v("x")])])]),t._v(" "),s("ul",[s("li",[t._v("比如，要匹配后面跟的不是百分号的数字，就要写成"),s("code",[t._v("/\\d+(?!%)/")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v('"123abc"')]),t._v(" 正则 "),s("code",[t._v('"\\d{3}(?!\\d)"')]),t._v("匹配3位数字后非数字的结果")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("(?<!exp)x")]),t._v("  匹配前面不是 exp 的位置"),s("code",[t._v("x")])])]),t._v(" "),s("ul",[s("li",[t._v("如 "),s("code",[t._v('"abc123 "')]),t._v(" 正则"),s("code",[t._v('"(?<![0-9])123"')]),t._v(' 匹配"123"前面是非数字的结果也可写成'),s("code",[t._v('"(?!<\\d)123"')])])])])]),t._v(" "),s("p",[t._v("另外，"),s("code",[t._v("?:")]),t._v(" 非获取匹配")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("(?:x)")]),t._v("匹配x但是不会捕获，不会 $n 获取到（与()有区别），但是可以被替换")])]),t._v(" "),s("h3",{attrs:{id:"_3-o-cb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-o-cb"}},[t._v("#")]),t._v(" 3. "),s("code",[t._v("o|cb")])]),t._v(" "),s("p",[s("code",[t._v("o|cb")]),t._v("出现"),s("code",[t._v("o")]),t._v("或者"),s("code",[t._v("cb")]),t._v("，不是"),s("code",[t._v("o")]),t._v("或者"),s("code",[t._v("c")]),t._v("、然后后面加"),s("code",[t._v("b")]),t._v("。可以使用"),s("code",[t._v("(o|c)b")])]),t._v(" "),s("h3",{attrs:{id:"_4-x"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-x"}},[t._v("#")]),t._v(" 4. "),s("code",[t._v("(x)")])]),t._v(" "),s("ol",[s("li",[t._v("模式 "),s("code",[t._v("/(foo) (bar) \\1 \\2/")]),t._v(" 中的 "),s("code",[t._v("'(foo)'")]),t._v(" 和 "),s("code",[t._v("'(bar)'")]),t._v(" 匹配并记住字符串 "),s("code",[t._v('"foo bar foo bar"')]),t._v(" 中前两个单词。")]),t._v(" "),s("li",[t._v("模式中的 "),s("code",[t._v("\\1")]),t._v(" 和 "),s("code",[t._v("\\2")]),t._v(" 表示第一个和第二个被捕获括号匹配的子字符串，即 "),s("code",[t._v("foo")]),t._v(" 和 "),s("code",[t._v("bar")]),t._v("，匹配了原字符串中的后两个单词。")]),t._v(" "),s("li",[t._v("注意 "),s("code",[t._v("\\1")]),t._v("、"),s("code",[t._v("\\2")]),t._v("、...、"),s("code",[t._v("\\n")]),t._v(" 是用在正则表达式的匹配环节，详情可以参阅后文的 "),s("code",[t._v("\\n")]),t._v(" 条目。")]),t._v(" "),s("li",[t._v("而在正则表达式的替换环节，则要使用像 "),s("code",[t._v("$1、$2、...、$n")]),t._v(" 这样的语法，例如，"),s("code",[t._v("'bar foo'.replace(/(...) (...)/, '$2 $1')")]),t._v("。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("$&")]),t._v(" 表示整个用于匹配的原字符串")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_5-x"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-x"}},[t._v("#")]),t._v(" 5. "),s("code",[t._v("(?:x)")])]),t._v(" "),s("ol",[s("li",[t._v("匹配 "),s("code",[t._v("'x'")]),t._v(" 但是不记住匹配项。这种括号叫作非捕获括号，使得你能够定义与正则表达式运算符一起使用的子表达式。")]),t._v(" "),s("li",[t._v("看看这个例子 "),s("code",[t._v("/(?:foo){1,2}/")]),t._v("。如果表达式是 "),s("code",[t._v("/foo{1,2}/，{1,2}")]),t._v(" 将只应用于 "),s("code",[t._v("'foo'")]),t._v(" 的最后一个字符 "),s("code",[t._v("'o'")]),t._v("。如果使用非捕获括号，则 "),s("code",[t._v("{1,2}")]),t._v(" 会应用于整个 "),s("code",[t._v("'foo'")]),t._v(" 单词。")])]),t._v(" "),s("h3",{attrs:{id:"_6-python的re库中match方法和search的不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-python的re库中match方法和search的不同"}},[t._v("#")]),t._v(" 6. Python的re库中"),s("code",[t._v("match")]),t._v("方法和"),s("code",[t._v("search")]),t._v("的不同")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("match")]),t._v("方法从字符串最开始位置开始")]),t._v(" "),s("li",[s("code",[t._v("search")]),t._v("方法不会从最开始匹配")])]),t._v(" "),s("h3",{attrs:{id:"_7-常见正则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-常见正则"}},[t._v("#")]),t._v(" 7. 常见正则")]),t._v(" "),s("h4",{attrs:{id:"_7-1-mac和ip地址正则匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-mac和ip地址正则匹配"}},[t._v("#")]),t._v(" 7.1. MAC和IP地址正则匹配")]),t._v(" "),s("ol",[s("li",[t._v("MAC地址正则匹配：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Fa"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f0"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Fa"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f0"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("IP地址正则匹配：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\\d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\\d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\\d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\\d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("其中：")]),t._v(" "),s("p",[s("code",[t._v("2(5[0-5]|[0-4]\\d)")]),t._v(" 匹配：200 ~ 255\n"),s("code",[t._v("[0-1]?\\d{1,2}")]),t._v(" 匹配：0 ~ 199")]),t._v(" "),s("h4",{attrs:{id:"_7-2-正则匹配两位以内有效数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-正则匹配两位以内有效数字"}},[t._v("#")]),t._v(" 7.2. 正则匹配两位以内有效数字")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\d+([.]{1}(\\d){0,2}){0,1}$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n")])])]),s("h4",{attrs:{id:"_7-3-获取cookie的正则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-获取cookie的正则"}},[t._v("#")]),t._v(" 7.3. 获取"),s("code",[t._v("cookie")]),t._v("的正则")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从cookie里面取")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=([^;]*)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_7-4-正则表达式获取url参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-正则表达式获取url参数"}},[t._v("#")]),t._v(" 7.4. 正则表达式获取URL参数")]),t._v(" "),s("p",[t._v("使用到的正则表达式：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("参数名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getURLParam")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("search"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[^?&]?"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=([^&]+)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" search"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("还可以直接用API：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URLSearchParams")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"_7-5-判断是否由重复子串构成-比如abcabc-abab"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-判断是否由重复子串构成-比如abcabc-abab"}},[t._v("#")]),t._v(" 7.5. 判断是否由重复子串构成，比如"),s("code",[t._v("abcabc")]),t._v("，"),s("code",[t._v("abab")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("solution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^(\\w+)\\1+$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);