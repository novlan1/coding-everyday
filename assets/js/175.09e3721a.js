(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{779:function(t,v,e){"use strict";e.r(v);var a=e(42),_=Object(a.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("ul",[e("li",[e("a",{attrs:{href:"#1-jquery-%E5%92%8C-vue-%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("1. jQuery 和 Vue 的区别")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#2-%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3mvvm"}},[t._v("2. 如何理解MVVM？")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#3-vue-%E4%B8%89%E8%A6%81%E7%B4%A0"}},[t._v("3. Vue 三要素")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#4-%E4%BB%80%E4%B9%88%E6%98%AF%E6%A8%A1%E6%9D%BF"}},[t._v("4. 什么是模板")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#5-vue%E7%9A%84%E6%95%B4%E4%B8%AA%E5%AE%9E%E7%8E%B0%E6%B5%81%E7%A8%8B"}},[t._v("5. Vue的整个实现流程")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#6-computed%E5%92%8Cwatch%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("6. computed和watch的区别")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#61-computed-%E7%89%B9%E6%80%A7"}},[t._v("6.1. computed 特性")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#62-watch-%E7%89%B9%E6%80%A7"}},[t._v("6.2. watch 特性")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#7-methodswatchcomputed%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("7. "),e("code",[t._v("methods")]),t._v(","),e("code",[t._v("watch")]),t._v(","),e("code",[t._v("computed")]),t._v("的区别")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#8-v-if-vs-v-show"}},[t._v("8. "),e("code",[t._v("v-if")]),t._v("vs "),e("code",[t._v("v-show")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#9-vue%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A%E5%8E%9F%E7%90%86"}},[t._v("9. vue双向绑定原理")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#10-%E4%B8%BA%E4%BB%80%E4%B9%88vue%E7%BB%84%E4%BB%B6%E7%9A%84%E5%B1%9E%E6%80%A7%E6%9C%89%E7%9A%84%E9%9C%80%E8%A6%81%E5%8A%A0%E5%86%92%E5%8F%B7%E6%9C%89%E7%9A%84%E4%B8%8D%E7%94%A8"}},[t._v("10. 为什么vue组件的属性，有的需要加冒号“:”，有的不用?")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#11-%E7%90%86%E8%A7%A3-vue-%E4%BF%AE%E9%A5%B0%E7%AC%A6sync"}},[t._v("11. 理解 vue 修饰符"),e("code",[t._v("sync")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#12-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%9C%A8-vue-%E7%9A%84%E7%BB%84%E4%BB%B6%E4%B8%ADdata-%E8%A6%81%E7%94%A8-function-%E8%BF%94%E5%9B%9E%E5%AF%B9%E8%B1%A1%E5%91%A2"}},[t._v("12. 为什么在 vue 的组件中，data 要用 function 返回对象呢？")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#13-vue%E4%BA%8B%E4%BB%B6%E4%BF%AE%E9%A5%B0%E7%AC%A6prevent-%E5%92%8Cpassive"}},[t._v("13. Vue事件修饰符——.prevent 和.passive")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#131-prevent"}},[t._v("13.1. prevent")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#132-passive"}},[t._v("13.2. passive")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#14-%E8%A6%86%E7%9B%96elementui%E6%A0%B7%E5%BC%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E5%8A%9E%E6%B3%95"}},[t._v("14. 覆盖elementui样式的几种办法")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#15-router%E5%92%8Croute%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("15. "),e("code",[t._v("$router")]),t._v("和"),e("code",[t._v("$route")]),t._v("的区别")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#16-vue-%E4%B8%AD%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E6%89%A7%E8%A1%8C%E7%9A%84%E5%85%88%E5%90%8E%E9%A1%BA%E5%BA%8F"}},[t._v("16. Vue 中父子组件执行的先后顺序")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#17-vue-%E5%88%9B%E5%BB%BA%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E5%92%8C%E6%96%B9%E6%B3%95"}},[t._v("17. Vue 创建全局变量和方法")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#18-cli-30%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F"}},[t._v("18. "),e("code",[t._v("cli-3.0")]),t._v("环境变量")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#19-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%BF%E7%94%A8"}},[t._v("19. 环境变量的使用")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#20-slot%E7%9A%84%E7%90%86%E8%A7%A3"}},[t._v("20. slot的理解")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E5%85%B7%E5%90%8D%E6%8F%92%E6%A7%BD"}},[t._v("具名插槽")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD"}},[t._v("作用域插槽")])])])])]),t._v(" "),e("h3",{attrs:{id:"_1-jquery-和-vue-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-jquery-和-vue-的区别"}},[t._v("#")]),t._v(" 1. jQuery 和 Vue 的区别")]),t._v(" "),e("ol",[e("li",[t._v("数据和视图的分离，解耦（开放封闭原则，对修改封闭，对扩展开放）；")]),t._v(" "),e("li",[t._v("以数据驱动视图，只关心数据变化，DOM操作被封装。")])]),t._v(" "),e("h3",{attrs:{id:"_2-如何理解mvvm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何理解mvvm"}},[t._v("#")]),t._v(" 2. 如何理解MVVM？")]),t._v(" "),e("p",[t._v("MVC：M-Model数据，V-View 视图、界面，C-Controller控制器，逻辑处理\nMVVM：Vm是一个桥，ViewModel 主要通过"),e("code",[t._v("DOM Listener")]),t._v(" 和 "),e("code",[t._v("Data Bindings")]),t._v(" 连接"),e("code",[t._v("View")]),t._v("和"),e("code",[t._v("Model")])]),t._v(" "),e("p",[t._v("1）三大框架都是数据驱动型的框架\n2）vue及angular是双向数据绑定；react是单向数据绑定。React貌似使用的也是Object.defineProperty 监控数据，只是没有进一步把表单控件的事件封装进 v-model\n3）Vuex、Redux 都是单项数据绑定的，即 M 的变化可以自动更新到 V，但 V 的变化必须手动触发事件更新到 M，这种单项数据绑定使数据更易于跟踪管理和维护。")]),t._v(" "),e("h3",{attrs:{id:"_3-vue-三要素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-vue-三要素"}},[t._v("#")]),t._v(" 3. Vue 三要素")]),t._v(" "),e("ul",[e("li",[t._v("响应式（vue如何监听到data 的每个属性变化）")]),t._v(" "),e("li",[t._v("模板引擎（模板如何被解析，指令如何处理）")]),t._v(" "),e("li",[t._v("渲染（模板如何被渲染成html，渲染过程）")])]),t._v(" "),e("h3",{attrs:{id:"_4-什么是模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-什么是模板"}},[t._v("#")]),t._v(" 4. 什么是模板")]),t._v(" "),e("ul",[e("li",[t._v("Html是静态的、没有逻辑，模板是动态的、有逻辑")]),t._v(" "),e("li",[t._v("模板：字符串；有逻辑；嵌入JS变量")]),t._v(" "),e("li",[t._v("模板必须转换为JS代码  [有逻辑(JS才能实现)、转为html渲染页面(JS才能实现)]")])]),t._v(" "),e("h3",{attrs:{id:"_5-vue的整个实现流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-vue的整个实现流程"}},[t._v("#")]),t._v(" 5. Vue的整个实现流程")]),t._v(" "),e("ol",[e("li",[t._v("解析模板成"),e("code",[t._v("render")]),t._v("函数")]),t._v(" "),e("li",[t._v("响应式开始监听")]),t._v(" "),e("li",[t._v("首次渲染，显示页面，且绑定依赖")]),t._v(" "),e("li",[t._v("data属性变化，触发"),e("code",[t._v("rerender")])])]),t._v(" "),e("h3",{attrs:{id:"_6-computed和watch的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-computed和watch的区别"}},[t._v("#")]),t._v(" 6. computed和watch的区别")]),t._v(" "),e("h4",{attrs:{id:"_6-1-computed-特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-computed-特性"}},[t._v("#")]),t._v(" 6.1. computed 特性")]),t._v(" "),e("ol",[e("li",[t._v("是计算值")]),t._v(" "),e("li",[t._v("应用：就是简化"),e("code",[t._v("tempalte")]),t._v("里面"),e("code",[t._v("{{}}")]),t._v("计算和处理"),e("code",[t._v("props")]),t._v("或"),e("code",[t._v("$emit")]),t._v("的传值")]),t._v(" "),e("li",[t._v("具有缓存性，页面重新渲染值不变化时,计算属性会立即返回之前的计算结果，而不必再次执行函数")])]),t._v(" "),e("h4",{attrs:{id:"_6-2-watch-特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-watch-特性"}},[t._v("#")]),t._v(" 6.2. watch 特性")]),t._v(" "),e("ol",[e("li",[t._v("是观察的动作")]),t._v(" "),e("li",[t._v("应用：监听"),e("code",[t._v("props")]),t._v("，"),e("code",[t._v("$emit")]),t._v("或本组件的值执行"),e("strong",[t._v("异步操作")])]),t._v(" "),e("li",[t._v("无缓存性，页面重新渲染时值不变化也会执行")])]),t._v(" "),e("h3",{attrs:{id:"_7-methods-watch-computed的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-methods-watch-computed的区别"}},[t._v("#")]),t._v(" 7. "),e("code",[t._v("methods")]),t._v(","),e("code",[t._v("watch")]),t._v(","),e("code",[t._v("computed")]),t._v("的区别")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("computed")]),t._v("属性的结果会被缓存，除非依赖的响应式属性变化才会重新计算。主要当作属性来使用；")]),t._v(" "),e("li",[e("code",[t._v("methods")]),t._v("方法表示一个具体的操作，主要书写业务逻辑；")]),t._v(" "),e("li",[e("code",[t._v("watch")]),t._v("一个对象，键是需要观察的表达式，值是对应回调函数。主要用来监听某些特定数据的变化，从而进行某些具体的业务逻辑操作；"),e("strong",[t._v("可以看作是"),e("code",[t._v("computed")]),t._v("和"),e("code",[t._v("methods")]),t._v("的结合体")]),t._v("；")])]),t._v(" "),e("h3",{attrs:{id:"_8-v-ifvs-v-show"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-v-ifvs-v-show"}},[t._v("#")]),t._v(" 8. "),e("code",[t._v("v-if")]),t._v("vs "),e("code",[t._v("v-show")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("v-if")]),t._v(" 是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建。")]),t._v(" "),e("li",[e("code",[t._v("v-if")]),t._v(" 也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。")]),t._v(" "),e("li",[t._v("相比之下，"),e("code",[t._v("v-show")]),t._v(" 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 "),e("code",[t._v("CSS(display)")]),t._v(" 进行切换。")]),t._v(" "),e("li",[t._v("一般来说，"),e("code",[t._v("v-if")]),t._v(" 有更高的切换开销，而 "),e("code",[t._v("v-show")]),t._v(" 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 "),e("code",[t._v("v-show")]),t._v(" 较好；如果在运行时条件很少改变，则使用 "),e("code",[t._v("v-if")]),t._v(" 较好。")])]),t._v(" "),e("h3",{attrs:{id:"_9-vue双向绑定原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-vue双向绑定原理"}},[t._v("#")]),t._v(" 9. vue双向绑定原理")]),t._v(" "),e("p",[t._v("vue数据双向绑定是通过"),e("strong",[t._v("数据劫持")]),t._v("结合"),e("strong",[t._v("发布者-订阅者模式")]),t._v("的方式来实现的。利用了 "),e("code",[t._v("Object.defineProperty()")]),t._v(" 这个方法重新定义了对象获取属性值(get)和设置属性值(set)。")]),t._v(" "),e("h3",{attrs:{id:"_10-为什么vue组件的属性-有的需要加冒号-有的不用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-为什么vue组件的属性-有的需要加冒号-有的不用"}},[t._v("#")]),t._v(" 10. 为什么vue组件的属性，有的需要加冒号“:”，有的不用?")]),t._v(" "),e("p",[t._v("加冒号的，说明后面的是一个"),e("code",[t._v("变量或者表达式")]),t._v("，没加冒号的后面就是对应的"),e("code",[t._v("字符串字面量")])]),t._v(" "),e("h3",{attrs:{id:"_11-理解-vue-修饰符sync"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-理解-vue-修饰符sync"}},[t._v("#")]),t._v(" 11. 理解 vue 修饰符"),e("code",[t._v("sync")])]),t._v(" "),e("p",[e("code",[t._v("sync")]),t._v("会被扩展为一个自动更新父组件属性的 "),e("code",[t._v("v-on")]),t._v(" 监听器。")]),t._v(" "),e("p",[t._v("示例代码如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<comp :foo.sync="bar"></comp>\n')])])]),e("p",[t._v("会被扩展为：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<comp :foo="bar" @update:foo="val => bar = val"></comp>\n')])])]),e("p",[t._v("当子组件需要更新 foo 的值时，它需要显式地触发一个更新事件：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("this.$emit('update:foo', newValue)\n")])])]),e("h3",{attrs:{id:"_12-为什么在-vue-的组件中-data-要用-function-返回对象呢"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-为什么在-vue-的组件中-data-要用-function-返回对象呢"}},[t._v("#")]),t._v(" 12. 为什么在 vue 的组件中，data 要用 function 返回对象呢？")]),t._v(" "),e("ul",[e("li",[t._v("因为组件可能被用来创建多个实例。如果 data 仍然是一个纯粹的对象，则所有的实例将共享引用同一个数据对象！通过提供 data 函数，每次创建一个新实例后，我们能够调用 data 函数，从而返回初始数据的一个全新副本数据对象。")]),t._v(" "),e("li",[t._v("如果不用"),e("code",[t._v("function return")]),t._v(" 每个组件的data都是内存的同一个地址，那一个数据改变其他也改变了。 用"),e("code",[t._v("function return")]),t._v(" 其实就相当于申明了新的变量，相互独立，自然就不会有这样的问题")])]),t._v(" "),e("h3",{attrs:{id:"_13-vue事件修饰符-prevent-和-passive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-vue事件修饰符-prevent-和-passive"}},[t._v("#")]),t._v(" 13. Vue事件修饰符——.prevent 和.passive")]),t._v(" "),e("p",[e("code",[t._v("prevent")]),t._v(" 是拦截默认事件，"),e("code",[t._v("passive")]),t._v("是不拦截默认事件。")]),t._v(" "),e("h4",{attrs:{id:"_13-1-prevent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-prevent"}},[t._v("#")]),t._v(" 13.1. prevent")]),t._v(" "),e("ul",[e("li",[t._v("某些标签拥有自身的默认事件，如"),e("code",[t._v('a[href="#"]')]),t._v("，"),e("code",[t._v('button[type="submit"]')]),t._v(" 这种标签在冒泡结束后会开始执行默认事件。注意默认事件虽然是冒泡后开始，但不会因为stop阻止事件传递而停止。")])]),t._v(" "),e("h4",{attrs:{id:"_13-2-passive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-passive"}},[t._v("#")]),t._v(" 13.2. passive")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("passive")]),t._v("这个修饰符会执行默认方法。你们可能会问，明明默认执行为什么会设置这样一个修饰符。这就要说一下这个修饰符的本意了。")]),t._v(" "),e("li",[t._v("【浏览器只有等内核线程执行到事件监听器对应的JavaScript代码时，才能知道内部是否会调用"),e("code",[t._v("preventDefault")]),t._v("函数来阻止事件的默认行为，所以浏览器本身是没有办法对这种场景进行优化的。这种场景下，用户的手势事件无法快速产生，会导致页面无法快速执行滑动逻辑，从而让用户感觉到页面卡顿。】")]),t._v(" "),e("li",[t._v("通俗点说就是每次事件产生，浏览器都会去查询一下是否有"),e("code",[t._v("preventDefault")]),t._v("阻止该次事件的默认动作。我们加上"),e("code",[t._v("passive")]),t._v("就是为了告诉浏览器，不用查询了，我们没用"),e("code",[t._v("preventDefault")]),t._v("阻止默认动作。")])]),t._v(" "),e("p",[t._v("这里一般用在滚动监听，"),e("code",[t._v("@scoll")]),t._v("，"),e("code",[t._v("@touchmove")]),t._v(" 。因为滚动监听过程中，移动每个像素都会产生一次事件，每次都使用内核线程查询"),e("code",[t._v("prevent")]),t._v("会使滑动卡顿。我们通过"),e("code",[t._v("passive")]),t._v("将内核线程查询跳过，可以大大提升滑动的流畅度。")]),t._v(" "),e("p",[t._v("注："),e("code",[t._v("passive")]),t._v("和"),e("code",[t._v("prevent")]),t._v("冲突，不能同时绑定在一个监听器上。")]),t._v(" "),e("h3",{attrs:{id:"_14-覆盖elementui样式的几种办法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_14-覆盖elementui样式的几种办法"}},[t._v("#")]),t._v(" 14. 覆盖elementui样式的几种办法")]),t._v(" "),e("ul",[e("li",[t._v("用 "),e("code",[t._v("/deep/")]),t._v(" 标签，例如 "),e("code",[t._v("/deep/ .class{ 要覆盖的样式 }")]),t._v(" 。")]),t._v(" "),e("li",[t._v("可以在这个写"),e("code",[t._v("scope")]),t._v("的"),e("code",[t._v("style")]),t._v("标签下面再写一个"),e("code",[t._v("style")]),t._v("标签，专门写要覆盖的样式就好了 。")]),t._v(" "),e("li",[t._v("在"),e("code",[t._v("index.html")]),t._v("中引入一个外部样式，进行覆盖")])]),t._v(" "),e("h3",{attrs:{id:"_15-router和-route的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-router和-route的区别"}},[t._v("#")]),t._v(" 15. "),e("code",[t._v("$router")]),t._v("和"),e("code",[t._v("$route")]),t._v("的区别")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("$router")]),t._v(" 路由器")]),t._v(" "),e("li",[e("code",[t._v("$route")]),t._v(" 单个路由页面")])]),t._v(" "),e("h3",{attrs:{id:"_16-vue-中父子组件执行的先后顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_16-vue-中父子组件执行的先后顺序"}},[t._v("#")]),t._v(" 16. Vue 中父子组件执行的先后顺序")]),t._v(" "),e("ul",[e("li",[t._v("“父亲”先开始自己的"),e("code",[t._v("created")])]),t._v(" "),e("li",[t._v("然后“儿子”开始自己的"),e("code",[t._v("created")]),t._v("和"),e("code",[t._v("mounted")])]),t._v(" "),e("li",[t._v("最后“父亲”再执行自己的"),e("code",[t._v("mounted")])])]),t._v(" "),e("h3",{attrs:{id:"_17-vue-创建全局变量和方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_17-vue-创建全局变量和方法"}},[t._v("#")]),t._v(" 17. Vue 创建全局变量和方法")]),t._v(" "),e("p",[t._v("Vue 创建全局变量和方法有很多种，不过在这我推荐使用先新建一个"),e("code",[t._v("js")]),t._v("文件，这个文件主要就是写一个对象，这个对象直接带属性和方法即可，然后在"),e("code",[t._v("main.js")]),t._v("引入，引入后再用"),e("code",[t._v("Vue.prototype")]),t._v("把引入的文件直接挂接到"),e("code",[t._v("vue")]),t._v("的原型上。\n例如：\n新建的"),e("code",[t._v("js")]),t._v("文件内容：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//在文件的开始先定义一个对象\nconst  aa = {}\n\n// 要全局的变量的话\naa.name = '张三'\n\n// 定义方法\naa.bb= function ( ) {\n   \n};\n\nexport default aa\n")])])]),e("p",[t._v("在"),e("code",[t._v("main.js")]),t._v("中：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 引入封装好的js文件的路径\nimport aa from './***/***/***'\n\n// 把全局js挂接到vue原型上\nVue.prototype.$aa = aa\n")])])]),e("p",[t._v("这样就能用了\n在 vue 实例化上要用变量的话就话就直接"),e("code",[t._v("this.aa.name")]),t._v("，用方法的话就"),e("code",[t._v("this.aa.bb()")]),t._v("这样就OK了")]),t._v(" "),e("h3",{attrs:{id:"_18-cli-3-0环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-cli-3-0环境变量"}},[t._v("#")]),t._v(" 18. "),e("code",[t._v("cli-3.0")]),t._v("环境变量")]),t._v(" "),e("p",[e("code",[t._v("cli-3.0")]),t._v("总共提供了四种方式来制定环境变量：")]),t._v(" "),e("ul",[e("li",[t._v("在根目录添加"),e("code",[t._v(".env")]),t._v("文件，配置所有情况下都会用到的配置")]),t._v(" "),e("li",[t._v("在根目录添加"),e("code",[t._v(".env.local")]),t._v("文件，配置所有情况下都会用到的配置，与"),e("code",[t._v(".env")]),t._v("的区别是只会在本地，该文件不会被"),e("code",[t._v("git")]),t._v("跟踪。")]),t._v(" "),e("li",[t._v("在根目录添加"),e("code",[t._v(".env.[mode]")]),t._v("文件，配置对应某个模式下的配置,比如："),e("code",[t._v(".env.development")]),t._v("来配置开发环境的配置。")]),t._v(" "),e("li",[t._v("在根目录添加"),e("code",[t._v(".env.[mode].local")]),t._v("文件，配置对应某个模式下的配置,与"),e("code",[t._v(".env.[mode]")]),t._v("的区别也只是会在本地生效，该文件不会被"),e("code",[t._v("git")]),t._v("跟踪。")])]),t._v(" "),e("p",[t._v("在文件中，我们只需要以"),e("code",[t._v("key=value")]),t._v("的方式就可以设置变量了。\n例如：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("FOO=bar\nVUE_APP_SECRET=secret\n")])])]),e("h3",{attrs:{id:"_19-环境变量的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_19-环境变量的使用"}},[t._v("#")]),t._v(" 19. 环境变量的使用")]),t._v(" "),e("p",[t._v("设置完环境变量之后就可以在我们的项目中使用这两个变量了。不过还需要注意的是在项目的不同地方使用，限制也不一样。")]),t._v(" "),e("ol",[e("li",[t._v("在项目中，也就是"),e("code",[t._v("src")]),t._v("中使用环境变量的话，必须以"),e("code",[t._v("VUE_APP_")]),t._v("开头。例如我们可以在"),e("code",[t._v("main.js")]),t._v("中直接输出：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("console.log(process.env.VUE_APP_SECRET)\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("在"),e("code",[t._v("webpack")]),t._v("配置中使用，没什么限制，可以直接通过"),e("code",[t._v("process.env.XXX")]),t._v("来使用")]),t._v(" "),e("li",[t._v("在"),e("code",[t._v("public/index.html")]),t._v("中使用的：分三类：（没怎么用过）")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("<%= VAR %>")]),t._v(" 用于非转换插值  例如：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<link rel="shortcut icon" href="<%= BASE_URL %>favicon.ico">\n')])])]),e("ul",[e("li",[e("code",[t._v("<%- VAR %>")]),t._v(" 用于HTML转义插值")]),t._v(" "),e("li",[e("code",[t._v("<% expression %>")]),t._v(" 用于JavaScript控制流")])]),t._v(" "),e("h3",{attrs:{id:"_20-slot的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_20-slot的理解"}},[t._v("#")]),t._v(" 20. slot的理解")]),t._v(" "),e("p",[t._v("React中的组件"),e("code",[t._v("<Acomp></Acomp>")]),t._v("中间是空的，而Vue允许在里面加入内容，比如"),e("code",[t._v("<Acomp>Mike</Acomp>")]),t._v("，那么"),e("code",[t._v("Mike")]),t._v("就会插入到组件"),e("code",[t._v("Acomp")]),t._v("中的"),e("code",[t._v("<slot></slot>")]),t._v("中。")]),t._v(" "),e("h4",{attrs:{id:"具名插槽"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#具名插槽"}},[t._v("#")]),t._v(" 具名插槽")]),t._v(" "),e("p",[t._v("具名插槽就是组件里面有多个"),e("code",[t._v("<slot></slot>")])]),t._v(" "),e("h4",{attrs:{id:"作用域插槽"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用域插槽"}},[t._v("#")]),t._v(" 作用域插槽")]),t._v(" "),e("p",[t._v("作用域插槽就是想在使用组件的时候，获取其"),e("code",[t._v("slot")]),t._v("的"),e("code",[t._v("data")]),t._v("，如：")]),t._v(" "),e("p",[t._v("组件定义：")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("slot")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("user")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    {{ user.lastName }}\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("slot")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("绑定在 "),e("code",[t._v("<slot>")]),t._v("元素上的 "),e("code",[t._v("attribute")]),t._v(" 被称为插槽 "),e("code",[t._v("prop")])]),t._v(" "),e("p",[t._v("使用：")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("current-user")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-slot:")]),t._v("default")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("slotProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    {{ slotProps.user.firstName }}\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("current-user")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])}),[],!1,null,null,null);v.default=_.exports}}]);