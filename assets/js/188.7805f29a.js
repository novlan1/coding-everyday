(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{458:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugins"}},[t._v("#")]),t._v(" plugins")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("plugins")]),t._v("让打包变的便捷，可以在 webpack 打包的某时刻帮做一些事情，他很像一个生命周期函数")]),t._v(" "),a("h3",{attrs:{id:"_1-html-webpack-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-html-webpack-plugin"}},[t._v("#")]),t._v(" 1. html-webpack-plugin")]),t._v(" "),a("p",[t._v("html-webpack-plugin 会在打包结束后，自动生成一个 html 文件,并把打包生成的 js 自动引入到 HTML 中。 可以给这个 html 制定一个模板")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" HtmlWebpackPlugin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'html-webpack-plugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HtmlWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'src/index.html'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-clean-webpack-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-clean-webpack-plugin"}},[t._v("#")]),t._v(" 2. "),a("a",{attrs:{href:"https://github.com/johnagan/clean-webpack-plugin",target:"_blank",rel:"noopener noreferrer"}},[t._v("clean-webpack-plugin"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("帮助打包时先清空 dist 目录")]),t._v(" "),a("h3",{attrs:{id:"_3-commonschunkplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-commonschunkplugin"}},[t._v("#")]),t._v(" 3. CommonsChunkPlugin")]),t._v(" "),a("p",[t._v("提取 chunks 之间共享的通用模块")]),t._v(" "),a("h3",{attrs:{id:"_4-dllplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-dllplugin"}},[t._v("#")]),t._v(" 4. DllPlugin")]),t._v(" "),a("p",[t._v("为了极大减少构建时间，进行分离打包")]),t._v(" "),a("h2",{attrs:{id:"自定义-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义-plugin"}},[t._v("#")]),t._v(" 自定义 plugin")]),t._v(" "),a("p",[a("code",[t._v("webpack")]),t._v(" 插件由以下组成：")]),t._v(" "),a("ol",[a("li",[t._v("一个 "),a("code",[t._v("JavaScript")]),t._v(" 命名函数。")]),t._v(" "),a("li",[t._v("在插件函数的 "),a("code",[t._v("prototype")]),t._v(" 上定义一个 apply 方法。")]),t._v(" "),a("li",[t._v("指定一个绑定到 "),a("code",[t._v("webpack")]),t._v(" 自身的事件钩子。")]),t._v(" "),a("li",[t._v("处理 "),a("code",[t._v("webpack")]),t._v(" 内部实例的特定数据。")]),t._v(" "),a("li",[t._v("功能完成后调用 "),a("code",[t._v("webpack")]),t._v(" 提供的回调。")])]),t._v(" "),a("h3",{attrs:{id:"插件的执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件的执行过程"}},[t._v("#")]),t._v(" 插件的执行过程")]),t._v(" "),a("ol",[a("li",[t._v("执行 "),a("code",[t._v("new BasicPlugin(options)")]),t._v(" 初始化一个 "),a("code",[t._v("BasicPlugin")]),t._v(" 获得其实例。")]),t._v(" "),a("li",[t._v("初始化 "),a("code",[t._v("compiler")]),t._v(" 对象后，再调用 "),a("code",[t._v("basicPlugin.apply(compiler)")]),t._v(" 给插件实例传入 "),a("code",[t._v("compiler")]),t._v(" 对象")]),t._v(" "),a("li",[t._v("获取到 "),a("code",[t._v("compiler")]),t._v(" 对象后，就可以通过 "),a("code",[t._v("compiler.plugin(事件名称, 回调函数)")]),t._v(" 监听到 "),a("code",[t._v("Webpack")]),t._v(" 广播出来的事件，并且可以通过 "),a("code",[t._v("compiler")]),t._v(" 对象去操作 "),a("code",[t._v("Webpack")]),t._v("。")])]),t._v(" "),a("p",[t._v("一个简单的插件结构如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HelloWorldPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 options 设置插件实例……")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloWorldPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("apply")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("compiler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  compiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("plugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'done'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" HelloWorldPlugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("然后，要安装这个插件，只需要在你的 webpack 配置的 plugin 数组中添加一个实例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" HelloWorldPlugin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello-world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" webpackConfig "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 这里是其他配置 ...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloWorldPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"compiler-和-compilation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compiler-和-compilation"}},[t._v("#")]),t._v(" "),a("code",[t._v("Compiler")]),t._v(" 和 "),a("code",[t._v("Compilation")])]),t._v(" "),a("p",[t._v("在开发 "),a("code",[t._v("Plugin")]),t._v(" 时最常用的两个对象就是 "),a("code",[t._v("Compiler")]),t._v(" 和 "),a("code",[t._v("Compilation")]),t._v("，它们是 "),a("code",[t._v("Plugin")]),t._v(" 和 "),a("code",[t._v("Webpack")]),t._v(" 之间的桥梁。 "),a("code",[t._v("Compiler")]),t._v(" 和 "),a("code",[t._v("Compilation")]),t._v(" 的含义如下：")]),t._v(" "),a("h4",{attrs:{id:"compiler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compiler"}},[t._v("#")]),t._v(" "),a("code",[t._v("Compiler")])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Compiler")]),t._v(" 继承 "),a("code",[t._v("Tapable")]),t._v(" 对象，可以广播和监听 "),a("code",[t._v("webpack")]),t._v(" 事件。")]),t._v(" "),a("li",[a("code",[t._v("Compiler")]),t._v(" 对象是 "),a("code",[t._v("webpack")]),t._v(" 的编译器，"),a("code",[t._v("webpack")]),t._v(" 周期中只存在一个 "),a("code",[t._v("Compiler")]),t._v(" 对象。")]),t._v(" "),a("li",[a("code",[t._v("Compiler")]),t._v(" 对象在 "),a("code",[t._v("webpack")]),t._v(" 启动时创建实例，"),a("code",[t._v("compiler")]),t._v(" 实例中包含 "),a("code",[t._v("webpack")]),t._v(" 的完整配置，包括 "),a("code",[t._v("loaders")]),t._v(", "),a("code",[t._v("plugins")]),t._v(" 信息。")])]),t._v(" "),a("h4",{attrs:{id:"compilation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compilation"}},[t._v("#")]),t._v(" "),a("code",[t._v("Compilation")])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Compilation")]),t._v(" 继承 "),a("code",[t._v("Tapable")]),t._v(" 对象，可以广播和监听 "),a("code",[t._v("webpack")]),t._v(" 事件。")]),t._v(" "),a("li",[a("code",[t._v("Compilation")]),t._v(" 实例仅代表一次 "),a("code",[t._v("webpack")]),t._v(" 构建和生成编译资源的的过程。")]),t._v(" "),a("li",[a("code",[t._v("webpack")]),t._v(" 开发模式开启 "),a("code",[t._v("watch")]),t._v(" 选项，每次检测到入口文件模块变化时，会创建一次新的编译: 生成一次新的编译资源和新的 "),a("code",[t._v("compilation")]),t._v(" 对象，这个 "),a("code",[t._v("compilation")]),t._v(" 对象包含了当前编译的"),a("code",[t._v("模块资源 module")]),t._v(", "),a("code",[t._v("编译生成的资源")]),t._v("，"),a("code",[t._v("变化的文件")]),t._v(", "),a("code",[t._v("依赖的的状态")])])]),t._v(" "),a("p",[a("code",[t._v("Compiler")]),t._v(" 和 "),a("code",[t._v("Compilation")]),t._v(" 的区别在于："),a("code",[t._v("Compiler")]),t._v("代表了整个 "),a("code",[t._v("Webpack")]),t._v(" 从启动到关闭的生命周期，而 "),a("code",[t._v("Compilation")]),t._v(" 只是代表了一次新的编译。")]),t._v(" "),a("p",[a("code",[t._v("Compiler")]),t._v("事件钩子:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("事件")]),t._v(" "),a("th",[t._v("发生时机")]),t._v(" "),a("th",[t._v("传入参数")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("使用时机")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("run")]),t._v(" "),a("td",[t._v("webpack启动编译流程时")]),t._v(" "),a("td",[t._v("compiler:此时只能获取 compiler.options内容,也就是构建webpack传入的options; callback")]),t._v(" "),a("td",[t._v("异步,异步就是执行后要使用 "),a("code",[t._v("callback")]),t._v(" 执行一下")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("compilation")]),t._v(" "),a("td",[t._v("生成好了compilation 对象, 可以操作这个compilation对象啦")]),t._v(" "),a("td",[t._v("compilation")]),t._v(" "),a("td",[t._v("同步")]),t._v(" "),a("td",[t._v("此时是一个编译过程，可以编辑")])]),t._v(" "),a("tr",[a("td",[t._v("make")]),t._v(" "),a("td",[t._v("从entry开始递归分析模块及其依赖的模块，compilation创建这些模块对象,准备对每个模块进行build")]),t._v(" "),a("td",[t._v("compilation")]),t._v(" "),a("td",[t._v("并行")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("emit")]),t._v(" "),a("td",[t._v("把内存里面assets编译好的东西写到磁盘之前")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("此时可以添加assets属性来添加写入文件,或者增加修改写入文件的内容")])]),t._v(" "),a("tr",[a("td",[t._v("done")]),t._v(" "),a("td",[t._v("完成所有编译过程")]),t._v(" "),a("td",[t._v("status")]),t._v(" "),a("td",[t._v("同步")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("failed")]),t._v(" "),a("td",[t._v("编译失败")]),t._v(" "),a("td",[t._v("error")]),t._v(" "),a("td",[t._v("同步")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[a("code",[t._v("Compilation")]),t._v("事件钩子:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("事件")]),t._v(" "),a("th",[t._v("发生时机")]),t._v(" "),a("th",[t._v("回调参数")]),t._v(" "),a("th",[t._v("使用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("normal-module-loader")]),t._v(" "),a("td",[t._v("加载所有模块，还没有依赖被创建")]),t._v(" "),a("td",[t._v("loaderContext, module")]),t._v(" "),a("td",[t._v("可以拿到所有的没有依赖的单独的module")])]),t._v(" "),a("tr",[a("td",[t._v("seal")]),t._v(" "),a("td",[t._v("编译封闭阶段优化")]),t._v(" "),a("td",[t._v("没有参数")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("optimize-modules")]),t._v(" "),a("td",[t._v("优化编译阶段")]),t._v(" "),a("td",[t._v("modules ,这里拿到module进行处理")]),t._v(" "),a("td",[t._v("插件优化都是基于这里的事件")])]),t._v(" "),a("tr",[a("td",[t._v("optimize-chunks")]),t._v(" "),a("td",[t._v("chunk优化阶段")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("可以拿到模块的依赖, loader进行相应的处理")])]),t._v(" "),a("tr",[a("td",[t._v("additional-assets")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("callback")]),t._v(" "),a("td",[t._v("异步,可以为compilation对象创建额外的assets ,加入自定义资源")])]),t._v(" "),a("tr",[a("td",[t._v("optimize-chunk-assets")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("优化chunk的assets的事件钩子,这个优化阶段可以改变chunk的assets以达到重新改变资源内容的目。assets 被存储在this.assets中,但是它们并不都是chunk的assets。一个chunk有一个files属性指出这个chunk创建的所有文件。附加的assets被存储在this.additionalChunkAssets中。比如UglifyJsPlugin插件就是在这个钩子里写逻辑")])]),t._v(" "),a("tr",[a("td",[t._v("optimize-assets")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("优化所有的assets的异步事件钩子,在这个阶段可以直接通过this.assets拿到所有的assets ,并进行自定义操作。类似optimize-chunk -assets ,但是这个事件钩子的回调是拿不到chunks的。")])])])]),t._v(" "),a("p",[t._v("参考资料：")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_36228442/article/details/100037165",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack原理（二）自定义plugin"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.webpackjs.com/contribute/writing-a-plugin/#%E5%88%9B%E5%BB%BA%E6%8F%92%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"}},[t._v("编写一个插件"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);