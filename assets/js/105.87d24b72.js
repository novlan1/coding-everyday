(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{374:function(t,a,e){"use strict";e.r(a);var s=e(14),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ul",[a("li",[a("a",{attrs:{href:"#1-%E8%AF%B7%E6%B1%82%E5%A4%B4accept-encoding"}},[t._v("1. 请求头Accept-Encoding")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#11-%E6%A6%82%E8%BF%B0"}},[t._v("1.1. 概述")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#12-%E8%AF%AD%E6%B3%95"}},[t._v("1.2. 语法")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#13-%E6%8C%87%E4%BB%A4"}},[t._v("1.3. 指令")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#131-gzip"}},[t._v("1.3.1. gzip")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#132-compress"}},[t._v("1.3.2. compress")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#133-deflate"}},[t._v("1.3.3. deflate")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#134-br"}},[t._v("1.3.4. br")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#135-identity"}},[t._v("1.3.5. identity")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#136-"}},[t._v("1.3.6. *")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#137-q-qvalues-weighting"}},[t._v("1.3.7. ;q= (qvalues weighting)")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#14-%E7%A4%BA%E4%BE%8B"}},[t._v("1.4. 示例")])])])])]),t._v(" "),a("h2",{attrs:{id:"_1-请求头accept-encoding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-请求头accept-encoding"}},[t._v("#")]),t._v(" 1. 请求头Accept-Encoding")]),t._v(" "),a("h3",{attrs:{id:"_1-1-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-概述"}},[t._v("#")]),t._v(" 1.1. 概述")]),t._v(" "),a("p",[a("strong",[t._v("HTTP 请求头 Accept-Encoding 会将客户端能够理解的内容编码方式——通常是某种压缩算法——进行通知（给服务端）")]),t._v("。通过"),a("strong",[t._v("内容协商")]),t._v("的方式，"),a("strong",[t._v("服务端会选择一个客户端提议的方式，使用并在响应头 Content-Encoding 中通知客户端该选择")]),t._v("。")]),t._v(" "),a("p",[t._v("即使客户端和服务器都支持相同的压缩算法，在 identity 指令可以被接受的情况下，服务器也可以选择对响应主体不进行压缩。导致这种情况出现的两种常见的情形是：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("要发送的数据已经经过压缩")]),t._v("，再次进行压缩不会导致被传输的数据量更小。一些图像格式的文件会存在这种情况；")]),t._v(" "),a("li",[a("strong",[t._v("服务器超载")]),t._v("，无法承受压缩需求导致的计算开销。通常，如果服务器使用超过80%的计算能力，微软建议不要压缩。")])]),t._v(" "),a("p",[a("strong",[t._v("只要 identity —— 表示不需要进行任何编码——没有被明确禁止使用")]),t._v("（"),a("strong",[t._v("通过 identity;q=0 指令")]),t._v("或是 *;q=0 而没有为 identity 明确指定权重值），则"),a("strong",[t._v("服务器禁止返回表示客户端错误的 406 Not Acceptable 响应")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_1-2-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-语法"}},[t._v("#")]),t._v(" 1.2. 语法")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Accept-Encoding: gzip\nAccept-Encoding: compress\nAccept-Encoding: deflate\nAccept-Encoding: br\nAccept-Encoding: identity\nAccept-Encoding: *\n\n// Multiple algorithms, weighted with the quality value syntax:\nAccept-Encoding: deflate, gzip;q=1.0, *;q=0.5\n")])])]),a("h3",{attrs:{id:"_1-3-指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-指令"}},[t._v("#")]),t._v(" 1.3. 指令")]),t._v(" "),a("h4",{attrs:{id:"_1-3-1-gzip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-gzip"}},[t._v("#")]),t._v(" 1.3.1. gzip")]),t._v(" "),a("p",[t._v("表示采用 Lempel-Ziv coding (LZ77) 压缩算法，以及32位CRC校验的编码方式。")]),t._v(" "),a("h4",{attrs:{id:"_1-3-2-compress"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-compress"}},[t._v("#")]),t._v(" 1.3.2. compress")]),t._v(" "),a("p",[t._v("采用 Lempel-Ziv-Welch (LZW) 压缩算法。")]),t._v(" "),a("h4",{attrs:{id:"_1-3-3-deflate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-deflate"}},[t._v("#")]),t._v(" 1.3.3. deflate")]),t._v(" "),a("p",[t._v("采用 "),a("strong",[t._v("zlib")]),t._v(" 结构和 "),a("strong",[t._v("deflate")]),t._v(" 压缩算法。")]),t._v(" "),a("h4",{attrs:{id:"_1-3-4-br"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-br"}},[t._v("#")]),t._v(" 1.3.4. br")]),t._v(" "),a("p",[t._v("表示采用 "),a("strong",[t._v("Brotli")]),t._v(" 算法的编码方式。")]),t._v(" "),a("h4",{attrs:{id:"_1-3-5-identity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-5-identity"}},[t._v("#")]),t._v(" 1.3.5. identity")]),t._v(" "),a("p",[t._v("用于指代自身（例如：未经过压缩和修改）。除非特别指明，这个标记始终可以被接受。")]),t._v(" "),a("h4",{attrs:{id:"_1-3-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-6"}},[t._v("#")]),t._v(" 1.3.6. *")]),t._v(" "),a("p",[t._v("匹配其他任意未在该请求头字段中列出的编码方式。假如该请求头字段不存在的话，"),a("strong",[t._v("这个值是默认值。它并不代表任意算法都支持，而仅仅表示算法之间无优先次序")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"_1-3-7-q-qvalues-weighting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-7-q-qvalues-weighting"}},[t._v("#")]),t._v(" 1.3.7. ;q= (qvalues weighting)")]),t._v(" "),a("p",[t._v("值代表优先顺序，用相对质量价值 表示，又称为权重。")]),t._v(" "),a("h3",{attrs:{id:"_1-4-示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-示例"}},[t._v("#")]),t._v(" 1.4. 示例")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Accept-Encoding: gzip\nAccept-Encoding: gzip, compress, br\nAccept-Encoding: br;q=1.0, gzip;q=0.8, *;q=0.1\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);