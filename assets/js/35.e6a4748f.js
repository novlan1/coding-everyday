(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{308:function(_,v,t){"use strict";t.r(v);var r=t(14),s=Object(r.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("ul",[v("li",[v("a",{attrs:{href:"#1-tcp-%E5%A4%B4%E9%83%A8"}},[_._v("1. TCP 头部")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#2-%E5%8F%AF%E9%9D%A0%E4%BC%A0%E8%BE%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86"}},[_._v("2. 可靠传输的基本原理")]),_._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"#21-%E8%BF%9E%E7%BB%ADarq%E5%8D%8F%E8%AE%AE"}},[_._v("2.1. 连续ARQ协议")])])])]),_._v(" "),v("li",[v("a",{attrs:{href:"#3-tcp%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%8F%AF%E9%9D%A0%E4%BC%A0%E8%BE%93"}},[_._v("3. TCP协议的可靠传输")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#4-tcp%E5%8D%8F%E8%AE%AE%E7%9A%84%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6"}},[_._v("4. TCP协议的流量控制")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#5-tcp%E5%8D%8F%E8%AE%AE%E7%9A%84%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6"}},[_._v("5. TCP协议的拥塞控制")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#6-tcp%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B"}},[_._v("6. TCP连接的三次握手")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#7-tcp%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B"}},[_._v("7. TCP连接的四次挥手")]),_._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"#71-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5%E6%98%AF%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%85%B3%E9%97%AD%E8%BF%9E%E6%8E%A5%E7%A1%AE%E6%98%AF%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E5%91%A2"}},[_._v("7.1. 为什么建立连接是三次握手，关闭连接确是四次挥手呢？")])])])]),_._v(" "),v("li",[v("a",{attrs:{href:"#8-tcp-%E5%B0%8F%E7%BB%93"}},[_._v("8. TCP 小结")]),_._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"#81-%E4%B8%BA%E4%BB%80%E4%B9%88-tcp-%E8%BF%99%E4%B9%88%E5%A4%8D%E6%9D%82"}},[_._v("8.1. 为什么 TCP 这么复杂?")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#82-%E4%BF%9D%E8%AF%81%E5%8F%AF%E9%9D%A0%E6%80%A7%E7%9A%84%E6%9C%BA%E5%88%B6"}},[_._v("8.2. 保证可靠性的机制")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#83-%E6%8F%90%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E6%9C%BA%E5%88%B6"}},[_._v("8.3. 提高性能的机制")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#84-%E5%AE%9A%E6%97%B6%E5%99%A8"}},[_._v("8.4. 定时器")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#85-tcpudp%E7%9A%84%E5%8C%BA%E5%88%AB"}},[_._v("8.5. TCP/UDP的区别？")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#86-tcp-%E5%AF%B9%E5%BA%94%E7%9A%84%E5%8D%8F%E8%AE%AE%E5%92%8C-udp-%E5%AF%B9%E5%BA%94%E7%9A%84%E5%8D%8F%E8%AE%AE"}},[_._v("8.6. TCP 对应的协议和 UDP 对应的协议")])])])])]),_._v(" "),v("h2",{attrs:{id:"tcp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[_._v("#")]),_._v(" TCP ")]),_._v(" "),v("p",[v("strong",[_._v("TCP（"),v("code",[_._v("Transmission Control Protocol")]),_._v("），又叫传输控制协议")]),_._v("。 TCP 协议是"),v("strong",[_._v("面向连接的，可靠的，基于字节流")]),_._v("的传输协议。")]),_._v(" "),v("p",[_._v("在基于 TCP 进行通信时，通信双方需要先建立一个 TCP 连接，建立连接需要经过三次握手，断开连接的时候需要经过四次挥手。")]),_._v(" "),v("h3",{attrs:{id:"_1-tcp-头部"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-tcp-头部"}},[_._v("#")]),_._v(" 1. TCP 头部")]),_._v(" "),v("p",[v("strong",[_._v("TCP协议头部，固定20个字节，UDP头部只有8个字节，IP协议头部20个字节")]),_._v("：")]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/TCP_header.png",alt:"TCP header"}})]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/TCP_header2.png",alt:"TCP header"}})]),_._v(" "),v("p",[_._v("对于 TCP 头部来说，以下几个字段是很重要的:")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("序列号")]),_._v(" （"),v("code",[_._v("Sequence number")]),_._v("）\n"),v("ul",[v("li",[v("code",[_._v("0~ 2^32-1")])]),_._v(" "),v("li",[_._v("一个字节一个序号")]),_._v(" "),v("li",[v("strong",[_._v("数据首字节序号")]),_._v("（第一个字节）")]),_._v(" "),v("li",[_._v("这个序号保证了 TCP 传输的报文都是有序的，对端可以通过序号顺序的拼接报文")])])]),_._v(" "),v("li",[v("code",[_._v("确认号")]),_._v(" （"),v("code",[_._v("Acknowledgement Number")]),_._v("）\n"),v("ul",[v("li",[_._v("这个序号表示数据接收端"),v("strong",[_._v("期望接收的下一个字节的编号是多少")]),_._v("，同时也表示上一个序号的数据已经收到")]),_._v(" "),v("li",[v("strong",[_._v("确认号为N：表示N-1序号的数据都已经收到")]),_._v("，比如，收到了序号为501的数据报，长度是100，下一次确认号则为601")])])]),_._v(" "),v("li",[v("code",[_._v("窗口大小")]),_._v(" （Window Size）\n"),v("ul",[v("li",[v("strong",[_._v("表示还能接收多少字节的数据，用于流量控制")])])])]),_._v(" "),v("li",[_._v("数据偏移\n"),v("ul",[v("li",[_._v("占4位：0~15，单位为：32位字（由此可以看出最大偏移为"),v("code",[_._v("15*4")]),_._v("，即TCP首部长度介于20-60个字节之间）")]),_._v(" "),v("li",[v("strong",[_._v("数据偏离首部的距离")])]),_._v(" "),v("li",[_._v("不知道TCP选项有多长，所有用数据偏移表示真实的数据离头部偏移有多少")])])]),_._v(" "),v("li",[v("code",[_._v("标识符")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("ACK=1")]),_._v(" ：该字段为一表示确认号字段有效。此外，TCP 还规定在连接建立后传送的所有报文段都必须把 ACK 置为一。")]),_._v(" "),v("li",[v("code",[_._v("SYN=1")]),_._v("：当 SYN=1，ACK=0 时，表示当前报文段是一个连接请求报文。当 SYN=1，ACK=1 时，表示当前报文段是一个同意建立连接的应答报文。")]),_._v(" "),v("li",[v("code",[_._v("FIN=1")]),_._v("：该字段为一表示此报文段是一个释放连接的请求报文。")]),_._v(" "),v("li",[v("code",[_._v("URG=1")]),_._v(" : 该字段为一表示本数据报的数据部分包含紧急信息，是一个高优先级数据报文，此时紧急指针有效。紧急数据一定位于当前数据包数据部分的最前面，紧急指针标明了紧急数据的尾部。")]),_._v(" "),v("li",[v("code",[_._v("PSH=1")]),_._v(" ：该字段为一表示接收端应该立即将数据 push 给应用层，而不是等到缓冲区满后再提交。")]),_._v(" "),v("li",[v("code",[_._v("RST=1")]),_._v("：该字段为一表示当前 TCP 连接出现严重问题，可能需要重新建立 TCP 连接，也可以用于拒绝非法的报文段和拒绝连接请求。")])])]),_._v(" "),v("li",[_._v("紧急指针\n"),v("ul",[v("li",[_._v("紧急数据（URG=1）")]),_._v(" "),v("li",[_._v("指定紧急数据在报文的位置")])])]),_._v(" "),v("li",[_._v("TCP选项\n"),v("ul",[v("li",[v("strong",[_._v("最多40字节（60-20）")])]),_._v(" "),v("li",[_._v("支持未来的拓展")])])])]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/tcp_header_symbol.jpg",alt:"TCP"}})]),_._v(" "),v("h3",{attrs:{id:"_2-可靠传输的基本原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-可靠传输的基本原理"}},[_._v("#")]),_._v(" 2. 可靠传输的基本原理")]),_._v(" "),v("p",[_._v("停止等待协议：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] "),v("strong",[_._v("发送方等待接收方的确认消息，才发送新的信息")])]),_._v(" "),v("li",[_._v("[ ] "),v("strong",[_._v("最简单")]),_._v("的可靠传输协议")]),_._v(" "),v("li",[_._v("[ ] 通过"),v("strong",[_._v("超时重传")]),_._v("保证可靠传输")]),_._v(" "),v("li",[_._v("[ ] "),v("strong",[_._v("对信道的利用效率不高")])])]),_._v(" "),v("p",[_._v("停止等待协议，无差错的情况：\n"),v("img",{attrs:{src:"/imgs/TCP_stop_wait.png",alt:"停止等待协议"}})]),_._v(" "),v("p",[_._v("出差错的情况，超时重传，包括"),v("strong",[_._v("接收方没有收到发送方")]),_._v("的消息：\n"),v("img",{attrs:{src:"/imgs/TCP_stop_wait2.png",alt:"停止等待协议"}})]),_._v(" "),v("p",[_._v("超时重传，"),v("strong",[_._v("发送方没有收到接收方")]),_._v("的确认信息：\n"),v("img",{attrs:{src:"/imgs/TCP_stop_wait3.png",alt:"停止等待协议"}})]),_._v(" "),v("p",[_._v("超时重传，"),v("strong",[_._v("确认消息很久才收到")]),_._v("：\n"),v("img",{attrs:{src:"/imgs/TCP_stop_wait4.png",alt:"停止等待协议"}})]),_._v(" "),v("p",[_._v("小结：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] "),v("strong",[_._v("发送的消息在路上丢失了")])]),_._v(" "),v("li",[_._v("[ ] "),v("strong",[_._v("确认的消息在路上丢失了")])]),_._v(" "),v("li",[_._v("[ ] "),v("strong",[_._v("确认的消息很久才到")])])]),_._v(" "),v("p",[v("strong",[_._v("停止等待协议通过超时重传保证可靠传输")])]),_._v(" "),v("p",[_._v("超时定时器：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] "),v("strong",[_._v("每发送一个消息，都需要设置一个定时器")])])]),_._v(" "),v("h4",{attrs:{id:"_2-1-连续arq协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-连续arq协议"}},[_._v("#")]),_._v(" 2.1. 连续ARQ协议")]),_._v(" "),v("ul",[v("li",[_._v("[ ] "),v("strong",[_._v("ARQ（"),v("code",[_._v("Automatic Repeat reQuest")]),_._v("）自动重传请求")])]),_._v(" "),v("li",[_._v("[ ] 批量发送和确认")]),_._v(" "),v("li",[_._v("[ ] 滑动窗口和累计确认是其两个重要概念")])]),_._v(" "),v("p",[v("strong",[_._v("滑动窗口，收到前面的确认消息，滑动窗口向前移动")]),_._v("，把滑动窗口内的未发送消息发送出去：")]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/TCP_sliding_window.png",alt:"滑动窗口"}})]),_._v(" "),v("p",[_._v("并不需要对每一个报文都确认，而采用"),v("strong",[_._v("累计确认")]),_._v("的方法。如"),v("strong",[_._v("收到了5的确认消息")]),_._v("，则认为"),v("strong",[_._v("1-5的消息都已经收到了，就把滑动窗口往前移动5格")]),_._v("：")]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/TCP_sliding_window2.png",alt:"滑动窗口"}})]),_._v(" "),v("h3",{attrs:{id:"_3-tcp协议的可靠传输"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-tcp协议的可靠传输"}},[_._v("#")]),_._v(" 3. TCP协议的可靠传输")]),_._v(" "),v("ul",[v("li",[_._v("[ ] TCP的可靠传输"),v("strong",[_._v("基于连续ARQ协议")])]),_._v(" "),v("li",[_._v("[ ] TCP滑动窗口以"),v("strong",[_._v("字节")]),_._v("为单位")])]),_._v(" "),v("p",[_._v("滑动窗口里面的7个字节都是可以发送的，左边是"),v("strong",[_._v("已经确认的字节序号")]),_._v("，右边是"),v("strong",[_._v("不允许发送的字节序号")]),_._v("，窗口内最左边是"),v("strong",[_._v("对方期待收到的下一个字节")])]),_._v(" "),v("p",[_._v("窗口内又可分为"),v("strong",[_._v("已发送未确认")]),_._v("和"),v("strong",[_._v("可用窗口")]),_._v("，由于没收到前面的确认所以不能往前移动：")]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/TCP_ARQ.png",alt:"滑动窗口"}})]),_._v(" "),v("p",[_._v("有可能窗口内都是已发送未确认，"),v("strong",[_._v("可用窗口=0")]),_._v("。")]),_._v(" "),v("p",[v("strong",[_._v("没有按序收到确认消息")]),_._v("，即收到后面的确认消息，但是没收到前面的，超时后，会"),v("strong",[_._v("从前面开始重传")]),_._v("，效率低：")]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/TCP_ARQ2.png",alt:"滑动窗口"}})]),_._v(" "),v("p",[_._v("选择重传：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] "),v("strong",[_._v("选择性的重传某些消息")]),_._v("，而不是重传所有消息")]),_._v(" "),v("li",[_._v("[ ] 选择重传需要指定需要重传的字节")]),_._v(" "),v("li",[_._v("[ ] "),v("strong",[_._v("每一个字节都有唯一的32位序号")])])]),_._v(" "),v("p",[_._v("TCP选项最多40个字节（60-20），即最多10个序号，指定的是需要重传的边界，而不是字节，表明"),v("strong",[_._v("需要重传的一段范围")]),_._v("\n一段一段，如果里面存了"),v("strong",[_._v("1000和1500")]),_._v("，"),v("strong",[_._v("指的是需要重传"),v("code",[_._v("1000~1500")]),_._v("这一段数据")]),_._v("，")]),_._v(" "),v("h3",{attrs:{id:"_4-tcp协议的流量控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-tcp协议的流量控制"}},[_._v("#")]),_._v(" 4. TCP协议的流量控制")]),_._v(" "),v("ul",[v("li",[_._v("特有的功能（UDP和其他协议没有）")]),_._v(" "),v("li",[v("strong",[_._v("流量控制指让发送方发送速率不要太快")])]),_._v(" "),v("li",[_._v("流量控制是使用"),v("strong",[_._v("滑动窗口")]),_._v("来实现的（"),v("strong",[_._v("确认号是"),v("code",[_._v("501")]),_._v("的话，如果窗口是"),v("code",[_._v("1000")]),_._v("，表明接收方希望接收"),v("code",[_._v("501-1501")]),_._v("的数据")]),_._v("）")])]),_._v(" "),v("p",[_._v("通过窗口大小控制对方发送速率：")]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/TCP_sliding_window3.png",alt:"滑动窗口"}})]),_._v(" "),v("p",[_._v("如果"),v("strong",[_._v("丢失了最后的确认窗口变大（不为0）的消息")]),_._v("，就会导致"),v("strong",[_._v("死锁")]),_._v("，发送方一直等到对方窗口变大，接收方一直等待对方发送消息")]),_._v(" "),v("p",[_._v("坚持定时器（解决死锁）：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 当"),v("strong",[_._v("发送方接收到窗口为0的消息")]),_._v("，则启动坚持定时器")]),_._v(" "),v("li",[_._v("[ ] 坚持定时器每隔一段时间发送一个"),v("strong",[_._v("窗口探测报文")])])]),_._v(" "),v("p",[_._v("这种死锁相当于情侣一方A一直等待对方B改变脾气，而B已经改变了，但联系不到A，坚持定时器是A每隔一段时间问一下B，你改变了没有。")]),_._v(" "),v("h3",{attrs:{id:"_5-tcp协议的拥塞控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-tcp协议的拥塞控制"}},[_._v("#")]),_._v(" 5. TCP协议的拥塞控制")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 一条数据链路经过非常多的设备")]),_._v(" "),v("li",[_._v("[ ] 数据链路中"),v("strong",[_._v("各个部分")]),_._v("都有可能成为网络传输的"),v("strong",[_._v("瓶颈")]),_._v("（导致拥塞）")])]),_._v(" "),v("p",[_._v("注意：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] "),v("strong",[_._v("流量控制")]),_._v("考虑"),v("strong",[_._v("点对点")]),_._v("的通信量的控制")]),_._v(" "),v("li",[_._v("[ ] "),v("strong",[_._v("拥塞控制")]),_._v("考虑"),v("strong",[_._v("整个网络")]),_._v("，是全局性的考虑")]),_._v(" "),v("li",[_._v("[ ] "),v("strong",[_._v("报文超时则认为是拥塞")]),_._v("（虽然不一定）")])]),_._v(" "),v("p",[_._v("慢启动算法：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] "),v("strong",[_._v("由小到大")]),_._v("逐渐发送数据量")]),_._v(" "),v("li",[_._v("[ ] 每收到一个报文确认，就加一（指数增长，1 2 4 8 16…）")]),_._v(" "),v("li",[_._v("[ ] 增长到"),v("strong",[_._v("慢启动阈值")]),_._v("("),v("code",[_._v("ssthresh")]),_._v(")后就不增长了")])]),_._v(" "),v("p",[_._v("拥塞避免算法：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 维护一个拥塞窗口的变量")]),_._v(" "),v("li",[_._v("[ ] 只要网络不拥塞，就"),v("strong",[_._v("试探着把拥塞窗口调大")]),_._v("（比如到了慢启动阈值"),v("code",[_._v("16")]),_._v("后，以后发送"),v("code",[_._v("17、18、19…")]),_._v("个报文）")])]),_._v(" "),v("p",[_._v("二者结合，先进行慢启动算法，再进行拥塞避免算法：")]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/TCP_congestion_control.png",alt:"TCP协议的拥塞控制"}})]),_._v(" "),v("p",[_._v("上述过程就像一个人贪婪的过程")]),_._v(" "),v("h3",{attrs:{id:"_6-tcp连接的三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-tcp连接的三次握手"}},[_._v("#")]),_._v(" 6. TCP连接的三次握手")]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/TCP_three-handshake2.png",alt:"三次握手"}})]),_._v(" "),v("p",[_._v("简单的说：")]),_._v(" "),v("ul",[v("li",[_._v("第一次握手\n"),v("ul",[v("li",[v("strong",[v("code",[_._v("SYN = 1， seq(client) = x")])])]),_._v(" "),v("li",[_._v("客户端向服务端发送连接请求报文段。该报文段中包含自身的数据通讯初始序号。请求发送后，"),v("strong",[_._v("客户端便进入 "),v("code",[_._v("SYN-SENT")]),_._v(" 状态")]),_._v("。")])])]),_._v(" "),v("li",[_._v("第二次握手\n"),v("ul",[v("li",[v("strong",[v("code",[_._v("SYN = 1，ACK = 1，ack(确认序号) = x+1, seq(server) = y")])])]),_._v(" "),v("li",[v("strong",[_._v("服务端")]),_._v("收到连接请求报文段后，如果同意连接，则会发送一个应答，该应答中也会包含自身的数据通讯初始序号，"),v("strong",[_._v("发送完成后便进入 "),v("code",[_._v("SYN-RECEIVED")]),_._v(" 状态")])])])]),_._v(" "),v("li",[_._v("第三次握手\n"),v("ul",[v("li",[v("strong",[v("code",[_._v("ACK = 1，ack(确认序号) = y+1, seq(client) = x + 1")])])]),_._v(" "),v("li",[_._v("客户端收到连接同意的应答后，还要向服务端发送一个确认报文。"),v("strong",[_._v("客户端发完这个报文段后便进入 "),v("code",[_._v("ESTABLISHED")]),_._v(" 状态，服务端收到这个应答后也进入 "),v("code",[_._v("ESTABLISHED")]),_._v(" 状态，此时连接建立成功。")])])])])]),_._v(" "),v("p",[_._v("为什么发送方要发出第三个确认报文（为什么需要第三次握手）？")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("防止已经失效的连接请求报文传送到对方，引起错误")])])]),_._v(" "),v("p",[_._v("举例：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 发送方第一次握手时发送很久没有收到对方应答，于是发送了第二封，"),v("strong",[_._v("第二封比第一封更早到达，第一次便是失效的请求报文")])]),_._v(" "),v("li",[_._v("[ ] 如果两次握手就能建立起连接：同一个请求发送两次（第一次超时）就会建立起两个连接，引起错误")]),_._v(" "),v("li",[_._v("[ ] "),v("strong",[_._v("本来这是一个早已失效的报文段,但"),v("code",[_._v("server")]),_._v("收到此失效的连接请求报文段后，就误认为是"),v("code",[_._v("client")]),_._v("再次发出的一个新的连接请求")]),_._v("。")])]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/TCP_connection_example.png",alt:"为什么需要第三次握手"}})]),_._v(" "),v("p",[_._v("虚线是假设两次握手就建立连接")]),_._v(" "),v("h3",{attrs:{id:"_7-tcp连接的四次挥手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-tcp连接的四次挥手"}},[_._v("#")]),_._v(" 7. TCP连接的四次挥手")]),_._v(" "),v("p",[_._v("比三次握手多出来的是"),v("strong",[_._v("第二次挥手")]),_._v("，意思是我收到了，但是我现在还没传完，等会关闭")]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/tcp_four_bye.png",alt:"四次挥手"}})]),_._v(" "),v("p",[_._v("TCP 是全双工的，在断开连接时两端都需要发送 FIN 和 ACK。")]),_._v(" "),v("ul",[v("li",[_._v("第一次挥手\n"),v("ul",[v("li",[_._v("若客户端 A 认为数据发送完成，则它需要向服务端 B 发送连接释放请求。")])])]),_._v(" "),v("li",[_._v("第二次挥手\n"),v("ul",[v("li",[_._v("B 收到连接释放请求后，会告诉应用层要释放 TCP 链接。然后会发送 ACK 包，并进入 "),v("strong",[_._v("CLOSE_WAIT")]),_._v(" 状态，表示 A 到 B 的连接已经释放，不接收 A 发的数据了。但是因为 "),v("strong",[_._v("TCP 连接时双向的")]),_._v("，所以 B 仍旧可以发送数据给 A。")])])]),_._v(" "),v("li",[_._v("第三次挥手\n"),v("ul",[v("li",[_._v("B 如果此时还有没发完的数据会继续发送，完毕后会向 A 发送连接释放请求，然后 B 便进入"),v("strong",[_._v("LAST-ACK")]),_._v("状态。")]),_._v(" "),v("li",[_._v("PS：通过延迟确认的技术（通常有时间限制，否则对方会误认为需要重传），可以将第二次和第三次握手合并，延迟 ACK 包的发送。")])])]),_._v(" "),v("li",[_._v("第四次挥手\n"),v("ul",[v("li",[_._v("A 收到释放请求后，向 B 发送确认应答，此时 A 进入 "),v("strong",[_._v("TIME-WAIT")]),_._v(" 状态。该状态会持续 2MSL（最大段生存期，指报文段在网络中生存的时间，超时会被抛弃） 时间，若该时间段内没有 B 的重发请求的话，就进入 "),v("strong",[_._v("CLOSED")]),_._v(" 状态。当 B 收到确认应答后，也便进入 "),v("strong",[_._v("CLOSED")]),_._v(" 状态。")])])])]),_._v(" "),v("p",[_._v("注意：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 主动关闭的一方状态变化为："),v("strong",[_._v("建立状态、第一次等待("),v("code",[_._v("FIN-WAIT-1")]),_._v(")、第二次等待("),v("code",[_._v("FIN-WAIT-2")]),_._v(")、等待计时("),v("code",[_._v("TIME-WAIT")]),_._v(")、关闭")])]),_._v(" "),v("li",[_._v("[ ] 被动关闭的一方状态变化为："),v("strong",[_._v("建立状态、关闭等待("),v("code",[_._v("CLOSE-WAIT")]),_._v(")、最后确认("),v("code",[_._v("LAST-ACK")]),_._v(")、关闭状态")]),_._v("。")]),_._v(" "),v("li",[_._v("[ ] "),v("strong",[_._v("主动关闭的一方最后有等待计时状态")])])]),_._v(" "),v("p",[v("strong",[_._v("MSL("),v("code",[_._v("MAX Segment Lifetime")]),_._v(")：最长报文段寿命")])]),_._v(" "),v("ul",[v("li",[_._v("[ ] MSL建议设置为2分钟")])]),_._v(" "),v("p",[_._v("等待计时器")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 等待计时器，最长等待时间2MSL")]),_._v(" "),v("li",[_._v("[ ] 等待过程中，不会释放端口，只有等到等待计时器结束后，才释放")])]),_._v(" "),v("p",[_._v("为什么需要等待"),v("code",[_._v("2MSL")]),_._v("？")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 最后一个报文没有确认")]),_._v(" "),v("li",[_._v("[ ] "),v("strong",[_._v("确保发送方的"),v("code",[_._v("ACK")]),_._v("可以到达接收方")]),_._v("（第1个作用）")]),_._v(" "),v("li",[_._v("[ ] 2MSL时间内没有收到，则接收方会重发")]),_._v(" "),v("li",[_._v("[ ] "),v("strong",[_._v("确保当前连接的所有报文都已经过期")]),_._v("（第2个作用）")])]),_._v(" "),v("p",[_._v("等待计时状态就像主动提分手的那个人等待对方确实放下了，"),v("code",[_._v("nice person")])]),_._v(" "),v("h4",{attrs:{id:"_7-1-为什么建立连接是三次握手-关闭连接确是四次挥手呢"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-为什么建立连接是三次握手-关闭连接确是四次挥手呢"}},[_._v("#")]),_._v(" 7.1. 为什么建立连接是三次握手，关闭连接确是四次挥手呢？")]),_._v(" "),v("p",[_._v("建立连接的时候， 服务器在 "),v("code",[_._v("LISTEN")]),_._v(" 状态下，收到建立连接请求的 "),v("code",[_._v("SYN")]),_._v(" 报文后，把 "),v("code",[_._v("ACK")]),_._v(" 和 "),v("code",[_._v("SYN")]),_._v(" 放在一个报文里发送给客户端。")]),_._v(" "),v("p",[_._v("而"),v("strong",[_._v("关闭连接时，服务器收到对方的 "),v("code",[_._v("FIN")]),_._v(" 报文时，仅仅表示对方不再发送数据了但是还能接收数据，而自己也未必全部数据都发送给对方了")])]),_._v(" "),v("h3",{attrs:{id:"_8-tcp-小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-tcp-小结"}},[_._v("#")]),_._v(" 8. TCP 小结")]),_._v(" "),v("h4",{attrs:{id:"_8-1-为什么-tcp-这么复杂"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-为什么-tcp-这么复杂"}},[_._v("#")]),_._v(" 8.1. 为什么 TCP 这么复杂?")]),_._v(" "),v("p",[_._v("因为既要保证可靠性, 同时又要尽可能提高性能")]),_._v(" "),v("h4",{attrs:{id:"_8-2-保证可靠性的机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-保证可靠性的机制"}},[_._v("#")]),_._v(" 8.2. 保证可靠性的机制")]),_._v(" "),v("ul",[v("li",[_._v("校验和")]),_._v(" "),v("li",[_._v("序列号(按序到达)")]),_._v(" "),v("li",[_._v("确认应答")]),_._v(" "),v("li",[_._v("超时重传")]),_._v(" "),v("li",[_._v("连接管理")]),_._v(" "),v("li",[_._v("流量控制")]),_._v(" "),v("li",[_._v("拥塞控制")])]),_._v(" "),v("h4",{attrs:{id:"_8-3-提高性能的机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-提高性能的机制"}},[_._v("#")]),_._v(" 8.3. 提高性能的机制")]),_._v(" "),v("ul",[v("li",[_._v("滑动窗口")]),_._v(" "),v("li",[_._v("快速重传")]),_._v(" "),v("li",[_._v("延迟应答")]),_._v(" "),v("li",[_._v("捎带应答")])]),_._v(" "),v("h4",{attrs:{id:"_8-4-定时器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-定时器"}},[_._v("#")]),_._v(" 8.4. 定时器")]),_._v(" "),v("ul",[v("li",[_._v("超时重传定时器")]),_._v(" "),v("li",[_._v("保活定时器")]),_._v(" "),v("li",[_._v("TIME_WAIT 定时器")])]),_._v(" "),v("h4",{attrs:{id:"_8-5-tcp-udp的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-tcp-udp的区别"}},[_._v("#")]),_._v(" 8.5. TCP/UDP的区别？")]),_._v(" "),v("p",[_._v("TCP：")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("面向连接（TCP三次握手）")])]),_._v(" "),v("li",[v("strong",[_._v("可靠的（每发送一个包都会等待对方确认）")])]),_._v(" "),v("li",[_._v("基于字节流（"),v("strong",[_._v("缓冲区")]),_._v("，应用层发送来的数据分段再进行发送）")])]),_._v(" "),v("p",[_._v("UDP：")]),_._v(" "),v("ul",[v("li",[_._v("无连接")]),_._v(" "),v("li",[_._v("不可靠")]),_._v(" "),v("li",[v("strong",[_._v("面向报文（应用层发来的数据直接传出去，没有缓冲区）")])])]),_._v(" "),v("h4",{attrs:{id:"_8-6-tcp-对应的协议和-udp-对应的协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-6-tcp-对应的协议和-udp-对应的协议"}},[_._v("#")]),_._v(" 8.6. TCP 对应的协议和 UDP 对应的协议")]),_._v(" "),v("p",[_._v("TCP对应的协议：")]),_._v(" "),v("ol",[v("li",[v("strong",[_._v("FTP")]),_._v("：定义了文件传输协议，使用21端口。")]),_._v(" "),v("li",[v("strong",[_._v("Telnet")]),_._v("：一种用于远程登陆的端口，使用23端口，用户可以以自己的身份远程连接到计算机上，可提供基于DOS模式下的通信服务。")]),_._v(" "),v("li",[v("strong",[_._v("SMTP")]),_._v("：邮件传送协议，用于发送邮件。服务器开放的是25号端口。")]),_._v(" "),v("li",[v("strong",[_._v("POP3")]),_._v("：它是和SMTP对应，POP3用于接收邮件。POP3协议所用的是110端口。")]),_._v(" "),v("li",[v("strong",[_._v("HTTP")]),_._v("：是从Web服务器传输超文本到本地浏览器的传送协议。")])]),_._v(" "),v("p",[_._v("UDP对应的协议：")]),_._v(" "),v("ol",[v("li",[v("strong",[_._v("DNS")]),_._v("：用于域名解析服务，将域名地址转换为IP地址。DNS用的是53号端口。")]),_._v(" "),v("li",[v("strong",[_._v("SNMP")]),_._v("：简单网络管理协议，使用161号端口，是用来管理网络设备的。由于网络设备很多，无连接的服务就体现出其优势。")]),_._v(" "),v("li",[v("strong",[_._v("TFTP")]),_._v("(Trival File Transfer Protocal)，简单文件传输协议，该协议在熟知端口69上使用UDP服务。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);