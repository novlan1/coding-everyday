(window.webpackJsonp=window.webpackJsonp||[]).push([[597],{873:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("ul",[s("li",[s("a",{attrs:{href:"#1-python%E5%B1%9E%E4%BA%8E%E5%8A%A8%E6%80%81%E5%BC%BA%E7%B1%BB%E5%9E%8B%E8%AF%AD%E8%A8%80"}},[t._v("1. Python属于动态强类型语言")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#2-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%94%A8python"}},[t._v("2. 为什么要用Python？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#3-%E4%BB%80%E4%B9%88%E6%98%AFmonkey-patch%E5%93%AA%E4%BA%9B%E5%9C%B0%E6%96%B9%E7%94%A8%E5%88%B0%E7%B1%BB%E8%87%AA%E5%B7%B1%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0"}},[t._v("3. 什么是"),s("code",[t._v("monkey patch")]),t._v("？哪些地方用到类？自己如何实现？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#4-%E4%BB%80%E4%B9%88%E6%98%AF%E8%87%AA%E7%9C%81introspection"}},[t._v("4. 什么是自省("),s("code",[t._v("Introspection")]),t._v(")？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#5-is%E5%92%8C%E7%AD%89%E5%8F%B7%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("5. "),s("code",[t._v("is")]),t._v("和等号的区别")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#6-python-%E4%B9%8B%E7%A6%85"}},[t._v("6. Python 之禅")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#7-python2%E5%92%8C3%E5%B7%AE%E5%88%AB"}},[t._v("7. Python2和3差别")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#71-python3-%E6%94%B9%E8%BF%9B"}},[t._v("7.1. Python3 改进")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#72-python3%E6%96%B0%E5%A2%9E"}},[t._v("7.2. Python3新增：")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#73-%E5%85%BC%E5%AE%B923%E7%9A%84%E5%B7%A5%E5%85%B7"}},[t._v("7.3. 兼容2/3的工具")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#8-replace-%E5%92%8C-resub-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E7%AC%A6%E6%9B%BF%E6%8D%A2"}},[t._v("8. "),s("code",[t._v("replace()")]),t._v(" 和"),s("code",[t._v("re.sub()")]),t._v(" 字符串字符替换")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#81-replace"}},[t._v("8.1. "),s("code",[t._v("replace()")])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#82-resub"}},[t._v("8.2. "),s("code",[t._v("re.sub()")])])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#9-python%E5%A6%82%E4%BD%95%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0"}},[t._v("9. Python如何传递参数？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#10-%E5%93%AA%E4%BA%9B%E6%98%AF%E4%B8%8D%E5%8F%AF%E5%8F%98%E5%AF%B9%E8%B1%A1%E5%93%AA%E4%BA%9B%E5%8F%AF%E5%8F%98"}},[t._v("10. 哪些是不可变对象？哪些可变？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#11-args--kwargs%E5%90%AB%E4%B9%89%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("11. "),s("code",[t._v("*args")]),t._v(",  "),s("code",[t._v("**kwarg")]),t._v("s含义是什么")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#12-%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E5%B8%B8"}},[t._v("12. 如何自定义异常？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#13-python%E7%94%9F%E6%88%90%E5%99%A8%E4%B8%8E%E5%8D%8F%E7%A8%8B"}},[t._v("13. Python生成器与协程")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#131-%E5%8D%8F%E7%A8%8B"}},[t._v("13.1. 协程")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#14-python-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95"}},[t._v("14. Python 单元测试")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#15-python-%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B5%85%E6%8B%B7%E8%B4%9D"}},[t._v("15. Python 深拷贝和浅拷贝")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#16-python-%E5%86%85%E7%BD%AE%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95"}},[t._v("16. Python 内置数据结构算法")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#161-python-dict%E5%BA%95%E5%B1%82%E7%BB%93%E6%9E%84"}},[t._v("16.1. Python "),s("code",[t._v("dict")]),t._v("底层结构")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#162-list%E5%92%8Ctuple%E5%8C%BA%E5%88%AB"}},[t._v("16.2. "),s("code",[t._v("List")]),t._v("和"),s("code",[t._v("tuple")]),t._v("区别")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#17-%E4%BB%80%E4%B9%88%E6%98%AFlrucache"}},[t._v("17. 什么是LRUCache？")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#171-%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0lrucache"}},[t._v("17.1. 如何实现"),s("code",[t._v("LRUCache")]),t._v("？")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#18-%E7%BB%84%E5%90%88%E5%92%8C%E7%BB%A7%E6%89%BF"}},[t._v("18. 组合和继承")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#19-classmethodstaticmethod%E5%8C%BA%E5%88%AB"}},[t._v("19. "),s("code",[t._v("Classmethod/staticmethod")]),t._v("区别")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#20-%E5%85%83%E7%B1%BB"}},[t._v("20. 元类")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#201-typechild-base--"}},[t._v("20.1. "),s("code",[t._v("type(‘child’, (Base, ), {})")])])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#21-__init__%E4%B8%8E__new__%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("21. "),s("code",[t._v("__init__")]),t._v("与"),s("code",[t._v("__new__")]),t._v("的区别？")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#211-__new__%E7%94%A8%E9%80%94"}},[t._v("21.1. "),s("code",[t._v("__new__")]),t._v("用途：")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#22-%E8%A3%85%E9%A5%B0%E5%99%A8-decorator"}},[t._v("22. 装饰器 "),s("code",[t._v("Decorator")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#221-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E7%B1%BB%E7%BC%96%E5%86%99%E8%A3%85%E9%A5%B0%E5%99%A8"}},[t._v("22.1. 如何使用类编写装饰器")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#23-python-%E5%AE%9E%E7%8E%B0%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F"}},[t._v("23. python 实现单例模式")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#24-python-%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F"}},[t._v("24. python 迭代器模式")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#25-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B"}},[t._v("25. 函数式编程")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#251-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E4%BC%98%E7%82%B9"}},[t._v("25.1. 函数式编程优点")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#252-%E8%AE%A1%E7%AE%97%E6%9C%BAcomputer%E5%92%8C%E8%AE%A1%E7%AE%97compute%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("25.2. 计算机（"),s("code",[t._v("Computer")]),t._v("）和计算（"),s("code",[t._v("Compute")]),t._v("）的区别：")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#26-%E4%BB%80%E4%B9%88%E6%98%AF%E9%97%AD%E5%8C%85closure"}},[t._v("26. 什么是闭包("),s("code",[t._v("Closure")]),t._v(")")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#27-io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8"}},[t._v("27. IO多路复用")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#271-%E6%8F%90%E5%8D%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%B9%B6%E5%8F%91%E8%83%BD%E5%8A%9B"}},[t._v("27.1. 提升服务器的并发能力？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#272-%E4%BB%80%E4%B9%88%E6%98%AFio%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8"}},[t._v("27.2. 什么是IO多路复用?")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#273-%E4%B8%BA%E4%BB%80%E4%B9%88select%E8%83%BD%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%B9%B6%E5%8F%91"}},[t._v("27.3. 为什么"),s("code",[t._v("select")]),t._v("能实现高并发？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#274-python%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8"}},[t._v("27.4. Python如何实现IO多路复用？")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#28-python%E5%B9%B6%E5%8F%91%E7%BD%91%E7%BB%9C%E5%BA%93"}},[t._v("28. Python并发网络库")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#281-tornado%E6%A1%86%E6%9E%B6"}},[t._v("28.1. "),s("code",[t._v("Tornado")]),t._v("框架")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#282-gevent%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BD%91%E7%BB%9C%E5%BA%93"}},[t._v("28.2. "),s("code",[t._v("Gevent")]),t._v("：高性能的并发网络库")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#283-asyncio-%E5%9F%BA%E4%BA%8E%E5%8D%8F%E7%A8%8B%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%86%85%E7%BD%AE%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BD%91%E7%BB%9C%E5%BA%93"}},[t._v("28.3. "),s("code",[t._v("Asyncio")]),t._v(" 基于协程实现的内置的并发网络库")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#29-wsgi%E5%92%8Cweb%E6%A1%86%E6%9E%B6"}},[t._v("29. WSGI和web框架")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#291-%E5%B8%B8%E7%94%A8python-web%E6%A1%86%E6%9E%B6%E5%AF%B9%E6%AF%94"}},[t._v("29.1. 常用python web框架对比")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#30-python%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B"}},[t._v("30. python多线程编程")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#31-python%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E4%B8%8E%E4%BC%98%E5%8C%96gil"}},[t._v("31. Python性能分析与优化，GIL")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#311-%E5%A6%82%E4%BD%95%E8%A7%84%E9%81%BFgil%E5%BD%B1%E5%93%8D"}},[t._v("31.1. 如何规避GIL影响")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#312-gil%E7%9A%84%E5%AE%9E%E7%8E%B0"}},[t._v("31.2. GIL的实现")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#313-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9C%89%E4%BA%86gil%E8%BF%98%E8%A6%81%E5%85%B3%E6%B3%A8%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8"}},[t._v("31.3. 为什么有了GIL还要关注线程安全？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#314-%E5%A6%82%E4%BD%95%E5%89%96%E6%9E%90%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD"}},[t._v("31.4. 如何剖析程序性能？")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#32-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%8E%AA%E6%96%BD"}},[t._v("32. 服务端性能优化措施")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#33-gil"}},[t._v("33. GIL")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#34-pandas%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81"}},[t._v("34. "),s("code",[t._v("pandas")]),t._v("保存文件的中文乱码")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#35-xpath-%E5%8F%96%E5%80%BC"}},[t._v("35. xpath 取值")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#36-python%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E5%8E%9F%E7%90%86"}},[t._v("36. Python的垃圾回收机制原理")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#361-%E6%A0%87%E8%AE%B0%E6%B8%85%E9%99%A4"}},[t._v("36.1. 标记清除")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#362-%E5%88%86%E4%BB%A3%E5%9B%9E%E6%94%B6"}},[t._v("36.2. 分代回收")])])])])]),t._v(" "),s("h3",{attrs:{id:"_1-python属于动态强类型语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-python属于动态强类型语言"}},[t._v("#")]),t._v(" 1. Python属于动态强类型语言")]),t._v(" "),s("ol",[s("li",[t._v("动态还是静态指的是"),s("strong",[t._v("编译期")]),t._v("还是"),s("strong",[t._v("运行期")]),t._v("确定类型")]),t._v(" "),s("li",[s("strong",[t._v("强类型指的是不会发生隐式类型转换")]),t._v("（"),s("code",[t._v("php")]),t._v(" "),s("code",[t._v("js")]),t._v(" 都是弱类型语言）")])]),t._v(" "),s("h3",{attrs:{id:"_2-为什么要用python"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么要用python"}},[t._v("#")]),t._v(" 2. 为什么要用Python？")]),t._v(" "),s("ol",[s("li",[t._v("胶水语言，轮子多，应用广泛")]),t._v(" "),s("li",[t._v("语言灵活，生产力高")])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ol",[s("li",[t._v("性能问题")]),t._v(" "),s("li",[t._v("代码维护问题（动态语言一时爽，代码重构火葬场）")]),t._v(" "),s("li",[t._v("python2/3兼容问题")])]),t._v(" "),s("h3",{attrs:{id:"_3-什么是monkey-patch-哪些地方用到类-自己如何实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-什么是monkey-patch-哪些地方用到类-自己如何实现"}},[t._v("#")]),t._v(" 3. 什么是"),s("code",[t._v("monkey patch")]),t._v("？哪些地方用到类？自己如何实现？")]),t._v(" "),s("ol",[s("li",[t._v("所谓的"),s("code",[t._v("monkey patch")]),t._v("就是"),s("strong",[t._v("运行时替换")])]),t._v(" "),s("li",[t._v("比如"),s("code",[t._v("gevent")]),t._v("库需要修改内置的"),s("code",[t._v("socket")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("from gevent import monkey; \nmonkey.patch_socket()\n")])])]),s("h3",{attrs:{id:"_4-什么是自省-introspection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-什么是自省-introspection"}},[t._v("#")]),t._v(" 4. 什么是自省("),s("code",[t._v("Introspection")]),t._v(")？")]),t._v(" "),s("ol",[s("li",[t._v("运行时判断一个对象的类型的能力")]),t._v(" "),s("li",[s("code",[t._v("python")]),t._v("一切皆对象，用"),s("code",[t._v("type")]),t._v("，"),s("code",[t._v("id")]),t._v("，"),s("code",[t._v("instance")]),t._v("获取对象类型信息")]),t._v(" "),s("li",[s("code",[t._v("inspect")]),t._v("模块提供了更多获取对象信息的函数")]),t._v(" "),s("li",[s("code",[t._v("id")]),t._v("返回的是变量在内存中的地址")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <class 'list'>")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# True")]),t._v("\n\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 140723276551840")]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-is和等号的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-is和等号的区别"}},[t._v("#")]),t._v(" 5. "),s("code",[t._v("is")]),t._v("和等号的区别")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("is")]),t._v("判断两个变量的地址是否相同")]),t._v(" "),s("li",[t._v("等号"),s("code",[t._v("==")]),t._v("判断两个变量值是否相同")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# True")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# False")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2583559616320")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  2583559616128")]),t._v("\n")])])]),s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("判断一个变量是不是"),s("code",[t._v("None")]),t._v("的时候，用"),s("code",[t._v("is None")]),t._v(" 不是"),s("code",[t._v("==None")]),t._v("因为"),s("code",[t._v("None")]),t._v("本身是单例的")])]),t._v(" "),s("h3",{attrs:{id:"_6-python-之禅"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-python-之禅"}},[t._v("#")]),t._v(" 6. Python 之禅")]),t._v(" "),s("p",[s("code",[t._v("import this")]),t._v(" 查看"),s("code",[t._v("python")]),t._v("准则")]),t._v(" "),s("h3",{attrs:{id:"_7-python2和3差别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-python2和3差别"}},[t._v("#")]),t._v(" 7. Python2和3差别")]),t._v(" "),s("ul",[s("li",[t._v("Print 成为函数，python2 中是关键字")]),t._v(" "),s("li",[t._v("编码问题，"),s("code",[t._v("python3")]),t._v(" 不再有 "),s("code",[t._v("unicode")]),t._v(" 对象，默认 "),s("code",[t._v("str")]),t._v(" 就是 "),s("code",[t._v("unicode")])]),t._v(" "),s("li",[t._v("除法变化，"),s("code",[t._v("python3")]),t._v(" 除号返回浮点数，"),s("code",[t._v("python2")]),t._v(" 是直接截断，为了得到和 "),s("code",[t._v("python2")]),t._v(" 一样的效果，使用"),s("code",[t._v("//")]),t._v("双斜杠")])]),t._v(" "),s("p",[t._v("Python2 需要"),s("code",[t._v("s=u’中文’")]),t._v("，"),s("code",[t._v("type(s)")]),t._v(" // Unicode\nPython3 直接可以 "),s("code",[t._v("s=’中文’")]),t._v(" "),s("code",[t._v("type(s)")]),t._v("   // str")]),t._v(" "),s("h4",{attrs:{id:"_7-1-python3-改进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-python3-改进"}},[t._v("#")]),t._v(" 7.1. Python3 改进")]),t._v(" "),s("ol",[s("li",[t._v("类型注解（"),s("code",[t._v("type hint")]),t._v("）帮助 IDE 进行类型检查")]),t._v(" "),s("li",[t._v("优化的"),s("code",[t._v("super()")]),t._v("方便直接调用父类函数")]),t._v(" "),s("li",[t._v("Python 3 可以使用直接使用 "),s("code",[t._v("super().xxx")]),t._v(" 代替 "),s("code",[t._v("super(Class, self).xxx")])]),t._v(" "),s("li",[t._v("高级解包操作，"),s("code",[t._v("a, b, *rest = range(10)")])]),t._v(" "),s("li",[t._v("生成的"),s("code",[t._v("pyc")]),t._v(" 文件统一放到"),s("code",[t._v("__pycache__")])]),t._v(" "),s("li",[t._v("一些内置库的修改 "),s("code",[t._v("urllib selector")])]),t._v(" "),s("li",[t._v("性能优化")])]),t._v(" "),s("h4",{attrs:{id:"_7-2-python3新增"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-python3新增"}},[t._v("#")]),t._v(" 7.2. Python3新增：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("yield from")]),t._v(" 链接子生成器")]),t._v(" "),s("li",[s("code",[t._v("Asyncio")]),t._v("内置库，"),s("code",[t._v("asyc/await")]),t._v("原生协程支持异步编程")]),t._v(" "),s("li",[t._v("新的内置库 "),s("code",[t._v("enum, mock, asyncio, ipaddress, concurrent.futures")]),t._v("等")])]),t._v(" "),s("h4",{attrs:{id:"_7-3-兼容2-3的工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-兼容2-3的工具"}},[t._v("#")]),t._v(" 7.3. 兼容2/3的工具")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("Six")]),t._v(" 模块")]),t._v(" "),s("li",[s("code",[t._v("2to3")]),t._v("等工具转换代码")]),t._v(" "),s("li",[s("code",[t._v("__future__")]),t._v(" 在 python2 实现 python3 功能")])]),t._v(" "),s("h3",{attrs:{id:"_8-replace-和re-sub-字符串字符替换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-replace-和re-sub-字符串字符替换"}},[t._v("#")]),t._v(" 8. "),s("code",[t._v("replace()")]),t._v(" 和"),s("code",[t._v("re.sub()")]),t._v(" 字符串字符替换")]),t._v(" "),s("h4",{attrs:{id:"_8-1-replace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-replace"}},[t._v("#")]),t._v(" 8.1. "),s("code",[t._v("replace()")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("testStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa:bb[cc'")]),t._v("\n\ntestStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("replace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("':'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每次只能替换一个字符或字符串")]),t._v("\n")])])]),s("h4",{attrs:{id:"_8-2-re-sub"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-re-sub"}},[t._v("#")]),t._v(" 8.2. "),s("code",[t._v("re.sub()")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\ntestStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa:bb[cc}'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把 :[} 替换成 _")]),t._v("\nre"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'[:[}]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" testStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("re.sub()")]),t._v(" 的第一个参数是"),s("code",[t._v("pattern")]),t._v("，使用正则表达式，所以例子中 "),s("code",[t._v("r'[:[}]'")]),t._v(" 代表 "),s("code",[t._v("[]")]),t._v(" 中的任何一个字符")]),t._v(" "),s("h3",{attrs:{id:"_9-python如何传递参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-python如何传递参数"}},[t._v("#")]),t._v(" 9. Python如何传递参数？")]),t._v(" "),s("ol",[s("li",[t._v("传值还是传递引用? 都不是，python 唯一支持的参数传递是共享传参")]),t._v(" "),s("li",[s("code",[t._v("Call by Object")]),t._v(" ("),s("code",[t._v("call by Object Reference or call by Sharing")]),t._v(")")]),t._v(" "),s("li",[s("code",[t._v("Call by sharing")]),t._v("(共享传参)。"),s("strong",[t._v("函数形参获得实参中各个引用的副本")]),t._v("。")])]),t._v(" "),s("p",[t._v("一切皆对象，变量是对象的标识，比如a, b可以指向 "),s("code",[t._v("[1,2]")])]),t._v(" "),s("p",[t._v("例题：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flist")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nflist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [0]")]),t._v("\nflist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [0, 0]")]),t._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fstr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hehe'")]),t._v("\nfstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hehea")]),t._v("\nfstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hehea")]),t._v("\n")])])]),s("p",[t._v("上述例子解释：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("Call by Object Reference")]),t._v(" 就是传递参数的时候，"),s("strong",[t._v("形参和实参都指向同一个对象，它既不是拷贝一个值，也不是直接操作内存")]),t._v("。")]),t._v(" "),s("li",[t._v("但结果有两种，对于可变对象可以直接修改，对于不可变对象很像"),s("code",[t._v("copy")]),t._v("了这个值")])]),t._v(" "),s("h3",{attrs:{id:"_10-哪些是不可变对象-哪些可变"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-哪些是不可变对象-哪些可变"}},[t._v("#")]),t._v(" 10. 哪些是不可变对象？哪些可变？")]),t._v(" "),s("ol",[s("li",[t._v("不可变对象 "),s("code",[t._v("bool/int/float/tuple/str/frozenset")])]),t._v(" "),s("li",[t._v("可变对象 "),s("code",[t._v("list/set/dict")])])]),t._v(" "),s("p",[t._v("例题：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  l "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nll "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nclearList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1, 2, 3]")]),t._v("\n")])])]),s("p",[t._v("函数内的局部变量指向了新的对象，并不影响全局变量。这一点和 JS 不同。")]),t._v(" "),s("h3",{attrs:{id:"_11-args-kwargs含义是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-args-kwargs含义是什么"}},[t._v("#")]),t._v(" 11. "),s("code",[t._v("*args")]),t._v(",  "),s("code",[t._v("**kwarg")]),t._v("s含义是什么")]),t._v(" "),s("ol",[s("li",[t._v("用来处理可变参数")]),t._v(" "),s("li",[s("code",[t._v("*args")]),t._v(" 被打包成"),s("code",[t._v("tuple")])]),t._v(" "),s("li",[s("code",[t._v("**kwargs")]),t._v(" 被打包成"),s("code",[t._v("dict")])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("multi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n\nmulti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <class 'tuple'> (1, 2, 3)")]),t._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("multi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\nmulti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <class 'dict'> {'a': 1, 'b': 2}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_12-如何自定义异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-如何自定义异常"}},[t._v("#")]),t._v(" 12. 如何自定义异常？")]),t._v(" "),s("ol",[s("li",[t._v("继承"),s("code",[t._v("Exception")]),t._v("实现自定义异常（为什么不是"),s("code",[t._v("BaseException")]),t._v("）（就不能用"),s("code",[t._v("ctrl+c")]),t._v(" 结束程序了）")]),t._v(" "),s("li",[t._v("给异常加上个一些附加信息")]),t._v(" "),s("li",[t._v("处理一些业务相关的特定异常（"),s("code",[t._v("raise MyException")]),t._v("）")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" MyException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my exception'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" MyException "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# my exception")]),t._v("\n")])])]),s("h3",{attrs:{id:"_13-python生成器与协程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-python生成器与协程"}},[t._v("#")]),t._v(" 13. Python生成器与协程")]),t._v(" "),s("p",[t._v("什么是生成器？"),s("code",[t._v("Generator")])]),t._v(" "),s("ol",[s("li",[t._v("生成器就是可以生成值的函数")]),t._v(" "),s("li",[t._v("当一个函数里有了"),s("code",[t._v("yield")]),t._v("关键字就成了生成器")]),t._v(" "),s("li",[t._v("生成器可以挂起执行并且保持当前执行的状态")])]),t._v(" "),s("p",[t._v("生成器例子：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simple_gen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),t._v("\n\ngen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simple_gen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <class 'generator'>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hello")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# world")]),t._v("\n")])])]),s("p",[t._v("基于生成器的协程（python2）")]),t._v(" "),s("ul",[s("li",[t._v("Python3之前没有原生协程，只有基于生成器的协程")]),t._v(" "),s("li",[s("code",[t._v("pep342")]),t._v("("),s("code",[t._v("coroutines via Enhanced Generators")]),t._v(")增强生成器功能")]),t._v(" "),s("li",[t._v("生成器可以通过"),s("code",[t._v("yield")]),t._v("暂停执行和产出数据")]),t._v(" "),s("li",[t._v("同时支持"),s("code",[t._v("send()")]),t._v("向生成器发送数据和"),s("code",[t._v("throw()")]),t._v("向生成器抛异常")])]),t._v(" "),s("p",[t._v("协程注意点：")]),t._v(" "),s("ol",[s("li",[t._v("协程需要使用"),s("code",[t._v("send(None)")]),t._v(" 或者"),s("code",[t._v("next(coroutine)")]),t._v("来预激("),s("code",[t._v("prime")]),t._v(")才能启动")]),t._v(" "),s("li",[t._v("在"),s("code",[t._v("yield")]),t._v("处协程会暂停执行")]),t._v(" "),s("li",[t._v("单独的"),s("code",[t._v("yield value")]),t._v("会产出值给调用方")]),t._v(" "),s("li",[t._v("可以通过"),s("code",[t._v("coroutine.send(value)")]),t._v("来给协程发送值，发送的值会赋值给"),s("code",[t._v("yield")]),t._v("表达式左边的"),s("code",[t._v("value=yield")])]),t._v(" "),s("li",[t._v("协程执行完成后（没有遇到下一个"),s("code",[t._v("yield")]),t._v("语句）会抛出"),s("code",[t._v("StopIteration")]),t._v("异常")])]),t._v(" "),s("h4",{attrs:{id:"_13-1-协程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-协程"}},[t._v("#")]),t._v(" 13.1. 协程")]),t._v(" "),s("ul",[s("li",[t._v("协程（"),s("code",[t._v("Coroutine")]),t._v("）是一种轻量级的用户态线程，实现的是非抢占式的调度，即由当前协程切换到其他协程由当前协程来控制。")]),t._v(" "),s("li",[t._v("目前的协程框架一般都是设计成"),s("code",[t._v("1:N")]),t._v("模式。所谓"),s("code",[t._v("1:N")]),t._v("就是一个线程作为一个容器里面放置多个协程。")]),t._v(" "),s("li",[t._v("那么谁来适时的切换这些协程？答案是由协程自己主动让出CPU，也就是每个协程池里面有一个调度器，这个调度器是被动调度的。意思就是他不会主动调度。")])]),t._v(" "),s("h3",{attrs:{id:"_14-python-单元测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-python-单元测试"}},[t._v("#")]),t._v(" 14. Python 单元测试")]),t._v(" "),s("p",[s("code",[t._v("Unit Testing")])]),t._v(" "),s("ul",[s("li",[t._v("针对程序模块进行正确性检验")]),t._v(" "),s("li",[t._v("一个函数，一个类进行验证")]),t._v(" "),s("li",[t._v("自底向上保证程序正确性")])]),t._v(" "),s("p",[t._v("为什么要写单元测试？\n三无代码不可取（无文档、无注释、无单测）")]),t._v(" "),s("ul",[s("li",[t._v("保证代码逻辑的正确性（甚至有些采用测试驱动开发TDD）")]),t._v(" "),s("li",[t._v("单测影响设计，易测的代码往往是高内聚低耦合的。")]),t._v(" "),s("li",[t._v("回归测试，防止改一处导致整个服务不可用")])]),t._v(" "),s("p",[t._v("单元测试相关的库：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("nose/pytest")]),t._v(" 较为常用")]),t._v(" "),s("li",[s("code",[t._v("mock")]),t._v("模块用来模拟替换网络请求等")]),t._v(" "),s("li",[s("code",[t._v("coverage")]),t._v("统计测试覆盖率")])]),t._v(" "),s("h3",{attrs:{id:"_15-python-深拷贝和浅拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-python-深拷贝和浅拷贝"}},[t._v("#")]),t._v(" 15. Python 深拷贝和浅拷贝")]),t._v(" "),s("ul",[s("li",[t._v("什么是深拷贝？什么是浅拷贝？")]),t._v(" "),s("li",[t._v("如何实现深拷贝？ "),s("code",[t._v("copy.deepcopy(x)")])]),t._v(" "),s("li",[t._v("Python如何正确初始化一个二维数组？")])]),t._v(" "),s("p",[t._v("浅拷贝是对另外一个变量的内存地址的拷贝，这两个变量指向同一个内存地址的变量值")]),t._v(" "),s("p",[t._v("深拷贝：一个变量对另一个变量的值拷贝")]),t._v(" "),s("h3",{attrs:{id:"_16-python-内置数据结构算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-python-内置数据结构算法"}},[t._v("#")]),t._v(" 16. Python 内置数据结构算法")]),t._v(" "),s("p",[t._v("用过哪些内置的算法数据结构？")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("sorted")])]),t._v(" "),s("li",[s("code",[t._v("dict/list/set/tuple")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/imgs/python_data_structure.png",alt:"Python 内置数据结构算法"}})]),t._v(" "),s("h4",{attrs:{id:"_16-1-python-dict底层结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-1-python-dict底层结构"}},[t._v("#")]),t._v(" 16.1. Python "),s("code",[t._v("dict")]),t._v("底层结构")]),t._v(" "),s("ul",[s("li",[t._v("Dict底层使用的是哈希表")]),t._v(" "),s("li",[t._v("为了支持快速查找使用了哈希表作为底层结构")]),t._v(" "),s("li",[t._v("哈希表平均查找时间复杂度"),s("code",[t._v("O(1)")])]),t._v(" "),s("li",[s("code",[t._v("CPython")]),t._v("解释器使用二次探查解决哈希冲突问题")])]),t._v(" "),s("p",[t._v("哈希表示如何解决冲突的？"),s("strong",[t._v("链接法")]),t._v("、"),s("strong",[t._v("探查法")]),t._v("\n哈希表示如何扩容的？")]),t._v(" "),s("h4",{attrs:{id:"_16-2-list和tuple区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-list和tuple区别"}},[t._v("#")]),t._v(" 16.2. "),s("code",[t._v("List")]),t._v("和"),s("code",[t._v("tuple")]),t._v("区别")]),t._v(" "),s("ul",[s("li",[t._v("都是线性结构，支持下标访问")]),t._v(" "),s("li",[s("code",[t._v("List")]),t._v("是可变对象，"),s("code",[t._v("tuple")]),t._v("保存的引用不可变(不可变对象)")]),t._v(" "),s("li",[s("code",[t._v("List")]),t._v("不能作为字典的"),s("code",[t._v("key")]),t._v("，"),s("code",[t._v("tuple")]),t._v("可以（可变对象不可"),s("code",[t._v("hash")]),t._v("）")])]),t._v(" "),s("p",[t._v("注意：\n如果"),s("code",[t._v("tuple")]),t._v("本身保存的是可变对象，则可以修改这个可变对象")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ([1, 2], 2, 3)")]),t._v("\n")])])]),s("h3",{attrs:{id:"_17-什么是lrucache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-什么是lrucache"}},[t._v("#")]),t._v(" 17. 什么是LRUCache？")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Least-Recently-Used")]),t._v("替换掉最近最少使用的对象")]),t._v(" "),s("li",[t._v("缓存剔除策略，当缓存空间不够用的时候需要一种方式剔除"),s("code",[t._v("key")])]),t._v(" "),s("li",[t._v("常见的有"),s("code",[t._v("LRU")]),t._v("、"),s("code",[t._v("LFU")]),t._v("等("),s("code",[t._v("F")]),t._v("即"),s("code",[t._v("frequency")]),t._v(")")]),t._v(" "),s("li",[s("code",[t._v("LRU")]),t._v("通过使用一个"),s("strong",[t._v("循环双端队列")]),t._v("不断把最新访问的"),s("code",[t._v("key")]),t._v("放到表头")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/imgs/python_LRU.png",alt:"什么是LRUCache"}})]),t._v(" "),s("h4",{attrs:{id:"_17-1-如何实现lrucache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-如何实现lrucache"}},[t._v("#")]),t._v(" 17.1. 如何实现"),s("code",[t._v("LRUCache")]),t._v("？")]),t._v(" "),s("ul",[s("li",[t._v("字典用来缓存，循环双端链表用来记录访问顺序")]),t._v(" "),s("li",[t._v("利用"),s("code",[t._v("python")]),t._v("内置的"),s("code",[t._v("dict + collection.OrderedDict")]),t._v("实现")]),t._v(" "),s("li",[s("code",[t._v("Dict")]),t._v("用来当做"),s("code",[t._v("k/v")]),t._v("键值对的缓存")]),t._v(" "),s("li",[s("code",[t._v("OrderedDict")]),t._v("用来实现最新最近访问的"),s("code",[t._v("key")])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" collections "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" OrderedDict\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LRUCache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" capacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Od "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OrderedDict\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("capacity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" capacity\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每次访问更新最近使用的key")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Od"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Od"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Od"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("move_to_end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新k/v")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Od"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Od"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Od"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新key到表头")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Od"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Od"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("capacity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Od"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("popitem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("last "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_18-组合和继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-组合和继承"}},[t._v("#")]),t._v(" 18. 组合和继承")]),t._v(" "),s("ul",[s("li",[t._v("优先使用组合（保持代码简单），而非继承")]),t._v(" "),s("li",[t._v("组合是使用其他的类实例作为自己的一个属性（"),s("code",[t._v("Has – a")]),t._v("关系）")]),t._v(" "),s("li",[t._v("子类继承父类的属性和方法（"),s("code",[t._v("Is a")]),t._v(" 关系）")])]),t._v(" "),s("p",[s("code",[t._v("collections.Deque=>stack")]),t._v("就是组合")]),t._v(" "),s("h3",{attrs:{id:"_19-classmethod-staticmethod区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-classmethod-staticmethod区别"}},[t._v("#")]),t._v(" 19. "),s("code",[t._v("Classmethod/staticmethod")]),t._v("区别")]),t._v(" "),s("ul",[s("li",[t._v("都可以通过"),s("code",[t._v("Class.method()")]),t._v("的方式使用")]),t._v(" "),s("li",[s("code",[t._v("Classmethod")]),t._v("的第一个参数是"),s("code",[t._v("cls")]),t._v("，可以引用类变量")]),t._v(" "),s("li",[s("code",[t._v("Staticmethod")]),t._v("使用起来和普通函数一样，只不过放在类里去组织")]),t._v(" "),s("li",[s("code",[t._v("Classmethod")]),t._v("是为了使用类变量")]),t._v(" "),s("li",[s("code",[t._v("Staticmethod")]),t._v("是代码组织的需要，完全可以放到类之外")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v("：\n  country "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'China'")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n\n  "),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@classmethod")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("country"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@staticmethod")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" last"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" first "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" last\n")])])]),s("h3",{attrs:{id:"_20-元类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-元类"}},[t._v("#")]),t._v(" 20. 元类")]),t._v(" "),s("ul",[s("li",[t._v("元类("),s("code",[t._v("Meta Class")]),t._v(")是创建类的类")]),t._v(" "),s("li",[t._v("元类允许我们控制类的生成，比如修改类的属性等")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("type")]),t._v("来定义元类")]),t._v(" "),s("li",[t._v("元类最常见的一个使用场景就是"),s("code",[t._v("ORM")]),t._v("框架")])]),t._v(" "),s("h4",{attrs:{id:"_20-1-type-child-base"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-1-type-child-base"}},[t._v("#")]),t._v(" 20.1. "),s("code",[t._v("type(‘child’, (Base, ), {})")])]),t._v(" "),s("p",[t._v("三个参数，类的名称、基类（"),s("code",[t._v("Base")]),t._v("后必须加括号，否则就不是"),s("code",[t._v("tuple")]),t._v("了）、属性")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Base")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Base"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等价于如下格式：")]),t._v("\nSameChild "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Child'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Base"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 带有方法的类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChildWithMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Base"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  bar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等价定义")]),t._v("\nChildWithMethod "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ChildWithMethod'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Base"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_21-init-与-new-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-init-与-new-的区别"}},[t._v("#")]),t._v(" 21. "),s("code",[t._v("__init__")]),t._v("与"),s("code",[t._v("__new__")]),t._v("的区别？")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("用法不同")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("new")]),t._v("用于创建实例，所以该方法是在实例创建之前被调用，是类级别的方法，是静态方法。")]),t._v(" "),s("li",[s("code",[t._v("init")]),t._v("用于初始化实例，在实例创建之后被调用，是实例级别的方法，用于设置对象属性的初始值。")])])]),t._v(" "),s("li",[s("p",[t._v("传入参数不同")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("new")]),t._v("至少有一个参数"),s("code",[t._v("cls")]),t._v("，代表当前类，此参数在实例化使由"),s("code",[t._v("python")]),t._v("解释器自动识别。")]),t._v(" "),s("li",[s("code",[t._v("init")]),t._v("至少有一个参数"),s("code",[t._v("self")]),t._v("，就是"),s("code",[t._v("__new__")]),t._v("返回的实例。")])])]),t._v(" "),s("li",[s("p",[t._v("返回值不同")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("__new__")]),t._v("必须有返回值，返回实例对象；")]),t._v(" "),s("li",[s("code",[t._v("__init__")]),t._v("不需要有返回值")])])])]),t._v(" "),s("p",[t._v("子类没有重新定义"),s("code",[t._v("new")]),t._v("方法时，"),s("code",[t._v("python")]),t._v("默认调用父类的"),s("code",[t._v("new")]),t._v("方法类来构造该类实例，可以一直追溯到"),s("code",[t._v("object")]),t._v("的"),s("code",[t._v("new")]),t._v("方法")]),t._v(" "),s("h4",{attrs:{id:"_21-1-new-用途"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-1-new-用途"}},[t._v("#")]),t._v(" 21.1. "),s("code",[t._v("__new__")]),t._v("用途：")]),t._v(" "),s("ol",[s("li",[t._v("可以用于继承一些不可变的"),s("code",[t._v("class")]),t._v("，比如"),s("code",[t._v("int")]),t._v("，"),s("code",[t._v("str")]),t._v("，"),s("code",[t._v("tuple")]),t._v("，提供一个自定义这些类的实例化过程的途径，一般通过重载"),s("code",[t._v("new")]),t._v("方法实现。")]),t._v(" "),s("li",[t._v("还可以用于实现单例模式。")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PositiveInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__new__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PositiveInteger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__new__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("abs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PositiveInteger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_22-装饰器-decorator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-装饰器-decorator"}},[t._v("#")]),t._v(" 22. 装饰器 "),s("code",[t._v("Decorator")])]),t._v(" "),s("ul",[s("li",[t._v("一切皆对象，函数也可以当做参数传递")]),t._v(" "),s("li",[t._v("装饰器是接收函数作为参数，添加功能后返回一个新函数的函数（类）")]),t._v(" "),s("li",[s("code",[t._v("Python")]),t._v("中通过"),s("code",[t._v("@")]),t._v("使用装饰器")])]),t._v(" "),s("p",[t._v("编写一个记录函数执行时间的装饰器")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log_time")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    beg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use time: {}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" beg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _log\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@log_time")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mysleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmysleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("@")]),t._v("只是语法糖\n还可以这样：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("newsleep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" log_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mysleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnewsleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"_22-1-如何使用类编写装饰器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-1-如何使用类编写装饰器"}},[t._v("#")]),t._v(" 22.1. 如何使用类编写装饰器")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LogTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__call__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      beg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use time: {}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" beg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _log\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@LogTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mysleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmysleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_23-python-实现单例模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-python-实现单例模式"}},[t._v("#")]),t._v(" 23. python 实现单例模式")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__new__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("hasattr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_instance'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      _instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__new__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _instance\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_instance\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Singleton"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\nc1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MyClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nc2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MyClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" c1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" c2\n")])])]),s("h3",{attrs:{id:"_24-python-迭代器模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-python-迭代器模式"}},[t._v("#")]),t._v(" 24. python 迭代器模式")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Python")]),t._v("内置对迭代器模式的支持")]),t._v(" "),s("li",[t._v("比如用"),s("code",[t._v("for")]),t._v("遍历各种"),s("code",[t._v("Iterable")]),t._v("的数据类型")]),t._v(" "),s("li",[s("code",[t._v("Python")]),t._v("可以实现"),s("code",[t._v("__next__")]),t._v("和"),s("code",[t._v("__iter__")]),t._v("实现迭代器")])]),t._v(" "),s("p",[t._v("栈的迭代：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" collections "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" deque\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_deque "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" deque"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_deque"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_deque"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_deque"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__iter__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使栈可以迭代，后进先出")]),t._v("\n    res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_deque"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("reversed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" i\n\ns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Stack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("Iterable")]),t._v("和"),s("code",[t._v("Iterator")]),t._v("的区别？")]),t._v(" "),s("h3",{attrs:{id:"_25-函数式编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-函数式编程"}},[t._v("#")]),t._v(" 25. 函数式编程")]),t._v(" "),s("p",[t._v("Python支持部分函数式编程特性")]),t._v(" "),s("ul",[s("li",[t._v("把电脑的运算视作视觉上的函数计算（"),s("code",[t._v("lambda")]),t._v("演算）")]),t._v(" "),s("li",[t._v("高阶函数："),s("code",[t._v("map/reduce/filter")])]),t._v(" "),s("li",[t._v("无副作用，相同的函数调用始终会产生同样的结果")])]),t._v(" "),s("h4",{attrs:{id:"_25-1-函数式编程优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-1-函数式编程优点"}},[t._v("#")]),t._v(" 25.1. 函数式编程优点")]),t._v(" "),s("ol",[s("li",[t._v("代码简洁，开发快速（大量使用函数，减少了代码的重复）")]),t._v(" "),s("li",[t._v("接近自然语言，易于理解（抽象程度高）")]),t._v(" "),s("li",[t._v("更方便的代码管理 （利于单元测试以及模块化组合）")]),t._v(" "),s("li",[t._v("易于并发编程 （不修改变量，不存在锁线程问题，不需要考虑死锁）")])]),t._v(" "),s("h4",{attrs:{id:"_25-2-计算机-computer-和计算-compute-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-2-计算机-computer-和计算-compute-的区别"}},[t._v("#")]),t._v(" 25.2. 计算机（"),s("code",[t._v("Computer")]),t._v("）和计算（"),s("code",[t._v("Compute")]),t._v("）的区别：")]),t._v(" "),s("ul",[s("li",[t._v("在计算机的层次上，CPU执行的是加减乘除的指令代码，以及各种条件判断和跳转指令，所以，汇编语言是最贴近计算机的语言。")]),t._v(" "),s("li",[t._v("而计算则指数学意义上的计算，越是抽象的计算，离计算机硬件越远。")]),t._v(" "),s("li",[t._v("对应到编程语言，就是越低级的语言，越贴近计算机，抽象程度低，执行效率高，比如"),s("code",[t._v("C")]),t._v("语言；越高级的语言，越贴近计算，抽象程度高，执行效率低，比如"),s("code",[t._v("Lisp")]),t._v("语言。")]),t._v(" "),s("li",[t._v("函数式编程就是一种抽象程度很高的编程范式，纯粹的函数式编程语言编写的函数没有变量，因此，任意一个函数，只要输入是确定的，输出就是确定的，这种纯函数我们称之为没有副作用。而允许使用变量的程序设计语言，由于函数内部的变量状态不确定，同样的输入，可能得到不同的输出，因此，这种函数是有副作用的。")]),t._v(" "),s("li",[t._v("函数式编程的一个特点就是，允许把函数本身作为参数传入另一个函数，还允许返回一个函数！")]),t._v(" "),s("li",[t._v("Python对函数式编程提供部分支持。由于Python允许使用变量，因此，Python不是纯函数式编程语言。")])]),t._v(" "),s("h3",{attrs:{id:"_26-什么是闭包-closure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-什么是闭包-closure"}},[t._v("#")]),t._v(" 26. 什么是闭包("),s("code",[t._v("Closure")]),t._v(")")]),t._v(" "),s("ul",[s("li",[t._v("绑定了外部作用域的变量的函数（引用了外部自由变量的函数）")]),t._v(" "),s("li",[t._v("特性：自由变量会和闭包函数同时存在")]),t._v(" "),s("li",[t._v("即使程序离开外部作用域，如果仍然可见，绑定变量不会销毁")]),t._v(" "),s("li",[t._v("每次运行外部函数都会重新创建闭包")])]),t._v(" "),s("h3",{attrs:{id:"_27-io多路复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-io多路复用"}},[t._v("#")]),t._v(" 27. IO多路复用")]),t._v(" "),s("p",[t._v("五种IO模型（Unix网络编程中提到了5中IO网络模型）")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Blocking IO")]),t._v("      阻塞式IO")]),t._v(" "),s("li",[s("code",[t._v("Nonblocking IO")]),t._v("  非阻塞式IO")]),t._v(" "),s("li",[s("code",[t._v("IO multiplexing")]),t._v("   IO多路复用")]),t._v(" "),s("li",[s("code",[t._v("Signal Driven IO")]),t._v("   信号驱动IO")]),t._v(" "),s("li",[s("code",[t._v("Asynchronous IO")]),t._v("   异步IO")])]),t._v(" "),s("p",[t._v("后两种不常用，一般使用IO多路复用比较多")]),t._v(" "),s("h4",{attrs:{id:"_27-1-提升服务器的并发能力"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-1-提升服务器的并发能力"}},[t._v("#")]),t._v(" 27.1. 提升服务器的并发能力？")]),t._v(" "),s("ul",[s("li",[t._v("多线程模型，创建新的线程处理请求")]),t._v(" "),s("li",[t._v("多进程模型，创建新的进程处理请求\n"),s("ul",[s("li",[t._v("线程/进程创建开销比较大，可以用线程池方式解决")]),t._v(" "),s("li",[t._v("线程和进程比较占用资源，难以同时创建太多")])])]),t._v(" "),s("li",[t._v("IO多路复用，实现单进程同时处理多个"),s("code",[t._v("socket")]),t._v("请求")])]),t._v(" "),s("h4",{attrs:{id:"_27-2-什么是io多路复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-2-什么是io多路复用"}},[t._v("#")]),t._v(" 27.2. 什么是IO多路复用?")]),t._v(" "),s("ul",[s("li",[t._v("操作系统提供的同时监听多个"),s("code",[t._v("socket")]),t._v("的机制")]),t._v(" "),s("li",[t._v("为了实现高并发需要一种机制并发处理多个"),s("code",[t._v("socket")])]),t._v(" "),s("li",[t._v("Linux常见的是"),s("code",[t._v("select/poll/epoll")])]),t._v(" "),s("li",[t._v("可以使用单线程单进程处理多个"),s("code",[t._v("socket")])])]),t._v(" "),s("h4",{attrs:{id:"_27-3-为什么select能实现高并发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-3-为什么select能实现高并发"}},[t._v("#")]),t._v(" 27.3. 为什么"),s("code",[t._v("select")]),t._v("能实现高并发？")]),t._v(" "),s("p",[s("code",[t._v("select")]),t._v("可以同时处理多个"),s("code",[t._v("socket")]),t._v("，有一个就绪应用程序 代码就可以处理它")]),t._v(" "),s("h4",{attrs:{id:"_27-4-python如何实现io多路复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-4-python如何实现io多路复用"}},[t._v("#")]),t._v(" 27.4. Python如何实现IO多路复用？")]),t._v(" "),s("ul",[s("li",[t._v("Python封装了操作系统的多路复用("),s("code",[t._v("select/poll/epoll")]),t._v(")")]),t._v(" "),s("li",[t._v("Python2 "),s("code",[t._v("select")]),t._v("模块")]),t._v(" "),s("li",[t._v("Python3 "),s("code",[t._v("selectors")]),t._v("模块")])]),t._v(" "),s("h3",{attrs:{id:"_28-python并发网络库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-python并发网络库"}},[t._v("#")]),t._v(" 28. Python并发网络库")]),t._v(" "),s("p",[t._v("你用过哪些并发网络库？")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Tornado")]),t._v(" "),s("code",[t._v("Gevent")]),t._v(" "),s("code",[t._v("Asyncio")])]),t._v(" "),s("li",[s("code",[t._v("Tornado")]),t._v("并发网络库，同时也是一个web微框架")]),t._v(" "),s("li",[s("code",[t._v("Gevent")]),t._v("绿色框架("),s("code",[t._v("greenlet")]),t._v(")实现并发，猴子补丁修改内置"),s("code",[t._v("socket")]),t._v("(修改阻塞的内置库为非阻塞的)")]),t._v(" "),s("li",[s("code",[t._v("Asyncio")]),t._v(" "),s("code",[t._v("python3")]),t._v("内置的并发网络库，基于原生协程")])]),t._v(" "),s("h4",{attrs:{id:"_28-1-tornado框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-1-tornado框架"}},[t._v("#")]),t._v(" 28.1. "),s("code",[t._v("Tornado")]),t._v("框架")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Tornado")]),t._v("适用于微服务，实现"),s("code",[t._v("Restful")]),t._v("接口")]),t._v(" "),s("li",[t._v("底层基于Linux多路复用")]),t._v(" "),s("li",[t._v("可以通过协程或者回调实现异步编程")]),t._v(" "),s("li",[t._v("生态不完善，相应的异步框架比如"),s("code",[t._v("ORM")]),t._v("不完善")])]),t._v(" "),s("h4",{attrs:{id:"_28-2-gevent-高性能的并发网络库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-2-gevent-高性能的并发网络库"}},[t._v("#")]),t._v(" 28.2. "),s("code",[t._v("Gevent")]),t._v("：高性能的并发网络库")]),t._v(" "),s("ul",[s("li",[t._v("基于轻量级绿色线程（"),s("code",[t._v("greenlet")]),t._v("）实现并发")]),t._v(" "),s("li",[t._v("需要注意"),s("code",[t._v("monkey patch")]),t._v("， "),s("code",[t._v("gevent")]),t._v("修改了内置的"),s("code",[t._v("socket")]),t._v("为非阻塞")]),t._v(" "),s("li",[t._v("配合"),s("code",[t._v("gunicorn")]),t._v("和"),s("code",[t._v("gevent")]),t._v("部署作为"),s("code",[t._v("wsgi server")])])]),t._v(" "),s("h4",{attrs:{id:"_28-3-asyncio-基于协程实现的内置的并发网络库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-3-asyncio-基于协程实现的内置的并发网络库"}},[t._v("#")]),t._v(" 28.3. "),s("code",[t._v("Asyncio")]),t._v(" 基于协程实现的内置的并发网络库")]),t._v(" "),s("ul",[s("li",[t._v("协程+事件循环")]),t._v(" "),s("li",[t._v("应用不够广泛，生态不够完善，"),s("code",[t._v("aiohttp")])])]),t._v(" "),s("p",[t._v("并发网络库底层一般都是基于IO多路复用实现")]),t._v(" "),s("h3",{attrs:{id:"_29-wsgi和web框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-wsgi和web框架"}},[t._v("#")]),t._v(" 29. WSGI和web框架")]),t._v(" "),s("p",[t._v("什么WSGI？")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Python web server gateway interface")]),t._v("("),s("code",[t._v("pep3333")]),t._v(")")]),t._v(" "),s("li",[t._v("解决"),s("code",[t._v("python web server")]),t._v("乱象 "),s("code",[t._v("mod_python")]),t._v(", "),s("code",[t._v("CGI")]),t._v(", "),s("code",[t._v("FastCGI")])]),t._v(" "),s("li",[t._v("描述了"),s("code",[t._v("web server")]),t._v("("),s("code",[t._v("Gunicorn/uWSGI")]),t._v(")如何与web框架（"),s("code",[t._v("Flask/Djano")]),t._v("）交互，web框架如何处理请求")])]),t._v(" "),s("h4",{attrs:{id:"_29-1-常用python-web框架对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-1-常用python-web框架对比"}},[t._v("#")]),t._v(" 29.1. 常用python web框架对比")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Django")]),t._v("：大而全，内置"),s("code",[t._v("ORM")]),t._v("、"),s("code",[t._v("Admin")]),t._v("等组件，第三方插件较多")]),t._v(" "),s("li",[s("code",[t._v("Flask")]),t._v("：微框架，插件机制，比较灵活")]),t._v(" "),s("li",[s("code",[t._v("Tornado")]),t._v("：异步支持的微框架和异步网络库")])]),t._v(" "),s("p",[t._v("CPU时间和IO时间可以并行，所以并发尽管CPU时间和串行时间相同，但有IO的存在，使得可以缩短总时间。")]),t._v(" "),s("h3",{attrs:{id:"_30-python多线程编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-python多线程编程"}},[t._v("#")]),t._v(" 30. python多线程编程")]),t._v(" "),s("p",[t._v("多线程是为了同步完成多项任务，不是为了提高运行效率，而是为了提高资源使用效率来提高系统的效率。线程是在同一时间需要完成多项任务的时候实现的。")]),t._v(" "),s("p",[t._v("多线程目的：")]),t._v(" "),s("ul",[s("li",[t._v("更好的利用CPU资源，提高并发数量，避免阻塞（异步调用）")])]),t._v(" "),s("p",[t._v("多线程缺点：")]),t._v(" "),s("ul",[s("li",[t._v("如果有大量的线程，会影响性能，因为操作系统需要在它们之前切换")]),t._v(" "),s("li",[t._v("更多的线程需要更多的内存空间")]),t._v(" "),s("li",[t._v("需要防止线程死锁")])]),t._v(" "),s("p",[t._v("当开启一个程序的时候，会默认开启一个主线程")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("join")]),t._v("方法：在子线程完成后才执行主线程（阻塞主线程）")]),t._v(" "),s("li",[s("code",[t._v("setDaemon")]),t._v("方法：主线程结束后，会把子线程一起结束，不论它是否执行完。要在"),s("code",[t._v("start")]),t._v("方法之前调用")]),t._v(" "),s("li",[s("code",[t._v("join")]),t._v("和"),s("code",[t._v("setDaemon")]),t._v("方法的作用相反")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  start_time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  t1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sleep_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  t2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sleep_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 阻塞主线程")]),t._v("\n  t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  end_time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("end_time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" start_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("实例化"),s("code",[t._v("Thread")]),t._v("两种方式：")]),t._v(" "),s("ol",[s("li",[t._v("创建任务函数，然后"),s("code",[t._v("t1 = Thread(target=task, args=(2,))")]),t._v("\n（任务后面不能加括号，否则传递的是执行后的结果，即"),s("code",[t._v("null")]),t._v("；只有一个参数的话，一定要加逗号，否则不是"),s("code",[t._v("tuple")]),t._v("）")]),t._v(" "),s("li",[t._v("创建类，继承"),s("code",[t._v("Thread")]),t._v("，然后"),s("code",[t._v("t1 = MyThread(2)")])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep_task")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sleep_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'start {}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sleep_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sleep_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end {}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sleep_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SleepThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sleep_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep_time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sleep_time\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 调用父类的初始化方法")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'start {}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end {}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_31-python性能分析与优化-gil"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-python性能分析与优化-gil"}},[t._v("#")]),t._v(" 31. Python性能分析与优化，GIL")]),t._v(" "),s("p",[s("code",[t._v("Global Interpreter Lock")]),t._v(" （"),s("code",[t._v("Cpython")]),t._v("中的）")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("Cpython")]),t._v("解释器的内存管理并不是线程安全的")]),t._v(" "),s("li",[t._v("保护多线程情况下对"),s("code",[t._v("python")]),t._v("对象的访问")]),t._v(" "),s("li",[s("code",[t._v("Cpython")]),t._v("使用简单的锁机制避免多个线程同时执行字节码")])]),t._v(" "),s("p",[s("code",[t._v("GIL")]),t._v("的影响，限制了程序的多核执行：")]),t._v(" "),s("ol",[s("li",[t._v("同一个时间只能有一个线程执行字节码")]),t._v(" "),s("li",[s("code",[t._v("CPU")]),t._v("密集程序难以利用多核优势")]),t._v(" "),s("li",[t._v("IO期间会释放"),s("code",[t._v("GIL")]),t._v("，对IO密集程序影响不大")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/imgs/python_GIL_IO.png",alt:"GIL"}})]),t._v(" "),s("h4",{attrs:{id:"_31-1-如何规避gil影响"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-1-如何规避gil影响"}},[t._v("#")]),t._v(" 31.1. 如何规避GIL影响")]),t._v(" "),s("p",[t._v("区分 "),s("code",[t._v("CPU")]),t._v(" 和 "),s("code",[t._v("IO")]),t._v(" 密集程序")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("CPU")]),t._v(" 密集可以使用"),s("strong",[t._v("多进程+进程池")])]),t._v(" "),s("li",[s("code",[t._v("IO")]),t._v(" 密集使用"),s("strong",[t._v("多线程/协程")])]),t._v(" "),s("li",[s("code",[t._v("Cython")]),t._v(" 扩展")])]),t._v(" "),s("h4",{attrs:{id:"_31-2-gil的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-2-gil的实现"}},[t._v("#")]),t._v(" 31.2. GIL的实现")]),t._v(" "),s("p",[t._v("每隔一段时间尝试释放当前线程的锁并让其他线程获取锁并执行")]),t._v(" "),s("h4",{attrs:{id:"_31-3-为什么有了gil还要关注线程安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-3-为什么有了gil还要关注线程安全"}},[t._v("#")]),t._v(" 31.3. 为什么有了GIL还要关注线程安全？")]),t._v(" "),s("p",[t._v("Python中什么操作才是原子的？一步到位执行完")]),t._v(" "),s("ol",[s("li",[t._v("一个操作如果是"),s("strong",[t._v("一个字节码执行可以完成")]),t._v("就是原子的")]),t._v(" "),s("li",[t._v("原子的是可以保证线程安全的")]),t._v(" "),s("li",[t._v("使用dis操作来分析字节码")])]),t._v(" "),s("h4",{attrs:{id:"_31-4-如何剖析程序性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-4-如何剖析程序性能"}},[t._v("#")]),t._v(" 31.4. 如何剖析程序性能？")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("Profile")]),t._v("工具（内置或第三方）")]),t._v(" "),s("ol",[s("li",[t._v("内置的"),s("code",[t._v("profile")]),t._v("/"),s("code",[t._v("cprofile")]),t._v("等工具")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("pyflame")]),t._v("("),s("code",[t._v("uber")]),t._v("开源)的火焰图工具")])]),t._v(" "),s("h3",{attrs:{id:"_32-服务端性能优化措施"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-服务端性能优化措施"}},[t._v("#")]),t._v(" 32. 服务端性能优化措施")]),t._v(" "),s("p",[t._v("Web应用一般语言不会成为瓶颈")]),t._v(" "),s("ol",[s("li",[t._v("数据结构与算法优化")]),t._v(" "),s("li",[t._v("数据库层：索引优化，慢查询消除，批量操作减少IO，"),s("code",[t._v("NoSQL")])]),t._v(" "),s("li",[t._v("网络IO：批量操作，"),s("code",[t._v("pipeline")]),t._v("操作减少IO")]),t._v(" "),s("li",[t._v("缓存：使用内存数据库 "),s("code",[t._v("redis/Memcached")])]),t._v(" "),s("li",[t._v("异步： "),s("code",[t._v("asyncio")]),t._v(", "),s("code",[t._v("celery")])]),t._v(" "),s("li",[t._v("并发："),s("code",[t._v("gevent")]),t._v("/多线程")])]),t._v(" "),s("h3",{attrs:{id:"_33-gil"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-gil"}},[t._v("#")]),t._v(" 33. GIL")]),t._v(" "),s("p",[s("code",[t._v("Global Interpreter Lock")]),t._v("(全局解释器锁)，来源是"),s("code",[t._v("python")]),t._v("设计之初的考虑，为了数据安全。每个CPU在同一个时间只能执行一个线程（在单核CPU下的多线程其实都只是并发，不是并行）\n只有"),s("code",[t._v("cpython")]),t._v("解释器有GIL，所以说"),s("code",[t._v("python")]),t._v("慢不严谨，其他解释器如"),s("code",[t._v("pypy")]),t._v("、"),s("code",[t._v("jpython")]),t._v("没有"),s("code",[t._v("GIL")])]),t._v(" "),s("p",[t._v("某个线程想要执行，必须先拿到"),s("code",[t._v("GIL")]),t._v("，我们可以把"),s("code",[t._v("GIL")]),t._v("看做是“通行证”，并且在一个"),s("code",[t._v("python")]),t._v("进程中，"),s("code",[t._v("GIL")]),t._v("只有一个。拿不到通行证的线程，就不允许进入"),s("code",[t._v("CPU")]),t._v("执行，"),s("code",[t._v("GIL")]),t._v("会释放的情况：")]),t._v(" "),s("ol",[s("li",[t._v("时间片释放-指定时间释放")]),t._v(" "),s("li",[t._v("遇到IO释放（所以"),s("code",[t._v("python")]),t._v("并不是串行）")])]),t._v(" "),s("p",[t._v("Python和java对比：\n"),s("img",{attrs:{src:"/imgs/python_java_compare_thread.png",alt:"Python和java对比"}})]),t._v(" "),s("ol",[s("li",[t._v("同一时刻一个进程内只有一个能拿到GIL，所以多线程很多时候是单线程的")]),t._v(" "),s("li",[t._v("限制了线程并发的数量（同时拿到GIL锁和互斥锁的线程才可以执行）")])]),t._v(" "),s("p",[t._v("串行、并行、并发：\n"),s("img",{attrs:{src:"/imgs/process_do_jobs_models.png",alt:"串行、并行、并发"}})]),t._v(" "),s("p",[t._v("IO操作时间比CPU操作时间高几十万倍，所以GIL锁的存在不会使python比java执行效率低，原因：")]),t._v(" "),s("ol",[s("li",[t._v("IO操作不会占用CPU时间")]),t._v(" "),s("li",[t._v("CPU速度远远高于IO速度")])]),t._v(" "),s("p",[t._v("不同任务的不同策略：")]),t._v(" "),s("ol",[s("li",[t._v("对应Web系统，高IO的程序，GIL可以忽略不计")]),t._v(" "),s("li",[t._v("计算任务可以使用多进程编程")])]),t._v(" "),s("p",[t._v("既然GIL保证安全，但是GIL又有时间片的概念，是否矛盾？")]),t._v(" "),s("ul",[s("li",[t._v("GIL会保证字节码的安全")])]),t._v(" "),s("h3",{attrs:{id:"_34-pandas保存文件的中文乱码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-pandas保存文件的中文乱码"}},[t._v("#")]),t._v(" 34. "),s("code",[t._v("pandas")]),t._v("保存文件的中文乱码")]),t._v(" "),s("p",[t._v("用"),s("code",[t._v("utf_8_sig")]),t._v("代替"),s("code",[t._v("utf-8")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("df"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to_csv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tempscore.csv'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf_8_sig'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_35-xpath-取值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-xpath-取值"}},[t._v("#")]),t._v(" 35. xpath 取值")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("/li/a/@href")]),t._v(" 这样取的是"),s("code",[t._v("href")]),t._v("的内容")]),t._v(" "),s("li",[s("code",[t._v("/li/a/text()")]),t._v(" 这样取得是"),s("code",[t._v("text")]),t._v("内容")])]),t._v(" "),s("h3",{attrs:{id:"_36-python的垃圾回收机制原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-python的垃圾回收机制原理"}},[t._v("#")]),t._v(" 36. Python的垃圾回收机制原理")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("引用计数")]),t._v("为主（缺点："),s("strong",[t._v("循环引用")]),t._v("无法解决）")]),t._v(" "),s("li",[t._v("引入"),s("strong",[t._v("标记清除")]),t._v("和"),s("strong",[t._v("分代回收")]),t._v("解决引用计数的问题")]),t._v(" "),s("li",[t._v("引用计数为主+标记清除和分代回收为辅")])]),t._v(" "),s("p",[s("code",[t._v("del")]),t._v(" 不是销毁对象，而是减少对象的引用计数（一切皆对象），只有引用计数为"),s("code",[t._v("0")]),t._v("时才会进行回收")]),t._v(" "),s("h4",{attrs:{id:"_36-1-标记清除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-1-标记清除"}},[t._v("#")]),t._v(" 36.1. 标记清除")]),t._v(" "),s("p",[t._v("从垃圾回收的根对象开始，不断的往下查找可达对象，可达对象就是有向图，线表示引用关系，把不可达的点置灰，认为没有对象引用它们，就可以把它们清除\n（根对象一般就是栈里面的对象）")]),t._v(" "),s("h4",{attrs:{id:"_36-2-分代回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-2-分代回收"}},[t._v("#")]),t._v(" 36.2. 分代回收")]),t._v(" "),s("p",[t._v("把对象的生命周期分三代"),s("code",[t._v("0 1 2")]),t._v("，每一代都使用"),s("strong",[t._v("双向链表")]),t._v("标记这些对象，把创建的新的对象称为第"),s("code",[t._v("0")]),t._v("代，每隔一段时间，分代进行标记清除，第"),s("code",[t._v("0")]),t._v("代没有被清除会转移到更老的一代，比如第"),s("code",[t._v("1")]),t._v("代")])])}),[],!1,null,null,null);s.default=e.exports}}]);