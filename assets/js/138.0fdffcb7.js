(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{737:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ul",[a("li",[a("a",{attrs:{href:"#1-javascript-%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"}},[t._v("1. javascript 有哪几种数据类型")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#2-javascript-%E6%8C%89%E7%85%A7%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F%E5%8C%BA%E5%88%86%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B"}},[t._v("2. javascript 按照存储方式区分变量类型？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#3-%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E7%9A%84%E7%89%B9%E7%82%B9"}},[t._v("3. 引用类型的特点？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#4-typeof-%E8%83%BD%E5%8C%BA%E5%88%86%E5%93%AA%E4%BA%9B%E7%B1%BB%E5%9E%8B"}},[t._v("4. typeof 能区分哪些类型？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#5-null-%E5%92%8C-undefined-%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("5. "),a("code",[t._v("null")]),t._v(" 和 "),a("code",[t._v("undefined")]),t._v(" 的区别")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#6-%E5%A6%82%E4%BD%95%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2"}},[t._v("6. 如何强制类型转换？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#7-%E4%BB%80%E4%B9%88%E6%83%85%E5%86%B5%E4%B8%8B%E4%BC%9A%E5%8F%91%E7%94%9F%E9%9A%90%E5%BC%8F%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2"}},[t._v("7. 什么情况下会发生隐式类型转换？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#8-%E9%9A%90%E5%BC%8F%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E7%9A%84%E5%B8%B8%E8%A7%81%E5%BA%94%E7%94%A8"}},[t._v("8. 隐式类型转换的常见应用？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#9-%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%E4%BC%9A%E8%A2%AB%E5%BD%93%E5%81%9Atrue%E6%88%96%E8%80%85false"}},[t._v("9. 如何判断一个变量会被当做true或者false？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#10-%E8%AF%B4%E4%B8%80%E4%B8%8B%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%AF%94%E8%BE%83%E8%A7%84%E5%88%99%E5%B9%B6%E5%9B%9E%E7%AD%94%E4%B8%8B%E5%88%97%E7%BB%93%E6%9E%9C"}},[t._v("10. 说一下引用类型的比较规则，并回答下列结果")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#11-%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83%E4%BD%95%E6%97%B6%E8%BF%94%E5%9B%9Etrue"}},[t._v("11. 引用类型比较，何时返回true？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#12-%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8%E5%92%8C"}},[t._v("12. 何时使用"),a("code",[t._v("===")]),t._v("和"),a("code",[t._v("==")]),t._v("？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#13-js%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0%E6%9C%89%E5%93%AA%E4%BA%9B"}},[t._v("13. JS内置函数有哪些？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#14-%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3-json"}},[t._v("14. 如何理解 JSON？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#15-%E5%87%BD%E6%95%B0%E5%92%8C%E6%95%B0%E7%BB%84%E5%8F%AF%E4%BB%A5%E6%9C%89%E5%B1%9E%E6%80%A7%E5%90%97"}},[t._v("15. 函数和数组可以有属性吗？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#16-%E6%98%AFfalse%E7%9A%84%E6%83%85%E5%86%B5%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D"}},[t._v("16. "),a("code",[t._v("!!()")]),t._v("是false的情况有哪几种？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#17--%E8%BF%90%E7%AE%97%E7%AC%A6%E5%88%A4%E6%96%AD%E7%9B%B8%E7%AD%89%E7%9A%84%E6%B5%81%E7%A8%8B%E6%98%AF%E6%80%8E%E6%A0%B7%E7%9A%84"}},[t._v("17. === 运算符判断相等的流程是怎样的")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#18--%E8%BF%90%E7%AE%97%E7%AC%A6%E5%88%A4%E6%96%AD%E7%9B%B8%E7%AD%89%E7%9A%84%E6%B5%81%E7%A8%8B%E6%98%AF%E6%80%8E%E6%A0%B7%E7%9A%84"}},[t._v("18. == 运算符判断相等的流程是怎样的")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#181-%E5%88%A4%E6%96%ADconsolelog---true--false%E7%9A%84%E8%BE%93%E5%87%BA%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("18.1. 判断"),a("code",[t._v("console.log( [] ? true : false)")]),t._v("的输出是什么？")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#19-number1-%E4%B8%8E-new-number1%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB"}},[t._v("19. "),a("code",[t._v("Number(1)")]),t._v(" 与 "),a("code",[t._v("new Number(1)")]),t._v("有什么区别")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#20-consolelognew-booleanfalse%E8%BE%93%E5%87%BA%E4%BB%80%E4%B9%88"}},[t._v("20. "),a("code",[t._v("console.log(!!(new Boolean(false))")]),t._v("输出什么")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#21-%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E6%98%AF%E4%B8%8D%E6%98%AF-array"}},[t._v("21. 如何判断一个数据是不是 Array")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#22-objectprototypetostring"}},[t._v("22. "),a("code",[t._v("Object.prototype.toString")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#221-objtostring-%E5%92%8C-objectprototypetostringcallobj"}},[t._v("22.1. "),a("code",[t._v("obj.toString()")]),t._v(" 和 "),a("code",[t._v("Object.prototype.toString.call(obj)")])])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#23-%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%B1%BB%E5%9E%8B%E5%88%A4%E6%96%AD%E5%87%BD%E6%95%B0"}},[t._v("23. 实现一个类型判断函数")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#24-%E5%80%BC%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%B7%BB%E5%8A%A0%E5%B1%9E%E6%80%A7%E8%8E%B7%E5%8F%96%E5%B1%9E%E6%80%A7%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84%E6%AF%94%E5%A6%82%E8%8E%B7%E5%8F%96-strlength-"}},[t._v("24. 值类型的添加属性、获取属性是如何实现的，比如获取 str.length ？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#25-%E6%95%B0%E6%8D%AE%E5%B1%9E%E6%80%A7%E5%92%8C%E8%AE%BF%E9%97%AE%E5%99%A8%E5%B1%9E%E6%80%A7"}},[t._v("25. 数据属性和访问器属性")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#26-eval%E5%92%8Cjsonparse-%E8%A7%A3%E6%9E%90json%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("26. "),a("code",[t._v("eval")]),t._v("和"),a("code",[t._v("json.parse")]),t._v(" 解析"),a("code",[t._v("json")]),t._v("的区别")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#27-%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E5%9D%91"}},[t._v("27. 序列化的坑")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#28-%E5%9C%A8-js-%E4%B8%AD%E4%B8%8D%E5%90%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E5%AD%97%E7%9A%84%E8%A1%A8%E7%A4%BA%E6%96%B9%E5%BC%8F"}},[t._v("28. 在 js 中不同进制数字的表示方式")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#29-js-%E4%B8%AD%E6%95%B4%E6%95%B0%E7%9A%84%E5%AE%89%E5%85%A8%E8%8C%83%E5%9B%B4%E6%98%AF%E5%A4%9A%E5%B0%91"}},[t._v("29. js 中整数的安全范围是多少？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#30-isnan-%E5%92%8C-numberisnan-%E5%87%BD%E6%95%B0%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("30. "),a("code",[t._v("isNaN")]),t._v(" 和 "),a("code",[t._v("Number.isNaN")]),t._v(" 函数的区别？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#31-%E7%B1%BB%E5%9E%8B%E9%97%B4%E8%BD%AC%E6%8D%A2%E8%A7%84%E5%88%99"}},[t._v("31. 类型间转换规则")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#311-%E5%85%B6%E4%BB%96%E5%80%BC%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E8%BD%AC%E6%8D%A2%E8%A7%84%E5%88%99"}},[t._v("31.1. 其他值到字符串的转换规则？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#312-%E5%85%B6%E4%BB%96%E5%80%BC%E5%88%B0%E6%95%B0%E5%AD%97%E5%80%BC%E7%9A%84%E8%BD%AC%E6%8D%A2%E8%A7%84%E5%88%99"}},[t._v("31.2. 其他值到数字值的转换规则？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#313-%E5%85%B6%E4%BB%96%E5%80%BC%E5%88%B0%E5%B8%83%E5%B0%94%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%80%BC%E7%9A%84%E8%BD%AC%E6%8D%A2%E8%A7%84%E5%88%99"}},[t._v("31.3. 其他值到布尔类型的值的转换规则？")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#32-%E6%B3%A8%E6%84%8F-arraylength"}},[t._v("32. 注意 Array.length")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#33-%E5%8A%A0%E6%B3%95%E8%BF%90%E7%AE%97%E7%AC%A6"}},[t._v("33. 加法运算符")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#331-undefined%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0"}},[t._v("33.1. "),a("code",[t._v("undefined")]),t._v("和字符串相加")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#332-%E8%BE%93%E5%87%BA%E4%BB%A5%E4%B8%8B%E4%BB%A3%E7%A0%81%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C"}},[t._v("33.2. 输出以下代码运行结果")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#34-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%AF%94%E8%BE%83"}},[t._v("34. 字符串的比较")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#35-mathroundparseintmathfloor%E5%92%8Cmathceil%E5%B0%8F%E6%95%B0%E5%8F%96%E6%95%B4"}},[t._v("35. "),a("code",[t._v("Math.round")]),t._v("、"),a("code",[t._v("parseInt")]),t._v("、"),a("code",[t._v("Math.floor")]),t._v("和"),a("code",[t._v("Math.ceil")]),t._v("小数取整")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#351-parseint%E5%92%8Cnumber%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("35.1. "),a("code",[t._v("parseInt()")]),t._v("和"),a("code",[t._v("Number()")]),t._v("的区别")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#36-js%E5%B1%9E%E6%80%A7%E5%AF%B9%E8%B1%A1%E7%9A%84hasownproperty%E6%96%B9%E6%B3%95"}},[t._v("36. JS属性对象的"),a("code",[t._v("hasOwnProperty")]),t._v("方法")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#361-%E5%88%A4%E6%96%AD%E8%87%AA%E8%BA%AB%E5%B1%9E%E6%80%A7%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8"}},[t._v("36.1. 判断自身属性是否存在")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#362-%E9%81%8D%E5%8E%86%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%80%E6%9C%89%E8%87%AA%E8%BA%AB%E5%B1%9E%E6%80%A7"}},[t._v("36.2. 遍历一个对象的所有自身属性")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#363-%E6%B3%A8%E6%84%8F-hasownproperty-%E4%BD%9C%E4%B8%BA%E5%B1%9E%E6%80%A7%E5%90%8D"}},[t._v("36.3. 注意 "),a("code",[t._v("hasOwnProperty")]),t._v(" 作为属性名")])])])])]),t._v(" "),a("h2",{attrs:{id:"类型和变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型和变量"}},[t._v("#")]),t._v(" 类型和变量 ")]),t._v(" "),a("h3",{attrs:{id:"_1-javascript-有哪几种数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-javascript-有哪几种数据类型"}},[t._v("#")]),t._v(" 1. javascript 有哪几种数据类型")]),t._v(" "),a("p",[t._v("七种基本数据类型(值类型)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("undefined")])]),t._v(" "),a("li",[a("code",[t._v("null")])]),t._v(" "),a("li",[a("code",[t._v("string")])]),t._v(" "),a("li",[a("code",[t._v("boolean")])]),t._v(" "),a("li",[a("code",[t._v("number")])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("symbol(ES6)")])])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("BigInt")])])])]),t._v(" "),a("p",[t._v("三种引用类型")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Object")])]),t._v(" "),a("li",[a("code",[t._v("Function")])]),t._v(" "),a("li",[a("code",[t._v("Array")])])]),t._v(" "),a("h3",{attrs:{id:"_2-javascript-按照存储方式区分变量类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-javascript-按照存储方式区分变量类型"}},[t._v("#")]),t._v(" 2. javascript 按照存储方式区分变量类型？")]),t._v(" "),a("ul",[a("li",[t._v("值类型")]),t._v(" "),a("li",[t._v("引用类型")])]),t._v(" "),a("h3",{attrs:{id:"_3-引用类型的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-引用类型的特点"}},[t._v("#")]),t._v(" 3. 引用类型的特点？")]),t._v(" "),a("p",[t._v("引用类型无限制扩展属性，内存很大，在内存中公用空间")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("a\na"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("a\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {age: 21}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-typeof-能区分哪些类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-typeof-能区分哪些类型"}},[t._v("#")]),t._v(" 4. typeof 能区分哪些类型？")]),t._v(" "),a("p",[t._v("typeof只能区分"),a("strong",[t._v("值类型")]),t._v("和"),a("strong",[t._v("函数")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" object\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("object\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("object\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" string\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" number\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" boolean\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("number\n")])])]),a("h3",{attrs:{id:"_5-null-和-undefined-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-null-和-undefined-的区别"}},[t._v("#")]),t._v(" 5. "),a("code",[t._v("null")]),t._v(" 和 "),a("code",[t._v("undefined")]),t._v(" 的区别")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("null")]),t._v('表示**"没有对象"，即该处不应该有值**。典型用法是：')]),t._v(" "),a("ul",[a("li",[t._v("作为函数的参数，表示"),a("strong",[t._v("该函数的参数不是对象")]),t._v("。")]),t._v(" "),a("li",[t._v("作为"),a("strong",[t._v("对象原型链的终点")]),t._v("。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("undefined")]),t._v('表示"缺少值"，就是'),a("strong",[t._v("此处应该有一个值，但是还没有定义")]),t._v("。典型用法是：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("变量被声明了，但没有赋值")]),t._v("时，就等于"),a("code",[t._v("undefined")]),t._v("。")]),t._v(" "),a("li",[t._v("调用函数时，"),a("strong",[t._v("应该提供的参数没有提供")]),t._v("，该参数等于"),a("code",[t._v("undefined")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("对象没有赋值的属性")]),t._v("，该属性的值为"),a("code",[t._v("undefined")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("函数没有返回值")]),t._v("时，默认返回"),a("code",[t._v("undefined")]),t._v("。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("typeof(null)")]),t._v(" 为 "),a("code",[t._v("'object'")]),t._v("，"),a("code",[t._v("typeof(undefined)")]),t._v(" 为 "),a("code",[t._v("'undefined'")])])]),t._v(" "),a("li",[a("p",[t._v("转为数值时，"),a("code",[t._v("null")]),t._v(" 转为 0，"),a("code",[t._v("undefined")]),t._v(" 转为 "),a("code",[t._v("NaN")]),t._v("。")])])]),t._v(" "),a("h3",{attrs:{id:"_6-如何强制类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-如何强制类型转换"}},[t._v("#")]),t._v(" 6. 如何强制类型转换？")]),t._v(" "),a("p",[t._v("通过String()，Number()，Boolean()函数强制转换")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// numbrer")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//number")]),t._v("\n")])])]),a("h3",{attrs:{id:"_7-什么情况下会发生隐式类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-什么情况下会发生隐式类型转换"}},[t._v("#")]),t._v(" 7. 什么情况下会发生隐式类型转换？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 字符串拼接")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ‘"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("’ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '10010'")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. ==运算符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" ‘"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("’ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" ’’ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. if语句")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("‘’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 逻辑运算")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0   ")]),t._v("\n‘’ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" ’abc’  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//abc")]),t._v("\n")])])]),a("h3",{attrs:{id:"_8-隐式类型转换的常见应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-隐式类型转换的常见应用"}},[t._v("#")]),t._v(" 8. 隐式类型转换的常见应用？")]),t._v(" "),a("p",[t._v("巧用隐式类型转换，当要把一个字符串转为数字时，把它减去0，把一个数字转为字符串，加上空字符串。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("‘"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("’ – "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//32 ")]),t._v("\n‘"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("’"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ‘032’")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ’’   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ‘032’")]),t._v("\n")])])]),a("h3",{attrs:{id:"_9-如何判断一个变量会被当做true或者false"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-如何判断一个变量会被当做true或者false"}},[t._v("#")]),t._v(" 9. 如何判断一个变量会被当做true或者false？")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("!![变量]")]),t._v("的方式。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h3",{attrs:{id:"_10-说一下引用类型的比较规则-并回答下列结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-说一下引用类型的比较规则-并回答下列结果"}},[t._v("#")]),t._v(" 10. 说一下引用类型的比较规则，并回答下列结果")]),t._v(" "),a("p",[t._v("对象的比较是比较的引用，就是内存是否一样。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fase")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false, NaN不是引用类型，不过它恒不等于自己。")]),t._v("\n")])])]),a("h3",{attrs:{id:"_11-引用类型比较-何时返回true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-引用类型比较-何时返回true"}},[t._v("#")]),t._v(" 11. 引用类型比较，何时返回true？")]),t._v(" "),a("p",[t._v("除非定义x，然后让x和x比较才为true。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" console "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h3",{attrs:{id:"_12-何时使用-和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-何时使用-和"}},[t._v("#")]),t._v(" 12. 何时使用"),a("code",[t._v("===")]),t._v("和"),a("code",[t._v("==")]),t._v("？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里相当于obj.a === null || obj.a ===defined,简写形式")]),t._v("\n")])])]),a("p",[t._v("除了这种情况，其他全用 "),a("code",[t._v("===")])]),t._v(" "),a("h3",{attrs:{id:"_13-js内置函数有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-js内置函数有哪些"}},[t._v("#")]),t._v(" 13. JS内置函数有哪些？")]),t._v(" "),a("p",[t._v("Object, Array, Function, Boolean, Number, String, Date, RegExp, Error，内置函数就这么少。\nMath 是对象，不是函数")]),t._v(" "),a("h3",{attrs:{id:"_14-如何理解-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-如何理解-json"}},[t._v("#")]),t._v(" 14. 如何理解 JSON？")]),t._v(" "),a("ul",[a("li",[t._v("不过是JS中一个对象而已，Math也是JS内置对象")]),t._v(" "),a("li",[t._v("一种数据格式")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("‘"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("‘a’"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ’b’"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_15-函数和数组可以有属性吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-函数和数组可以有属性吗"}},[t._v("#")]),t._v(" 15. 函数和数组可以有属性吗？")]),t._v(" "),a("p",[t._v("不仅对象可以有属性，函数和数组也有属性")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n")])])]),a("h3",{attrs:{id:"_16-是false的情况有哪几种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-是false的情况有哪几种"}},[t._v("#")]),t._v(" 16. "),a("code",[t._v("!!()")]),t._v("是false的情况有哪几种？")]),t._v(" "),a("p",[t._v("0,NaN, ’’, undefined,null,false   6个")]),t._v(" "),a("h3",{attrs:{id:"_17-运算符判断相等的流程是怎样的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-运算符判断相等的流程是怎样的"}},[t._v("#")]),t._v(" 17. === 运算符判断相等的流程是怎样的")]),t._v(" "),a("ol",[a("li",[t._v("如果两个值不是相同类型，它们不相等")]),t._v(" "),a("li",[t._v("如果两个值都是 "),a("code",[t._v("null")]),t._v(" 或者都是 "),a("code",[t._v("undefined")]),t._v("，它们相等")]),t._v(" "),a("li",[t._v("如果两个值都是布尔类型 true 或者都是 false，它们相等")]),t._v(" "),a("li",[t._v("如果其中有一个是NaN，它们不相等")]),t._v(" "),a("li",[t._v("如果都是数值型并且数值相等，他们相等， -0 等于 0")]),t._v(" "),a("li",[t._v("如果他们都是字符串并且在相同位置包含相同的 16 位值，他它们相等；如果在长度或者内容上不等，它们不相等；两个字符串显示结果相同但是编码不同"),a("code",[t._v("==")]),t._v("和"),a("code",[t._v("===")]),t._v("都认为他们不相等")]),t._v(" "),a("li",[t._v("如果他们指向相同对象、数组、函数，它们相等；如果指向不同对象，他们不相等")])]),t._v(" "),a("h3",{attrs:{id:"_18-运算符判断相等的流程是怎样的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-运算符判断相等的流程是怎样的"}},[t._v("#")]),t._v(" 18. == 运算符判断相等的流程是怎样的")]),t._v(" "),a("ol",[a("li",[t._v("如果两个值类型相同，按照"),a("code",[t._v("===")]),t._v("比较方法进行比较")]),t._v(" "),a("li",[t._v("如果类型不同，使用如下规则进行比较")]),t._v(" "),a("li",[t._v("如果其中一个值是 null，另一个是 undefined，它们相等")]),t._v(" "),a("li",[a("strong",[t._v("如果一个值是数字，另一个是字符串，将字符串转换为数字进行比较")])]),t._v(" "),a("li",[a("strong",[t._v("如果有布尔类型，将true 转换为 1，false 转换为 0，然后用==规则继续比较")])]),t._v(" "),a("li",[a("strong",[t._v("如果一个值是对象，另一个是数字或字符串，将对象转换为原始值然后用==规则继续比较")])]),t._v(" "),a("li",[t._v("其他所有情况都认为不相等")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true，字符串转数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true，布尔转数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true，2个都转成数字")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("h4",{attrs:{id:"_18-1-判断console-log-true-false-的输出是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-1-判断console-log-true-false-的输出是什么"}},[t._v("#")]),t._v(" 18.1. 判断"),a("code",[t._v("console.log( [] ? true : false)")]),t._v("的输出是什么？")]),t._v(" "),a("p",[t._v("由上面可知，三元运算符会发生"),a("strong",[t._v("隐式类型转换")]),t._v("，而 "),a("code",[t._v("!![]")]),t._v(" 为"),a("code",[t._v("true")]),t._v("，所以结果为"),a("code",[t._v("true")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h3",{attrs:{id:"_19-number-1-与-new-number-1-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-number-1-与-new-number-1-有什么区别"}},[t._v("#")]),t._v(" 19. "),a("code",[t._v("Number(1)")]),t._v(" 与 "),a("code",[t._v("new Number(1)")]),t._v("有什么区别")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Number {[[PrimitiveValue]]: 1}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[a("code",[t._v("var a = 1")]),t._v(" 是一个常量")]),t._v("，而 "),a("code",[t._v("Number(1)")]),t._v("是一个函数")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("new Number(1)")]),t._v("返回的是一个对象")])]),t._v(" "),a("li",[a("code",[t._v("a==b")]),t._v(" 为 "),a("code",[t._v("true")]),t._v(" 是因为所以在求值过程中，总是会强制转为原始数据类型而非对象。")])]),t._v(" "),a("h3",{attrs:{id:"_20-console-log-new-boolean-false-输出什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-console-log-new-boolean-false-输出什么"}},[t._v("#")]),t._v(" 20. "),a("code",[t._v("console.log(!!(new Boolean(false))")]),t._v("输出什么")]),t._v(" "),a("p",[t._v("true 布尔的包装对象 "),a("code",[t._v("Boolean")]),t._v(" 的对象实例，对象只有在 "),a("code",[t._v("null")]),t._v(" 与 "),a("code",[t._v("undefined")]),t._v(" 时，才会认定为布尔的 "),a("code",[t._v("false")]),t._v(" 值，"),a("strong",[t._v("布尔包装对象本身是个对象，对象->布尔 都是 "),a("code",[t._v("true")]),t._v("，所以 "),a("code",[t._v("new Boolean(false)")]),t._v("其实是布尔的 "),a("code",[t._v("true")])]),t._v("，看下面这段代码:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true!!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("只有使用了 "),a("code",[t._v("valueOf")]),t._v(" 后才是真正的转换布尔值，与上面包装对象与原始资料转换说明的相同:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("h3",{attrs:{id:"_21-如何判断一个数据是不是-array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-如何判断一个数据是不是-array"}},[t._v("#")]),t._v(" 21. 如何判断一个数据是不是 Array")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Array.isArray(obj)")])]),t._v(" "),a("ul",[a("li",[t._v("ECMAScript 5 种的函数，当使用 ie8 的时候就会出现问题。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("obj instanceof Array")])]),t._v(" "),a("ul",[a("li",[t._v("当用来检测在不同的 window 或 iframe 里构造的数组时会失败。这是因为每一个 iframe 都有它自己的执行环境，彼此之间并不共享原型链，所以此时的判断一个对象是否为数组就会失败。此时我们有一个更好的方式去判断一个对象是否为数组。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Object.prototype.toString.call(obj) == '[object Array]'")])]),t._v(" "),a("ul",[a("li",[t._v("这个方法比较靠谱")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("obj.constructor === Array")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("constructor")]),t._v(" 属性返回对创建此对象的函数的引用")])])])]),t._v(" "),a("h3",{attrs:{id:"_22-object-prototype-tostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-object-prototype-tostring"}},[t._v("#")]),t._v(" 22. "),a("code",[t._v("Object.prototype.toString")])]),t._v(" "),a("p",[a("strong",[t._v("如果是原始类型，他会将原始类型包装为引用类型")]),t._v("，然后调用对应方法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" toString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[object Function]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[object Object]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[object Array]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[object Date]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[object String]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[object Math]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[object Undefined]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[object Null]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[object Number]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[object String]")]),t._v("\n")])])]),a("h4",{attrs:{id:"_22-1-obj-tostring-和-object-prototype-tostring-call-obj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-1-obj-tostring-和-object-prototype-tostring-call-obj"}},[t._v("#")]),t._v(" 22.1. "),a("code",[t._v("obj.toString()")]),t._v(" 和 "),a("code",[t._v("Object.prototype.toString.call(obj)")])]),t._v(" "),a("p",[t._v("同样是检测对象 "),a("code",[t._v("obj")]),t._v(" 调用 "),a("code",[t._v("toString")]),t._v(" 方法，"),a("code",[t._v("obj.toString()")]),t._v("的结果和 "),a("code",[t._v("Object.prototype.toString.call(obj)")]),t._v("的结果不一样，这是为什么？")]),t._v(" "),a("p",[t._v("这是因为 "),a("code",[t._v("toString")]),t._v(" 为 "),a("code",[t._v("Object")]),t._v(" 的原型方法，而 "),a("strong",[a("code",[t._v("Array")]),t._v(" ，"),a("code",[t._v("function")]),t._v(" 等类型作为 "),a("code",[t._v("Object")]),t._v(" 的实例，都重写了 "),a("code",[t._v("toString")]),t._v(" 方法")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("不同的对象类型调用 "),a("code",[t._v("toString")]),t._v(" 方法时，根据原型链的知识，调用的是对应的重写之后的 "),a("code",[t._v("toString")]),t._v(" 方法（"),a("code",[t._v("function")]),t._v(" 类型返回内容为函数体的字符串，Array 类型返回元素组成的字符串.....），而不会去调用 "),a("code",[t._v("Object")]),t._v(" 上原型 "),a("code",[t._v("toString")]),t._v(" 方法（返回对象的具体类型），所以采用 "),a("code",[t._v("obj.toString()")]),t._v("不能得到其对象类型，只能将 "),a("code",[t._v("obj")]),t._v(" 转换为字符串类型；")]),t._v(" "),a("li",[t._v("因此，"),a("strong",[t._v("在想要得到对象的具体类型时，应该调用 "),a("code",[t._v("Object")]),t._v(" 上原型 "),a("code",[t._v("toString")]),t._v(" 方法")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"_23-实现一个类型判断函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23-实现一个类型判断函数"}},[t._v("#")]),t._v(" 23. 实现一个类型判断函数")]),t._v(" "),a("ol",[a("li",[t._v("判断 "),a("code",[t._v("null")])]),t._v(" "),a("li",[t._v("判断基础类型")]),t._v(" "),a("li",[t._v("使用"),a("code",[t._v("Object.prototype.toString.call(target)")]),t._v("来判断"),a("strong",[t._v("引用类型")])])]),t._v(" "),a("p",[t._v("注意： 一定是使用"),a("code",[t._v("call")]),t._v("来调用，不然是判断的 Object.prototype 的类型 之所以要先判断是否为基本类型是因为：虽然"),a("code",[t._v("Object.prototype.toString.call()")]),t._v("能判断出某值是：number/string/boolean，但是其实在包装的时候是把他们先转成了对象然后再判断类型的。 但是 JS 中包装类型和原始类型还是有差别的，因为对一个包装类型来说，typeof 的值是 object")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 类型判断\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//先处理最特殊的Null")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"null"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断是不是基础类型")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" typeOfT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("typeOfT "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" typeOfT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//肯定是引用类型了")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" template "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Object]"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Array]"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"array"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一些包装类型")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object String]"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object - string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Number]"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object - number"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Boolean]"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object - boolean"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" typeStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("typeStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_24-值类型的添加属性、获取属性是如何实现的-比如获取-str-length"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-值类型的添加属性、获取属性是如何实现的-比如获取-str-length"}},[t._v("#")]),t._v(" 24. 值类型的添加属性、获取属性是如何实现的，比如获取 str.length ？")]),t._v(" "),a("p",[t._v("把原始类型当作对象方式使用的本质，例如访问length属性，或者增加属性。js都会智能转换成包装类型对象，相当于"),a("code",[t._v("new")]),t._v("了一个原始类型对象。当访问完成后，会把这个包装的对象销毁")]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ‘abc’\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("‘abc’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\n\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义属性")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),a("h3",{attrs:{id:"_25-数据属性和访问器属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25-数据属性和访问器属性"}},[t._v("#")]),t._v(" 25. 数据属性和访问器属性")]),t._v(" "),a("p",[t._v("ECMAScript中有两种属性：数据属性和访问器属性，数据属性一般用于存储数据数值，访问器属性对应的是"),a("code",[t._v("set/get")]),t._v("操作，不能直接存储数据值，每种属性下面又都含有四个特性.下面介绍一下:")]),t._v(" "),a("p",[t._v("数据属性")]),t._v(" "),a("ol",[a("li",[a("strong",[a("code",[t._v("[[Configurable]]")]),t._v(": 表示能否通过delete将属性删除")]),t._v("，"),a("strong",[t._v("能否把属性修改为访问器属性")]),t._v(", 默认为"),a("code",[t._v("false")]),t._v("。当把属性"),a("code",[t._v("Configurable")]),t._v("设置为"),a("code",[t._v("false")]),t._v("后，该属性不能通过delete删除，并且也无法再将该属性的"),a("code",[t._v("Configurable")]),t._v("设置回"),a("code",[t._v("true")])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("[[Enumerable]]")]),t._v(": 表示属性可否被枚举")]),t._v("(即是否可以通过"),a("code",[t._v("for in")]),t._v("循环返回)，默认"),a("code",[t._v("false")])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("[[Writable]]")]),t._v(": 表示属性是否可写")]),t._v("(即是否可以修改属性的值)，默认"),a("code",[t._v("false")])]),t._v(" "),a("li",[a("code",[t._v("[[Value]]")]),t._v(": 该属性的数据值, 默认是"),a("code",[t._v("undefined")])])]),t._v(" "),a("p",[t._v("访问器属性")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("[[Configurable]]")]),t._v(": 表示能否通过"),a("code",[t._v("delete")]),t._v("将属性删除，能否把属性修改为数据属性, 默认为"),a("code",[t._v("false")]),t._v("。当把属性"),a("code",[t._v("Configurable")]),t._v("设置为"),a("code",[t._v("false")]),t._v("后，该属性不能通过"),a("code",[t._v("delete")]),t._v("删除，并且也无法再将该属性的"),a("code",[t._v("Configurable")]),t._v("设置回"),a("code",[t._v("true")])]),t._v(" "),a("li",[a("code",[t._v("[[Enumerable]]")]),t._v(": 表示属性可否被枚举(即是否可以通过"),a("code",[t._v("for in")]),t._v("循环返回)，默认"),a("code",[t._v("false")])]),t._v(" "),a("li",[a("code",[t._v("[[Get]]")]),t._v(": 读取属性时调用的函数, 默认为"),a("code",[t._v("undefined")])]),t._v(" "),a("li",[a("code",[t._v("[[Set]]")]),t._v(": 写入属性时调用的函数, 默认是"),a("code",[t._v("undefined")])])]),t._v(" "),a("h3",{attrs:{id:"_26-eval和json-parse-解析json的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26-eval和json-parse-解析json的区别"}},[t._v("#")]),t._v(" 26. "),a("code",[t._v("eval")]),t._v("和"),a("code",[t._v("json.parse")]),t._v(" 解析"),a("code",[t._v("json")]),t._v("的区别")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("eval")]),t._v("不会判断你的字符串"),a("strong",[t._v("是否合法")]),t._v("，且"),a("code",[t._v("json")]),t._v("字符串中的"),a("strong",[t._v("一些方法会被执行")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("parse")]),t._v("要判断字符串是否合法，要是不合法报错。")]),t._v(" "),a("li",[t._v("使用"),a("code",[t._v("parse")]),t._v("相对于"),a("code",[t._v("eval")]),t._v("比较安全，要是调用第三方数据，数据中存在恶意代码，使用"),a("code",[t._v("eval")]),t._v("就会被执行。")])]),t._v(" "),a("h3",{attrs:{id:"_27-序列化的坑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-序列化的坑"}},[t._v("#")]),t._v(" 27. 序列化的坑")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("undeifined")]),t._v("属性不会出现在序列化后的字符串中")]),t._v(" "),a("li",[a("code",[t._v("NaN")]),t._v("和"),a("code",[t._v("infinity")]),t._v("都会转出"),a("code",[t._v("null")]),t._v("，"),a("code",[t._v("New Date()")]),t._v("会转成时间")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nullVal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "{"x":1,"y":true,"z":[1,2,3],"nullVal":null}"')]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "{"b":null,"c":null,"d":"2020-07-26T09:11:16.677Z"}"')]),t._v("\n")])])]),a("h3",{attrs:{id:"_28-在-js-中不同进制数字的表示方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28-在-js-中不同进制数字的表示方式"}},[t._v("#")]),t._v(" 28. 在 js 中不同进制数字的表示方式")]),t._v(" "),a("ul",[a("li",[t._v("以 0X、0x 开头的表示为十六进制(hex)。")]),t._v(" "),a("li",[t._v("以 0、0O、0o 开头的表示为八进制(octal)。")]),t._v(" "),a("li",[t._v("以 0B、0b 开头的表示为二进制格式。")])]),t._v(" "),a("h3",{attrs:{id:"_29-js-中整数的安全范围是多少"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_29-js-中整数的安全范围是多少"}},[t._v("#")]),t._v(" 29. js 中整数的安全范围是多少？")]),t._v(" "),a("p",[t._v("安全整数指的是，在这个范围内的整数转化为二进制存储的时候不会出现精度丢失，能够被“安全”呈现的最大整数是 "),a("strong",[t._v("2^53 - 1")]),t._v("，\n即9007199254740991，在 ES6 中被定义为 "),a("code",[t._v("Number.MAX_SAFE_INTEGER")]),t._v("。最小整数是-9007199254740991，在 ES6 中\n被定义为 "),a("code",[t._v("Number.MIN_SAFE_INTEGER")]),t._v("。")]),t._v(" "),a("p",[t._v("如果某次计算的结果得到了一个超过 JavaScript 数值范围的值，那么这个值会被自动转换为特殊的 Infinity 值。如果某次\n计算返回了正或负的 "),a("code",[t._v("Infinity")]),t._v(" 值，那么"),a("strong",[t._v("该值将无法参与下一次的计算")]),t._v("。判断一个数是不是有穷的，可以使用 "),a("code",[t._v("isFinite")]),t._v(" 函数\n来判断。")]),t._v(" "),a("h3",{attrs:{id:"_30-isnan-和-number-isnan-函数的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_30-isnan-和-number-isnan-函数的区别"}},[t._v("#")]),t._v(" 30. "),a("code",[t._v("isNaN")]),t._v(" 和 "),a("code",[t._v("Number.isNaN")]),t._v(" 函数的区别？")]),t._v(" "),a("p",[t._v("函数 "),a("code",[t._v("isNaN")]),t._v(" 接收参数后，会"),a("strong",[t._v("尝试将这个参数转换为数值")]),t._v("，"),a("strong",[t._v("任何不能被转换为数值的的值都会返回 true")]),t._v("，比如"),a("code",[t._v("undefined")]),t._v("、对象("),a("code",[t._v("{}")]),t._v(")、函数、不能被转成数字的字符串(如‘string’)，因此非数字值传入也会返回 "),a("code",[t._v("true")]),t._v(" ，会影响 "),a("code",[t._v("NaN")]),t._v(" 的判断。")]),t._v(" "),a("p",[t._v("函数 "),a("code",[t._v("Number.isNaN")]),t._v(" 会"),a("strong",[t._v("首先判断传入参数是否为数字")]),t._v("，如果是数字再继续判断是否为 "),a("code",[t._v("NaN")]),t._v(" ，这种方法对于 "),a("code",[t._v("NaN")]),t._v(" 的判断更为"),a("strong",[t._v("准确")]),t._v("。")]),t._v(" "),a("p",[t._v("参考资料："),a("a",{attrs:{href:"https://uwayfly.com/detail/201",target:"_blank",rel:"noopener noreferrer"}},[t._v("isNaN"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_31-类型间转换规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_31-类型间转换规则"}},[t._v("#")]),t._v(" 31. 类型间转换规则")]),t._v(" "),a("h4",{attrs:{id:"_31-1-其他值到字符串的转换规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_31-1-其他值到字符串的转换规则"}},[t._v("#")]),t._v(" 31.1. 其他值到字符串的转换规则？")]),t._v(" "),a("p",[t._v("规范的 9.8 节中定义了抽象操作 "),a("code",[t._v("ToString")]),t._v(" ，它负责处理非字符串到字符串的强制类型转换。")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("Null")]),t._v(" 和 "),a("code",[t._v("Undefined")]),t._v(" 类型 "),a("code",[t._v("，null")]),t._v(" 转换为 "),a("code",[t._v('"null"')]),t._v("，"),a("code",[t._v("undefined")]),t._v(" 转换为 "),a("code",[t._v('"undefined"')])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Boolean")]),t._v(" 类型，"),a("code",[t._v("true")]),t._v(" 转换为 "),a("code",[t._v('"true"')]),t._v("，"),a("code",[t._v("false")]),t._v(" 转换为 "),a("code",[t._v('"false"')]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Number")]),t._v(" 类型的值直接转换，不过那些极小和极大的数字会使用指数形式。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Symbol")]),t._v(" 类型的值直接转换，但是只允许显式强制类型转换，使用隐式强制类型转换会产生错误。")])]),t._v(" "),a("li",[a("p",[t._v("对普通对象来说，除非自行定义 "),a("code",[t._v("toString()")]),t._v(" 方法，否则会调用 "),a("code",[t._v("toString()")]),t._v("（"),a("code",[t._v("Object.prototype.toString()")]),t._v("）来返回内部属性 "),a("code",[t._v("[[Class]]")]),t._v(" 的值，如"),a("code",[t._v('"[object Object]"')]),t._v("。如果对象有自己的 "),a("code",[t._v("toString()")]),t._v(" 方法，字符串化时就会调用该方法并使用其返回值。")])])]),t._v(" "),a("h4",{attrs:{id:"_31-2-其他值到数字值的转换规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_31-2-其他值到数字值的转换规则"}},[t._v("#")]),t._v(" 31.2. 其他值到数字值的转换规则？")]),t._v(" "),a("p",[t._v("有时我们需要将非数字值当作数字来使用，比如数学运算。为此 ES5 规范在 9.3 节定义了抽象操作 "),a("code",[t._v("ToNumber")]),t._v("。")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("Undefined")]),t._v(" 类型的值转换为 NaN。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Null")]),t._v(" 类型的值转换为 0。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Boolean")]),t._v(" 类型的值，"),a("code",[t._v("true")]),t._v(" 转换为 1，"),a("code",[t._v("false")]),t._v(" 转换为 0。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("String")]),t._v(" 类型的值转换如同使用 "),a("code",[t._v("Number()")]),t._v(" 函数进行转换，如果包含非数字值则转换为 "),a("code",[t._v("NaN")]),t._v("，空字符串为 0。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Symbol")]),t._v(" 类型的值不能转换为数字，会报错。")])]),t._v(" "),a("li",[a("p",[t._v("对象（包括数组）会首先被转换为相应的基本类型值，如果返回的是非数字的基本类型值，则再遵循以上规则将其强制转换为数字。")])])]),t._v(" "),a("p",[t._v("为了将值转换为相应的基本类型值，抽象操作 "),a("code",[t._v("ToPrimitive")]),t._v(" 会首先（通过内部操作 "),a("code",[t._v("DefaultValue")]),t._v("）检查该值是否有"),a("code",[t._v("valueOf()")]),t._v(" 方法。\n如果有并且返回基本类型值，就使用该值进行强制类型转换。如果没有就使用 "),a("code",[t._v("toString()")]),t._v(" 的返回值（如果存在）来进行强制类型转换。")]),t._v(" "),a("p",[t._v("如果 "),a("code",[t._v("valueOf()")]),t._v(" 和 "),a("code",[t._v("toString()")]),t._v(" 均不返回基本类型值，会产生 "),a("code",[t._v("TypeError")]),t._v(" 错误。")]),t._v(" "),a("h4",{attrs:{id:"_31-3-其他值到布尔类型的值的转换规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_31-3-其他值到布尔类型的值的转换规则"}},[t._v("#")]),t._v(" 31.3. 其他值到布尔类型的值的转换规则？")]),t._v(" "),a("p",[t._v("ES5 规范 9.2 节中定义了抽象操作 "),a("code",[t._v("ToBoolean")]),t._v("，列举了布尔强制类型转换所有可能出现的结果。")]),t._v(" "),a("p",[t._v("以下这些是假值：\n• "),a("code",[t._v("undefined")]),t._v("\n• "),a("code",[t._v("null")]),t._v("\n• "),a("code",[t._v("false")]),t._v("\n• "),a("code",[t._v("+0、-0 和 NaN")]),t._v("\n• "),a("code",[t._v('""')])]),t._v(" "),a("p",[t._v("假值的布尔强制类型转换结果为 "),a("code",[t._v("false")]),t._v("。从逻辑上说，假值列表以外的都应该是真值。")]),t._v(" "),a("h3",{attrs:{id:"_32-注意-array-length"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_32-注意-array-length"}},[t._v("#")]),t._v(" 32. 注意 Array.length")]),t._v(" "),a("p",[t._v("直接给"),a("code",[t._v("Array")]),t._v("的"),a("code",[t._v("length")]),t._v("赋一个新的值会导致"),a("code",[t._v("Array")]),t._v("大小的变化：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr变为[1, 2, 3, undefined, undefined, undefined]")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr变为[1, 2]")]),t._v("\n")])])]),a("p",[t._v("请注意，如果通过索引赋值时，索引超过了范围，同样会引起"),a("code",[t._v("Array")]),t._v("大小的变化：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr变为[1, 2, 3, undefined, undefined, 'x']")]),t._v("\n")])])]),a("p",[t._v("将"),a("code",[t._v("Array")]),t._v("的长度设为0，将会清空"),a("code",[t._v("Array")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// []")]),t._v("\n")])])]),a("h3",{attrs:{id:"_33-加法运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_33-加法运算符"}},[t._v("#")]),t._v(" 33. 加法运算符")]),t._v(" "),a("p",[t._v("JavaScript 允许非数值的相加。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),a("p",[t._v("上面代码中，"),a("strong",[t._v("第一行是两个布尔值相加，第二行是数值与布尔值相加。这两种情况，布尔值都会自动转成数值，然后再相加")]),t._v("。")]),t._v(" "),a("p",[t._v("比较特殊的是，"),a("strong",[t._v("如果是两个字符串相加，这时加法运算符会变成连接运算符")]),t._v("，返回一个新的字符串，将两个原字符串连接在一起。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bc'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "abc"')]),t._v("\n")])])]),a("p",[a("strong",[t._v("如果一个运算子是字符串，另一个运算子是非字符串，这时非字符串会转成字符串，再连接在一起。")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1a"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "falsea"')]),t._v("\n")])])]),a("p",[t._v("加法运算符是在运行时决定，到底是执行相加，还是执行连接。也就是说，运算子的不同，导致了不同的语法行为，这种现象称为“重载”（overload）。由于加法运算符存在重载，可能执行两种运算，使用的时候必须很小心。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "345"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "75"')]),t._v("\n")])])]),a("p",[t._v("上面代码中，由于从左到右的运算次序，字符串的位置不同会导致不同的结果。")]),t._v(" "),a("h4",{attrs:{id:"_33-1-undefined和字符串相加"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_33-1-undefined和字符串相加"}},[t._v("#")]),t._v(" 33.1. "),a("code",[t._v("undefined")]),t._v("和字符串相加")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// aundefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bundefined")]),t._v("\n")])])]),a("h4",{attrs:{id:"_33-2-输出以下代码运行结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_33-2-输出以下代码运行结果"}},[t._v("#")]),t._v(" 33.2. 输出以下代码运行结果")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '11'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '11'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '1221'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '41,2,3'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'aNaN'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 101")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v('1 + "1"')]),t._v(" "),a("ul",[a("li",[t._v("加性操作符：如果只有一个操作数是字符串，则将另一个操作数转换为字符串，然后再将两个字符串拼接起来")]),t._v(" "),a("li",[t._v("所以值为："),a("code",[t._v("“11”")])])])]),t._v(" "),a("li",[a("code",[t._v('2 * "2"')]),t._v(" "),a("ul",[a("li",[t._v("乘性操作符：如果有一个操作数不是数值，则在后台调用 "),a("code",[t._v("Number()")]),t._v("将其转换为数值")])])]),t._v(" "),a("li",[a("code",[t._v("[1, 2] + [2, 1]")]),t._v(" "),a("ul",[a("li",[t._v("Javascript 中所有对象基本都是先调用 valueOf 方法，如果不是数值，再调用 "),a("code",[t._v("toString")]),t._v(" 方法。")]),t._v(" "),a("li",[t._v("所以两个数组对象的 toString 方法相加，值为："),a("code",[t._v('"1,22,1"')])])])]),t._v(" "),a("li",[a("code",[t._v('"a" + + "b"')]),t._v(" "),a("ul",[a("li",[t._v("后边的“+”将作为一元操作符，如果操作数是字符串，将调用 "),a("code",[t._v("Number")]),t._v(" 方法将该操作数转为数值，如果操作数无法转为数值，则为 NaN。")]),t._v(" "),a("li",[t._v("所以值为："),a("code",[t._v('"aNaN"')])])])])]),t._v(" "),a("h3",{attrs:{id:"_34-字符串的比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_34-字符串的比较"}},[t._v("#")]),t._v(" 34. 字符串的比较")]),t._v(" "),a("p",[t._v("字符串按照字典顺序进行比较。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h3",{attrs:{id:"_35-math-round、parseint、math-floor和math-ceil小数取整"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_35-math-round、parseint、math-floor和math-ceil小数取整"}},[t._v("#")]),t._v(" 35. "),a("code",[t._v("Math.round")]),t._v("、"),a("code",[t._v("parseInt")]),t._v("、"),a("code",[t._v("Math.floor")]),t._v("和"),a("code",[t._v("Math.ceil")]),t._v("小数取整")]),t._v(" "),a("p",[a("code",[t._v("Math.round")]),t._v("、"),a("code",[t._v("parseInt")]),t._v("、"),a("code",[t._v("Math.floor")]),t._v("和"),a("code",[t._v("Math.ceil")]),t._v(" 都可以返回一个整数，具体的区别请看下面的总结。")]),t._v(" "),a("p",[a("strong",[t._v("一、Math.round")])]),t._v(" "),a("p",[t._v("作用："),a("strong",[t._v("四舍五入，返回参数+0.5后，向下取整")]),t._v("。")]),t._v(" "),a("p",[t._v("如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Math.round(5.57)　　//返回6\n\nMath.round(2.4) 　　//返回2\n\nMath.round(-1.5)　　//返回-1\n\nMath.round(-5.8)　　//返回-6\n")])])]),a("p",[a("strong",[t._v("二、parseInt")])]),t._v(" "),a("p",[t._v("作用：解析一个字符串，并返回一个整数，"),a("strong",[t._v("这里可以简单理解成返回舍去参数的小数部分后的整数")]),t._v("。")]),t._v(" "),a("p",[t._v("如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("parseInt(5.57)　　//返回5\n\nparseInt(2.4)　　//返回2\n\nparseInt(-1.5)　　//返回-1\n\nparseInt(-5.8)　　//返回-5\n")])])]),a("p",[a("strong",[t._v("三、Math.floor")])]),t._v(" "),a("p",[t._v("作用：返回小于等于参数的最大整数。")]),t._v(" "),a("p",[t._v("如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Math.floor(5.57)　　//返回5\n\nMath.floor(2.4)　　//返回2\n\nMath.floor(-1.5)　　//返回-2\n\nMath.floor(-5.8)　　//返回-6\n")])])]),a("p",[a("strong",[t._v("四、Math.ceil")])]),t._v(" "),a("p",[t._v("作用：返回大于等于参数的最小整数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Math.ceil(5.57)　　//返回6\n\nMath.ceil(2.4)　　//返回3\n\nMath.ceil(-1.5)　　//返回-1\n\nMath.ceil(-5.8)　　//返回-5\n")])])]),a("h4",{attrs:{id:"_35-1-parseint-和number-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_35-1-parseint-和number-的区别"}},[t._v("#")]),t._v(" 35.1. "),a("code",[t._v("parseInt()")]),t._v("和"),a("code",[t._v("Number()")]),t._v("的区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("parseInt()")]),t._v(" 和 "),a("code",[t._v("parseFloat()")]),t._v(' 方法只转换第一个无效字符之前的字符串，因此 "1.2.3" 将分别被转换为 "1" 和 "1.2"。')]),t._v(" "),a("li",[t._v('用 Number() 进行强制类型转换，"1.2.3" 将返回 NaN，因为整个字符串值不能转换成数字。')]),t._v(" "),a("li",[t._v("如果字符串值能被完整地转换，"),a("code",[t._v("Number()")]),t._v(" 将判断是调用 "),a("code",[t._v("parseInt()")]),t._v(" 方法还是 "),a("code",[t._v("parseFloat()")]),t._v(" 方法。")])]),t._v(" "),a("h3",{attrs:{id:"_36-js属性对象的hasownproperty方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_36-js属性对象的hasownproperty方法"}},[t._v("#")]),t._v(" 36. JS属性对象的"),a("code",[t._v("hasOwnProperty")]),t._v("方法")]),t._v(" "),a("p",[t._v("Object的"),a("code",[t._v("hasOwnProperty()")]),t._v("方法返回一个布尔值，判断对象是否包含特定的自身（非继承）属性。")]),t._v(" "),a("h4",{attrs:{id:"_36-1-判断自身属性是否存在"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_36-1-判断自身属性是否存在"}},[t._v("#")]),t._v(" 36.1. 判断自身属性是否存在")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'exists'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("newprop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prop'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prop'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("h4",{attrs:{id:"_36-2-遍历一个对象的所有自身属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_36-2-遍历一个对象的所有自身属性"}},[t._v("#")]),t._v(" 36.2. 遍历一个对象的所有自身属性")]),t._v(" "),a("p",[t._v("在看开源项目的过程中，经常会看到类似如下的源码。"),a("code",[t._v("for...in")]),t._v("循环对象的所有枚举属性，然后再使用"),a("code",[t._v("hasOwnProperty()")]),t._v("方法来忽略继承属性。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" buz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fog"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stack'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" buz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is fog ("')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('") for sure. Value: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" buz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// toString or something else")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_36-3-注意-hasownproperty-作为属性名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_36-3-注意-hasownproperty-作为属性名"}},[t._v("#")]),t._v(" 36.3. 注意 "),a("code",[t._v("hasOwnProperty")]),t._v(" 作为属性名")]),t._v(" "),a("p",[t._v("JavaScript 并没有保护 "),a("code",[t._v("hasOwnProperty")]),t._v(" 属性名，因此，可能存在于一个包含此属性名的对象，有必要使用一个可扩展的"),a("code",[t._v("hasOwnProperty")]),t._v("方法来获取正确的结果：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    bar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Here be dragons'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nfoo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 始终返回 false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果担心这种情况，可以直接使用原型链上真正的 hasOwnProperty 方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用另一个对象的`hasOwnProperty` 并且call")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也可以使用 Object 原型上的 hasOwnProperty 属性")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);