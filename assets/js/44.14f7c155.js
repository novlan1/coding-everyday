(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{315:function(_,v,t){"use strict";t.r(v);var s=t(14),r=Object(s.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"_1-网络层的路由"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-网络层的路由"}},[_._v("#")]),_._v(" 1. 网络层的路由")]),_._v(" "),v("h3",{attrs:{id:"_1-1-网络层的路由概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-网络层的路由概述"}},[_._v("#")]),_._v(" 1.1. 网络层的路由概述")]),_._v(" "),v("p",[_._v("下一跳地址是怎么来的，是唯一的吗，是最佳的吗，路由器怎么协同工作的？")]),_._v(" "),v("p",[_._v("现实中的"),v("strong",[_._v("网络拓扑")]),_._v("可以"),v("strong",[_._v("抽象成图")]),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 每个"),v("strong",[_._v("顶点")]),_._v("表示"),v("strong",[_._v("一个网络、路由器或计算机")])]),_._v(" "),v("li",[_._v("[ ] 每一条"),v("strong",[_._v("边")]),_._v("表示"),v("strong",[_._v("一条网络路径")])])]),_._v(" "),v("p",[v("strong",[_._v("路由算法")]),_._v("实际上是"),v("strong",[_._v("图论的算法")])]),_._v(" "),v("ul",[v("li",[_._v("[ ] 网络环境复杂，抖动，因此路由算法比图论算法复杂")])]),_._v(" "),v("h4",{attrs:{id:"_1-1-1-自治系统as-autonomous-system"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-自治系统as-autonomous-system"}},[_._v("#")]),_._v(" 1.1.1. 自治系统AS（"),v("code",[_._v("Autonomous System")]),_._v("）")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 一个自治系统是处于一个管理机构下的网络设备群（管理机构可以看做国家、地区、家庭、公司，有不同级别）")]),_._v(" "),v("li",[_._v("[ ] "),v("strong",[_._v("AS内部网络自行管理，AS对外提供一个或者多个出入口")])])]),_._v(" "),v("p",[_._v("分类：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 自治系统内部路由的协议称为：内部网关协议（"),v("code",[_._v("RIP")]),_._v("、"),v("code",[_._v("OSPF")]),_._v("）")]),_._v(" "),v("li",[_._v("[ ] 自治系统外部路由的协议称为：外部网关协议（"),v("code",[_._v("BGP")]),_._v("）")])]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/network_route_as.png",alt:"自治系统AS"}})]),_._v(" "),v("h3",{attrs:{id:"_1-2-内部网关路由协议之rip协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-内部网关路由协议之rip协议"}},[_._v("#")]),_._v(" 1.2. 内部网关路由协议之RIP协议")]),_._v(" "),v("p",[_._v("距离矢量（DV）算法：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 每一个节点使用两个向量"),v("code",[_._v("Di")]),_._v("和"),v("code",[_._v("Si")])]),_._v(" "),v("li",[_._v("[ ] "),v("code",[_._v("Di")]),_._v("描述的是当前节点到别的节点的距离")]),_._v(" "),v("li",[_._v("[ ] "),v("code",[_._v("Si")]),_._v("描述的是当前节点到别的节点的下一个节点")])]),_._v(" "),v("p",[_._v("具体：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 每一个节点与"),v("strong",[_._v("相邻的节点")]),_._v("交换向量"),v("code",[_._v("Di")]),_._v("和"),v("code",[_._v("Si")]),_._v("的信息")]),_._v(" "),v("li",[_._v("[ ] 每一个节点根据交换的信息"),v("strong",[_._v("更新自己的节点信息")])])]),_._v(" "),v("p",[_._v("目的是求"),v("code",[_._v("dij")]),_._v("的最小值")]),_._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("dij = min（dix + dxj）\n")])])]),v("p",[_._v("以节点A为例，A到B的距离与B到A的距离不一样的原因是路径不同：\n"),v("img",{attrs:{src:"/imgs/network_route_DV.png",alt:"距离矢量"}})]),_._v(" "),v("p",[_._v("由于A和B直接通信，可以知道它们之间距离为6，进而通过B的交换信息，可以知道经过B，A到其他点的距离：\n"),v("img",{attrs:{src:"/imgs/network_route_DV2.png",alt:"距离矢量"}})]),_._v(" "),v("p",[_._v("得到这些距离矢量后，就会把它们和自己的距离矢量比较，如果比自己距离矢量小的话，就会把它填充到自己的距离矢量里面去，并把S向量的对应位置写成B")]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/network_route_DV3.png",alt:"距离矢量"}})]),_._v(" "),v("p",[_._v("同理，A和C交换信息如下：\n"),v("img",{attrs:{src:"/imgs/network_route_DV4.png",alt:"距离矢量"}})]),_._v(" "),v("h4",{attrs:{id:"_1-2-1-rip协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-rip协议"}},[_._v("#")]),_._v(" 1.2.1. RIP协议：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] RIP（"),v("code",[_._v("Routing Information Protocol")]),_._v("）协议")]),_._v(" "),v("li",[_._v("[ ] RIP协议是使用DV算法的一种路由协议")])]),_._v(" "),v("p",[_._v("基本：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] RIP协议把网络的跳数（hop）作为DV算法的距离")]),_._v(" "),v("li",[_._v("[ ] RIP协议每隔30s交换一次路由信息")]),_._v(" "),v("li",[_._v("[ ] RIP协议认为跳数>15的路由则为不可达路由")])]),_._v(" "),v("p",[_._v("过程：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 路由器初始化路由信息（两个向量Di和Si）")]),_._v(" "),v("li",[_._v("[ ] 对相邻路由器X发过来的信息，对信息的内容进行修改（下一跳地址设置为X，所有距离加1）\n"),v("ul",[v("li",[_._v("检索本地路由，将信息中新的路由插入到路由表里面")]),_._v(" "),v("li",[_._v("检索本地路由，对于下一跳为X的，更新为修改后的信息")]),_._v(" "),v("li",[_._v("检索本地路由，对比相同目的的距离，如果新信息的距离更小，则更新本地路由表")])])]),_._v(" "),v("li",[_._v("[ ] 如果三分钟没有收到相邻的路由信息，则把路由设置为不可达（16跳）")])]),_._v(" "),v("p",[_._v("①插入的新的下一跳，左图表示达到D的距离是2，下一跳地址是A：")]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/network_route_RIP.png",alt:"RIP"}})]),_._v(" "),v("p",[_._v("在我前面的人告诉我，他距离下一个目标有多远，我把他当做下一跳地址记下来，并把他到下一个目标距离加1，作为我到下一目标的距离")]),_._v(" "),v("p",[_._v("②把旧的信息替换成新的：\n"),v("img",{attrs:{src:"/imgs/network_route_RIP2.png",alt:"RIP"}})]),_._v(" "),v("p",[_._v("③DV算法\n"),v("img",{attrs:{src:"/imgs/network_route_RIP3.png",alt:"RIP"}})]),_._v(" "),v("p",[_._v("故障信息传递慢")]),_._v(" "),v("ul",[v("li",[_._v("[ ]  随便相信“隔壁老王”")]),_._v(" "),v("li",[_._v("[ ]  “自己不思考”、“视野不够”")])]),_._v(" "),v("h3",{attrs:{id:"_1-3-dijkstra-迪杰斯塔拉-算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-dijkstra-迪杰斯塔拉-算法"}},[_._v("#")]),_._v(" 1.3. Dijkstra（迪杰斯塔拉）算法")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 解决有权图从"),v("strong",[_._v("一个节点到其他节点的最短路径问题")])]),_._v(" "),v("li",[_._v("[ ] 以起始点为中心，向外层层层扩展")])]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/dijkstra.png",alt:"Dijkstra"}})]),_._v(" "),v("p",[_._v("知道离自己相邻的人的距离，不断地找到"),v("strong",[_._v("距离自己最小的人D")]),_._v("，将其纳入S，计算通过D到图中所有点的距离("),v("strong",[_._v("A到D加上D到X")]),_._v(")，"),v("strong",[_._v("如果小于之前记录的距离就更新")])]),_._v(" "),v("h3",{attrs:{id:"_1-4-内部网关路由协议之ospf协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-内部网关路由协议之ospf协议"}},[_._v("#")]),_._v(" 1.4. 内部网关路由协议之OSPF协议")]),_._v(" "),v("p",[_._v("链路状态（LS）协议：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 向"),v("strong",[_._v("所有")]),_._v("路由器发送信息（"),v("strong",[_._v("一传十十传百")]),_._v("，"),v("strong",[_._v("只和相邻的路由器交换信息")]),_._v("）")]),_._v(" "),v("li",[_._v("[ ] 消息描述该路由器与相邻路由器的"),v("strong",[_._v("链路状态")]),_._v("（距离、时延、带宽，网络管理员可以介入，“代价”，RIP协议交换的只是"),v("strong",[_._v("跳数")]),_._v("）")]),_._v(" "),v("li",[_._v("[ ] 只有链路状态发送变化时，才发送更新信息（"),v("strong",[_._v("RIP每隔30s")]),_._v("交换路由信息）")])]),_._v(" "),v("p",[_._v("OSRF（"),v("code",[_._v("Open Shortest Path First")]),_._v("）开放最短路径优先")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 核心是"),v("code",[_._v("Dijkstra")]),_._v("算法")]),_._v(" "),v("li",[_._v("[ ] 获得网络中的所有信息=>"),v("strong",[_._v("网络的完整拓扑")]),_._v("（也称为"),v("strong",[_._v("链路状态数据库")]),_._v("，它"),v("strong",[_._v("全网一致")]),_._v("）")]),_._v(" "),v("li",[_._v("[ ] OSRF更加客观，更加先进，因为它使用链路状态来描述连接质量，不仅仅是跳数")]),_._v(" "),v("li",[_._v("[ ] 减少了数据的交换，更快收敛（状态变化才发送信息）")])]),_._v(" "),v("p",[_._v("五种信息类型：")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 问候消息（hello）")]),_._v(" "),v("li",[_._v("[ ] 链路状态数据库描述信息")]),_._v(" "),v("li",[_._v("[ ] 链路状态请求信息")]),_._v(" "),v("li",[_._v("[ ] 链路状态更新信息（频繁，最常见）")]),_._v(" "),v("li",[_._v("[ ] 链路状态确认信息")])]),_._v(" "),v("p",[_._v("先向邻居发送hello，再与其交流链路状态数据库，广播和更新未知路由")]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/OSRF.png",alt:"OSRF"}})]),_._v(" "),v("p",[v("code",[_._v("RIP")]),_._v("和"),v("code",[_._v("OSRF")]),_._v("对比：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("RIP协议")]),_._v(" "),v("th",[_._v("OSRF协议")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("从邻居看网络")]),_._v(" "),v("td",[_._v("整个网络的拓扑")])]),_._v(" "),v("tr",[v("td",[_._v("在路由器之间累加距离")]),_._v(" "),v("td",[_._v("Dijkstra算法计算最短路径")])]),_._v(" "),v("tr",[v("td",[_._v("频繁、周期更新，收敛很慢")]),_._v(" "),v("td",[_._v("状态变化更新，收敛很快")])]),_._v(" "),v("tr",[v("td",[_._v("路由间拷贝路由信息")]),_._v(" "),v("td",[_._v("路由间传递链路状态，自行计算路径")])])])]),_._v(" "),v("h3",{attrs:{id:"_1-5-外部网关路由协议之bgp协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-外部网关路由协议之bgp协议"}},[_._v("#")]),_._v(" 1.5. 外部网关路由协议之BGP协议")]),_._v(" "),v("ul",[v("li",[_._v("[ ] BGP（"),v("code",[_._v("Boder Gateway Protocal")]),_._v(":边际网关协议）")]),_._v(" "),v("li",[_._v("[ ] 运行在自治系统（AS）之前的协议")])]),_._v(" "),v("p",[_._v("使用它的原因")]),_._v(" "),v("ul",[v("li",[_._v("[ ] 互联网的规模很大（用OSRF的话链路状态数据库会很大，更新频繁）")]),_._v(" "),v("li",[_._v("[ ] AS内部使用不同的路由协议")]),_._v(" "),v("li",[_._v("[ ] AS之间需要考虑除网络特性以外的一些因素（政治、安全）\nBGP协议能找到一条到达目的比较好的路由（OSRF和RIP都是最好的路径）")])]),_._v(" "),v("p",[_._v("BGP发言人（"),v("code",[_._v("speaker")]),_._v("）")]),_._v(" "),v("ul",[v("li",[_._v("[ ] BGP并不关系内部网络拓扑")]),_._v(" "),v("li",[_._v("[ ] AS之间通过BGP发言人交流信息")]),_._v(" "),v("li",[_._v("[ ] BGP可以人为配置策略")])])])}),[],!1,null,null,null);v.default=r.exports}}]);