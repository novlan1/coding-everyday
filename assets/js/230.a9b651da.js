(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{534:function(s,a,t){"use strict";t.r(a);var n=t(25),r=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("ul",[a("li",[a("a",{attrs:{href:"#1-awk-%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B"}},[s._v("1. awk 入门教程")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#11-%E4%B8%80%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95"}},[s._v("1.1. 一、基本用法")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#12-%E4%BA%8C%E5%8F%98%E9%87%8F"}},[s._v("1.2. 二、变量")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#13-%E4%B8%89%E5%87%BD%E6%95%B0"}},[s._v("1.3. 三、函数")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#14-%E5%9B%9B%E6%9D%A1%E4%BB%B6"}},[s._v("1.4. 四、条件")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#15-%E4%BA%94if-%E8%AF%AD%E5%8F%A5"}},[s._v("1.5. 五、if 语句")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E5%85%AD%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5"}},[s._v("六、参考链接")])])])])]),s._v(" "),a("h2",{attrs:{id:"_1-awk-入门教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-awk-入门教程"}},[s._v("#")]),s._v(" 1. awk 入门教程")]),s._v(" "),a("p",[s._v("awk是处理文本文件的一个应用程序，几乎所有 Linux 系统都自带这个程序。")]),s._v(" "),a("p",[s._v("它依次处理文件的每一行，并读取里面的每一个字段。对于日志、CSV 那样的每行格式相同的文本文件，awk可能是最方便的工具。")]),s._v(" "),a("p",[s._v("awk其实不仅仅是工具软件，还是一种编程语言。不过，本文只介绍它的命令行用法，对于大多数场合，应该足够用了。")]),s._v(" "),a("h3",{attrs:{id:"_1-1-一、基本用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-一、基本用法"}},[s._v("#")]),s._v(" 1.1. 一、基本用法")]),s._v(" "),a("p",[s._v("awk的基本用法就是下面的形式。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 格式")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" 动作 文件名\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 示例")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $0}'")]),s._v(" demo.txt\n")])])]),a("p",[s._v("上面示例中，demo.txt是awk所要处理的文本文件。"),a("strong",[s._v("前面单引号内部有一个大括号，里面就是每一行的处理动作"),a("code",[s._v("print $0")])]),s._v("。其中，"),a("strong",[s._v("print是打印命令，"),a("code",[s._v("$0")]),s._v("代表当前行，因此上面命令的执行结果，就是把每一行原样打印出来。")])]),s._v(" "),a("p",[s._v("下面，我们先用标准输入（stdin）演示上面这个例子。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'this is a test'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $0}'")]),s._v("\nthis is a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])])]),a("p",[s._v("上面代码中，print $0就是把标准输入this is a test，重新打印了一遍。")]),s._v(" "),a("p",[a("strong",[s._v("awk会根据空格和制表符，将每一行分成若干字段，依次用"),a("code",[s._v("$1")]),s._v("、"),a("code",[s._v("$2")]),s._v("、"),a("code",[s._v("$3")]),s._v("代表第一个字段、第二个字段、第三个字段等等。")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'this is a test'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $3}'")]),s._v("\na\n")])])]),a("p",[s._v("上面代码中，"),a("strong",[s._v("$3代表this is a test的第三个字段a")]),s._v("。")]),s._v(" "),a("p",[s._v("下面，为了便于举例，我们把"),a("code",[s._v("/etc/passwd")]),s._v("文件保存成demo.txt。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("root:x:0:0:root:/root:/usr/bin/zsh\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\n")])])]),a("p",[a("strong",[s._v("这个文件的字段分隔符是冒号（:），所以要用-F参数指定分隔符为冒号")]),s._v("。然后，才能提取到它的第一个字段。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print $1 }'")]),s._v(" demo.txt\nroot\ndaemon\nbin\nsys\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n")])])]),a("h3",{attrs:{id:"_1-2-二、变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-二、变量"}},[s._v("#")]),s._v(" 1.2. 二、变量")]),s._v(" "),a("p",[s._v("除了$ + 数字表示某个字段，awk还提供其他一些变量。")]),s._v(" "),a("p",[a("strong",[s._v("变量NF表示当前行有多少个字段，因此$NF就代表最后一个字段")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'this is a test'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $NF}'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])])]),a("p",[a("strong",[s._v("$(NF-1)代表倒数第二个字段。")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1, $(NF-1)}'")]),s._v(" demo.txt\nroot /root\ndaemon /usr/sbin\nbin /bin\nsys /dev\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v(" /bin\n")])])]),a("p",[s._v("上面代码中，"),a("strong",[s._v("print命令里面的逗号，表示输出的时候，两个部分之间使用空格分隔。")])]),s._v(" "),a("p",[a("strong",[s._v("变量NR表示当前处理的是第几行")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print NR \") \" $1}'")]),s._v(" demo.txt\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" root\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" daemon\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" bin\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" sys\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n")])])]),a("p",[s._v("上面代码中，print命令里面，如果原样输出字符，要放在双引号里面。")]),s._v(" "),a("p",[s._v("awk的其他内置变量如下。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("FILENAME：当前文件名")])]),s._v(" "),a("li",[a("strong",[s._v("FS：字段分隔符，默认是空格和制表符。")])]),s._v(" "),a("li",[s._v("RS：行分隔符，用于分割每一行，默认是换行符。")]),s._v(" "),a("li",[s._v("OFS：输出字段的分隔符，用于打印时分隔字段，默认为空格。")]),s._v(" "),a("li",[s._v("ORS：输出记录的分隔符，用于打印时分隔记录，默认为换行符。")]),s._v(" "),a("li",[s._v("OFMT：数字输出的格式，默认为％.6g。")])]),s._v(" "),a("h3",{attrs:{id:"_1-3-三、函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-三、函数"}},[s._v("#")]),s._v(" 1.3. 三、函数")]),s._v(" "),a("p",[s._v("awk还提供了一些内置函数，方便对原始数据的处理。")]),s._v(" "),a("p",[s._v("函数"),a("code",[s._v("toupper()")]),s._v("用于将字符转为大写。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print toupper($1) }'")]),s._v(" demo.txt\nROOT\nDAEMON\nBIN\nSYS\nSYNC\n")])])]),a("p",[s._v("上面代码中，第一个字段输出时都变成了大写。")]),s._v(" "),a("p",[s._v("其他常用函数如下。")]),s._v(" "),a("ul",[a("li",[s._v("tolower()：字符转为小写。")]),s._v(" "),a("li",[s._v("length()：返回字符串长度。")]),s._v(" "),a("li",[s._v("substr()：返回子字符串。")]),s._v(" "),a("li",[s._v("sin()：正弦。")]),s._v(" "),a("li",[s._v("cos()：余弦。")]),s._v(" "),a("li",[s._v("sqrt()：平方根。")]),s._v(" "),a("li",[s._v("rand()：随机数。")])]),s._v(" "),a("h3",{attrs:{id:"_1-4-四、条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-四、条件"}},[s._v("#")]),s._v(" 1.4. 四、条件")]),s._v(" "),a("p",[s._v("awk允许指定输出条件，只输出符合条件的行。")]),s._v(" "),a("p",[s._v("输出条件要写在动作的前面。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'条件 动作'")]),s._v(" 文件名\n")])])]),a("p",[s._v("请看下面的例子。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/usr/ {print $1}'")]),s._v(" demo.txt\nroot\ndaemon\nbin\nsys\n")])])]),a("p",[s._v("上面代码中，"),a("strong",[s._v("print命令前面是一个正则表达式，只输出包含usr的行")]),s._v("。")]),s._v(" "),a("p",[s._v("下面的例子只输出奇数行，以及输出第三行以后的行。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出奇数行")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NR % 2 == 1 {print $1}'")]),s._v(" demo.txt\nroot\nbin\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出第三行以后的行")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NR >3 {print $1}'")]),s._v(" demo.txt\nsys\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n")])])]),a("p",[a("strong",[s._v("下面的例子输出第一个字段等于指定值的行")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$1 == \"root\" {print $1}'")]),s._v(" demo.txt\nroot\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'$1 == "root" || $1 == "bin" {print $1}\'')]),s._v(" demo.txt\nroot\nbin\n")])])]),a("h3",{attrs:{id:"_1-5-五、if-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-五、if-语句"}},[s._v("#")]),s._v(" 1.5. 五、if 语句")]),s._v(" "),a("p",[s._v("awk提供了if结构，用于编写复杂的条件。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{if ($1 > \"m\") print $1}'")]),s._v(" demo.txt\nroot\nsys\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n")])])]),a("p",[s._v("上面代码输出第一个字段的第一个字符大于m的行。")]),s._v(" "),a("p",[s._v("if结构还可以指定else部分。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{if ($1 > "m") print $1; else print "---"}\'')]),s._v(" demo.txt\nroot\n---\n---\nsys\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n")])])]),a("h3",{attrs:{id:"六、参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、参考链接"}},[s._v("#")]),s._v(" 六、参考链接")]),s._v(" "),a("ol",[a("li",[s._v("http://www.ruanyifeng.com/blog/2018/11/awk.html")])])])}),[],!1,null,null,null);a.default=r.exports}}]);