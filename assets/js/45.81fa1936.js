(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{320:function(v,_,t){"use strict";t.r(_);var i=t(14),o=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h3",{attrs:{id:"从浏览器地址栏输入-url-到显示页面的步骤-以-http-为例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#从浏览器地址栏输入-url-到显示页面的步骤-以-http-为例"}},[v._v("#")]),v._v(" 从浏览器地址栏输入 url 到显示页面的步骤(以 HTTP 为例)")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("在浏览器地址栏输入 URL")])]),v._v(" "),_("li",[_("p",[v._v("浏览器查看缓存，如果请求资源在缓存中并且新鲜，跳转到转码步骤")]),v._v(" "),_("ol",[_("li",[v._v("如果资源未缓存，发起新请求")]),v._v(" "),_("li",[v._v("如果已缓存，检验是否足够新鲜，足够新鲜直接提供给客户端，否则与服务器进行验证。")]),v._v(" "),_("li",[v._v("检验新鲜通常有两个 HTTP 头进行控制"),_("code",[v._v("Expires")]),v._v("和"),_("code",[v._v("Cache-Control")]),v._v("：\n"),_("ul",[_("li",[v._v("HTTP1.0 提供 Expires，值为一个绝对时间表示缓存新鲜日期")]),v._v(" "),_("li",[v._v("HTTP1.1 增加了 Cache-Control: max-age=,值为以秒为单位的最大新鲜时间")])])])])]),v._v(" "),_("li",[_("p",[v._v("浏览器"),_("strong",[v._v("解析 URL")]),v._v("获取协议，主机，端口，path")])]),v._v(" "),_("li",[_("p",[v._v("浏览器"),_("strong",[v._v("组装一个 HTTP（GET）请求报文")])])]),v._v(" "),_("li",[_("p",[v._v("浏览器获取主机 ip 地址，过程如下：")]),v._v(" "),_("ol",[_("li",[v._v("浏览器缓存")]),v._v(" "),_("li",[v._v("本机缓存")]),v._v(" "),_("li",[v._v("hosts 文件")]),v._v(" "),_("li",[v._v("路由器缓存")]),v._v(" "),_("li",[v._v("ISP DNS 缓存")]),v._v(" "),_("li",[v._v("根域名服务器缓存(.)")]),v._v(" "),_("li",[v._v("顶级域名服务器缓存(.com)")]),v._v(" "),_("li",[v._v("DNS 递归查询（可能存在负载均衡导致每次 IP 不一样）")])])]),v._v(" "),_("li",[_("p",[v._v("打开一个 socket 与目标 IP 地址，端口建立 TCP 链接，三次握手如下：")]),v._v(" "),_("ol",[_("li",[v._v("客户端发送一个 TCP 的"),_("strong",[v._v("SYN=1，Seq=X")]),v._v("的包到服务器端口")]),v._v(" "),_("li",[v._v("服务器发回"),_("strong",[v._v("SYN=1， ACK=X+1， Seq=Y")]),v._v("的响应包")]),v._v(" "),_("li",[v._v("客户端发送"),_("strong",[v._v("ACK=Y+1， Seq=Z")])])])]),v._v(" "),_("li",[_("p",[v._v("TCP 链接建立后"),_("strong",[v._v("发送 HTTP 请求")])])]),v._v(" "),_("li",[_("p",[v._v("服务器接受请求并解析，将请求转发到服务程序，如虚拟主机使用 HTTP Host 头部判断请求的服务程序")])]),v._v(" "),_("li",[_("p",[v._v("服务器检查"),_("strong",[v._v("HTTP 请求头是否包含缓存验证信息")]),v._v("如果验证缓存新鲜，返回"),_("strong",[v._v("304")]),v._v("等对应状态码")])]),v._v(" "),_("li",[_("p",[v._v("处理程序读取完整请求并准备 HTTP 响应，可能需要查询数据库等操作")])]),v._v(" "),_("li",[_("p",[v._v("服务器将"),_("strong",[v._v("响应报文通过 TCP 连接发送回浏览器")])])]),v._v(" "),_("li",[_("p",[v._v("浏览器接收 HTTP 响应，然后根据情况选择关闭 TCP 连接或者保留重用，关闭 TCP 连接的四次握手如下：")]),v._v(" "),_("ol",[_("li",[v._v("主动方发送"),_("strong",[v._v("Fin=1， Ack=Z， Seq= X")]),v._v("报文")]),v._v(" "),_("li",[v._v("被动方发送"),_("strong",[v._v("ACK=X+1， Seq=Z")]),v._v("报文")]),v._v(" "),_("li",[v._v("被动方发送"),_("strong",[v._v("Fin=1， ACK=X， Seq=Y")]),v._v("报文")]),v._v(" "),_("li",[v._v("主动方发送"),_("strong",[v._v("ACK=Y， Seq=X")]),v._v("报文")])])]),v._v(" "),_("li",[_("p",[v._v("浏览器检查响应状态吗：是否为 1XX，3XX， 4XX， 5XX，这些情况处理与 2XX 不同")])]),v._v(" "),_("li",[_("p",[v._v("如果资源可缓存，"),_("strong",[v._v("进行缓存")])])]),v._v(" "),_("li",[_("p",[v._v("对响应进行"),_("strong",[v._v("解码")]),v._v("（例如 gzip 压缩）")])]),v._v(" "),_("li",[_("p",[v._v("根据资源类型决定如何处理（假设资源为 HTML 文档）")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("解析 HTML 文档，构件 DOM 树，下载资源，构造 CSSOM 树，执行 js 脚本")]),v._v("，这些操作没有严格的先后顺序，以下分别解释")])]),v._v(" "),_("li",[_("p",[v._v("构建 DOM 树：")]),v._v(" "),_("ol",[_("li",[_("strong",[v._v("Tokenizing")]),v._v("：根据 HTML 规范将字符流解析为标记")]),v._v(" "),_("li",[_("strong",[v._v("Lexing")]),v._v("：词法分析将标记转换为对象并定义属性和规则")]),v._v(" "),_("li",[_("strong",[v._v("DOM construction")]),v._v("：根据 HTML 标记关系将对象组成 DOM 树")])])]),v._v(" "),_("li",[_("p",[v._v("解析过程中遇到图片、样式表、js 文件，"),_("strong",[v._v("启动下载")])])]),v._v(" "),_("li",[_("p",[v._v("构建CSSOM 树：")]),v._v(" "),_("ol",[_("li",[_("strong",[v._v("Tokenizing")]),v._v("：字符流转换为标记流")]),v._v(" "),_("li",[_("strong",[v._v("Node")]),v._v("：根据标记创建节点")]),v._v(" "),_("li",[_("strong",[v._v("CSSOM")]),v._v("：节点创建 CSSOM 树")])])]),v._v(" "),_("li",[_("p",[_("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction",target:"_blank",rel:"noopener noreferrer"}},[v._v("根据 DOM 树和 CSSOM 树构建渲染树"),_("OutboundLink")],1),v._v(":")]),v._v(" "),_("ol",[_("li",[v._v("从 DOM 树的根节点遍历所有"),_("strong",[v._v("可见节点")]),v._v("，不可见节点包括：(1) "),_("code",[v._v("script")]),v._v(","),_("code",[v._v("meta")]),v._v("这样本身不可见的标签。(2) 被 css 隐藏的节点，如"),_("code",[v._v("display: none")])]),v._v(" "),_("li",[v._v("对每一个可见节点，找到恰当的 CSSOM 规则并应用")]),v._v(" "),_("li",[v._v("发布可视节点的内容和计算样式")])])]),v._v(" "),_("li",[_("p",[v._v("js 解析如下：")]),v._v(" "),_("ol",[_("li",[v._v("浏览器创建 Document 对象并解析 HTML，将解析到的元素和文本节点添加到文档中，此时"),_("strong",[v._v("document.readystate 为 loading")])]),v._v(" "),_("li",[v._v("HTML 解析器遇到"),_("strong",[v._v("没有 async 和 defer 的 script 时")]),v._v("，将他们添加到文档中，然后执行行内或外部脚本。这些脚本会同步执行，并且在脚本下载和执行时解析器会暂停。这样就可以用 document.write()把文本插入到输入流中。"),_("strong",[v._v("同步脚本经常简单定义函数和注册事件处理程序，他们可以遍历和操作 script 和他们之前的文档内容")])]),v._v(" "),_("li",[v._v("当解析器遇到设置了"),_("strong",[v._v("async")]),v._v("属性的 script 时，开始下载脚本并继续解析文档。脚本会在它"),_("strong",[v._v("下载完成后尽快执行")]),v._v("，但是"),_("strong",[v._v("解析器不会停下来等它下载")]),v._v("。异步脚本"),_("strong",[v._v("禁止使用 document.write()")]),v._v("，它们可以访问自己 script 和之前的文档元素")]),v._v(" "),_("li",[v._v("当文档完成解析，document.readState 变成 interactive")]),v._v(" "),_("li",[v._v("所有"),_("strong",[v._v("defer")]),v._v("脚本会"),_("strong",[v._v("按照在文档出现的顺序执行")]),v._v("，延迟脚本"),_("strong",[v._v("能访问完整文档树")]),v._v("，禁止使用 document.write()")]),v._v(" "),_("li",[v._v("浏览器"),_("strong",[v._v("在 Document 对象上触发 DOMContentLoaded 事件")])]),v._v(" "),_("li",[v._v("此时文档完全解析完成，浏览器可能还在等待如图片等内容加载，等这些"),_("strong",[v._v("内容完成载入并且所有异步脚本完成载入和执行")]),v._v("，document.readState 变为 complete,window 触发 load 事件")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("显示页面")]),v._v("（HTML 解析过程中会逐步显示页面）")])])]),v._v(" "),_("p",[_("img",{attrs:{src:"/imgs/visit_url.svg",alt:"输入URL过程"}})])])}),[],!1,null,null,null);_.default=o.exports}}]);