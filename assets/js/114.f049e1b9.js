(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{385:function(_,v,e){"use strict";e.r(v);var o=e(14),c=Object(o.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("ul",[v("li",[v("a",{attrs:{href:"#2-%E6%AD%A3%E5%88%99%E6%96%AD%E8%A8%80"}},[_._v("2. 正则断言")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#4-x"}},[_._v("4. "),v("code",[_._v("(x)")])])]),_._v(" "),v("li",[v("a",{attrs:{href:"#5-x"}},[_._v("5. "),v("code",[_._v("(?:x)")])])]),_._v(" "),v("li",[v("a",{attrs:{href:"#6-python%E7%9A%84re%E5%BA%93%E4%B8%ADmatch%E6%96%B9%E6%B3%95%E5%92%8Csearch%E7%9A%84%E4%B8%8D%E5%90%8C"}},[_._v("6. Python的re库中"),v("code",[_._v("match")]),_._v("方法和"),v("code",[_._v("search")]),_._v("的不同")])])]),_._v(" "),v("h3",{attrs:{id:"_2-正则断言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-正则断言"}},[_._v("#")]),_._v(" 2. 正则断言")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("(?=)")]),_._v("这个语法结构在正则里表示“设定后面是”的意思。")]),_._v(" "),v("li",[v("code",[_._v("(?=.*[a-zA-Z])")]),_._v("  这句的意思就是后面必须有一位大写或小写字母")]),_._v(" "),v("li",[v("code",[_._v("(?=.*[1-9])")]),_._v(" 这句的意思是后面必须有一位数字")])]),_._v(" "),v("p",[_._v("正则表达式从文本头部向尾部开始解析，文本尾部方向为“前”，头部方向为“后”\n前瞻：正则表达式匹配到规则的时候，向前检查是否符合断言，后顾/后瞻方向相反（javascript不支持）")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("reg(?=exp)")]),_._v("，零宽度正先行断言，reg匹配的内容后面内容满足exp规则")]),_._v(" "),v("li",[v("code",[_._v("reg(?!exp)")]),_._v("，零宽度负先行断言，reg匹配的内容后面内容不满足exp规则")]),_._v(" "),v("li",[v("code",[_._v("(?<=exp)reg")]),_._v("，零宽度正后发断言，reg匹配的内容前面内容满足exp规则")]),_._v(" "),v("li",[v("code",[_._v("(?<!exp)reg")]),_._v("，零宽度负后发断言，reg匹配的内容前面内容不满足exp规则")])]),_._v(" "),v("p",[_._v('"先行"表示待校验的位置在前，即校验的位置在exp匹配的内容之前\n"正"表示exp描述的规则，匹配校验位置后面的内容')]),_._v(" "),v("p",[_._v("例如：")]),_._v(" "),v("ul",[v("li",[v("p",[v("strong",[v("code",[_._v("x(?=exp)")]),_._v("  匹配 exp 前面的位置"),v("code",[_._v("x")])])]),_._v(" "),v("ul",[v("li",[_._v("比如，要匹配后面跟着百分号的数字，可以写成"),v("code",[_._v("/\\d+(?=%)/")])]),_._v(" "),v("li",[v("code",[_._v('"How are you doing"')]),_._v(" 正则"),v("code",[_._v('"(.+(?=ing))"')]),_._v(" 这里取ing前所有的字符，值为"),v("code",[_._v('"How are you do";')])])])]),_._v(" "),v("li",[v("p",[v("strong",[v("code",[_._v("(?<=exp)x")]),_._v("  匹配 exp 后面的位置"),v("code",[_._v("x")])])]),_._v(" "),v("ul",[v("li",[_._v("如 "),v("code",[_._v('"How are you doing"')]),_._v(" 正则"),v("code",[_._v('"((?<=How).+)"')]),_._v(" 这里取"),v("code",[_._v('"How"')]),_._v("之后所有的字符，值为"),v("code",[_._v('" are you doing";')])])])]),_._v(" "),v("li",[v("p",[v("strong",[v("code",[_._v("x(?!exp)")]),_._v("  匹配后面跟的不是 exp 的位置"),v("code",[_._v("x")])])]),_._v(" "),v("ul",[v("li",[_._v("比如，要匹配后面跟的不是百分号的数字，就要写成"),v("code",[_._v("/\\d+(?!%)/")]),_._v("。")]),_._v(" "),v("li",[v("code",[_._v('"123abc"')]),_._v(" 正则 "),v("code",[_._v('"\\d{3}(?!\\d)"')]),_._v("匹配3位数字后非数字的结果")])])]),_._v(" "),v("li",[v("p",[v("strong",[v("code",[_._v("(?<!exp)x")]),_._v("  匹配前面不是 exp 的位置"),v("code",[_._v("x")])])]),_._v(" "),v("ul",[v("li",[_._v("如 "),v("code",[_._v('"abc123 "')]),_._v(" 正则"),v("code",[_._v('"(?<![0-9])123"')]),_._v(' 匹配"123"前面是非数字的结果也可写成'),v("code",[_._v('"(?!<\\d)123"')])])])])]),_._v(" "),v("p",[_._v("另外，"),v("code",[_._v("?:")]),_._v(" 非获取匹配")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("(?:x)")]),_._v("匹配x但是不会捕获，不会 $n 获取到（与()有区别），但是可以被替换")])]),_._v(" "),v("h3",{attrs:{id:"_4-x"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-x"}},[_._v("#")]),_._v(" 4. "),v("code",[_._v("(x)")])]),_._v(" "),v("ol",[v("li",[_._v("模式 "),v("code",[_._v("/(foo) (bar) \\1 \\2/")]),_._v(" 中的 "),v("code",[_._v("'(foo)'")]),_._v(" 和 "),v("code",[_._v("'(bar)'")]),_._v(" 匹配并记住字符串 "),v("code",[_._v('"foo bar foo bar"')]),_._v(" 中前两个单词。")]),_._v(" "),v("li",[_._v("模式中的 "),v("code",[_._v("\\1")]),_._v(" 和 "),v("code",[_._v("\\2")]),_._v(" 表示第一个和第二个被捕获括号匹配的子字符串，即 "),v("code",[_._v("foo")]),_._v(" 和 "),v("code",[_._v("bar")]),_._v("，匹配了原字符串中的后两个单词。")]),_._v(" "),v("li",[_._v("注意 "),v("code",[_._v("\\1")]),_._v("、"),v("code",[_._v("\\2")]),_._v("、...、"),v("code",[_._v("\\n")]),_._v(" 是用在正则表达式的匹配环节，详情可以参阅后文的 "),v("code",[_._v("\\n")]),_._v(" 条目。")]),_._v(" "),v("li",[_._v("而在正则表达式的替换环节，则要使用像 "),v("code",[_._v("$1、$2、...、$n")]),_._v(" 这样的语法，例如，"),v("code",[_._v("'bar foo'.replace(/(...) (...)/, '$2 $1')")]),_._v("。")]),_._v(" "),v("li",[v("strong",[v("code",[_._v("$&")]),_._v(" 表示整个用于匹配的原字符串")]),_._v("。")])]),_._v(" "),v("h3",{attrs:{id:"_5-x"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-x"}},[_._v("#")]),_._v(" 5. "),v("code",[_._v("(?:x)")])]),_._v(" "),v("ol",[v("li",[_._v("匹配 "),v("code",[_._v("'x'")]),_._v(" 但是不记住匹配项。这种括号叫作非捕获括号，使得你能够定义与正则表达式运算符一起使用的子表达式。")]),_._v(" "),v("li",[_._v("看看这个例子 "),v("code",[_._v("/(?:foo){1,2}/")]),_._v("。如果表达式是 "),v("code",[_._v("/foo{1,2}/，{1,2}")]),_._v(" 将只应用于 "),v("code",[_._v("'foo'")]),_._v(" 的最后一个字符 "),v("code",[_._v("'o'")]),_._v("。如果使用非捕获括号，则 "),v("code",[_._v("{1,2}")]),_._v(" 会应用于整个 "),v("code",[_._v("'foo'")]),_._v(" 单词。")])]),_._v(" "),v("h3",{attrs:{id:"_6-python的re库中match方法和search的不同"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-python的re库中match方法和search的不同"}},[_._v("#")]),_._v(" 6. Python的re库中"),v("code",[_._v("match")]),_._v("方法和"),v("code",[_._v("search")]),_._v("的不同")]),_._v(" "),v("ol",[v("li",[v("code",[_._v("match")]),_._v("方法从字符串最开始位置开始")]),_._v(" "),v("li",[v("code",[_._v("search")]),_._v("方法不会从最开始匹配")])])])}),[],!1,null,null,null);v.default=c.exports}}]);