(window.webpackJsonp=window.webpackJsonp||[]).push([[295],{600:function(a,t,e){"use strict";e.r(t);var s=e(25),n=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("ul",[t("li",[t("a",{attrs:{href:"#1-path"}},[a._v("1. path")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#101-normalizejoinresolve"}},[a._v("1.0.1. "),t("code",[a._v("normalize")]),a._v("、"),t("code",[a._v("join")]),a._v("、"),t("code",[a._v("resolve")])])]),a._v(" "),t("li",[t("a",{attrs:{href:"#102-basenamedirnameextname"}},[a._v("1.0.2. basename、dirname、extname")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#103-parse-%E4%B8%8E-format"}},[a._v("1.0.3. parse 与 format")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#104-sepdelimiterwin32posix"}},[a._v("1.0.4. sep、delimiter、win32、posix")])]),a._v(" "),t("li",[t("a",{attrs:{href:"#105-%E5%85%B3%E4%BA%8E%E8%B7%AF%E5%BE%84__dirnameprocesscwdpathresolve%E4%B8%89%E8%80%85%E7%9A%84%E5%8C%BA%E5%88%AB"}},[a._v("1.0.5. 关于路径，"),t("code",[a._v("__dirname")]),a._v("，"),t("code",[a._v("process.cwd()")]),a._v("，"),t("code",[a._v("path.resolve()")]),a._v("三者的区别")])])])])]),a._v(" "),t("h1",{attrs:{id:"_1-path"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-path"}},[a._v("#")]),a._v(" 1. path")]),a._v(" "),t("p",[a._v("path 模块提供用于处理文件路径和目录路径的实用工具。")]),a._v(" "),t("h3",{attrs:{id:"_1-0-1-normalize、join、resolve"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-1-normalize、join、resolve"}},[a._v("#")]),a._v(" 1.0.1. "),t("code",[a._v("normalize")]),a._v("、"),t("code",[a._v("join")]),a._v("、"),t("code",[a._v("resolve")])]),a._v(" "),t("ul",[t("li",[t("code",[a._v("path.normalize()")]),a._v(" 方法规范化给定的 "),t("code",[a._v("path")]),a._v("，解析 '..' 和 '.' 片段。")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("normalize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/foo/bar//baz/asdf/quux/.."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 返回: '/foo/bar/baz/asdf'")]),a._v("\n")])])]),t("ul",[t("li",[t("code",[a._v("path.join")]),a._v(" 方法使用平台特定分隔符作为定界符将所有给定的 "),t("code",[a._v("path")]),a._v(" 片段连接在一起，然后生成规范的路径")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/foo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bar"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"baz/asdf"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('".."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 返回: '/foo/bar/baz/asdf'")]),a._v("\n")])])]),t("ul",[t("li",[t("code",[a._v("path.resolve([...paths])")]),a._v("把一个相对路径解析成一个绝对路径。")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("paths"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'wwwroot'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'static_files/png/'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'../gif/image.gif'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 如果当前工作目录是 /home/myself/node，")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 则返回 '/home/myself/node/wwwroot/static_files/gif/image.gif')")]),a._v("\n")])])]),t("h3",{attrs:{id:"_1-0-2-basename、dirname、extname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-2-basename、dirname、extname"}},[a._v("#")]),a._v(" 1.0.2. basename、dirname、extname")]),a._v(" "),t("ul",[t("li",[a._v("basename\n"),t("ul",[t("li",[a._v("文件名.拓展名")])])]),a._v(" "),t("li",[a._v("dirname\n"),t("ul",[t("li",[a._v("所在的文件夹")])])]),a._v(" "),t("li",[a._v("extname\n"),t("ul",[t("li",[a._v("拓展名是什么")])])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('┌─────────────────────┬────────────┐\n│          dir        │    base    │\n├──────┬              ├──────┬─────┤\n│ root │              │ name │ ext │\n"  /    home/user/dir / file  .txt "\n└──────┴──────────────┴──────┴─────┘\n')])])]),t("h3",{attrs:{id:"_1-0-3-parse-与-format"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-3-parse-与-format"}},[a._v("#")]),a._v(" 1.0.3. parse 与 format")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("parse")]),a._v(" 是将字符串形式的文件路径给解析成一个包含 "),t("code",[a._v("root")]),a._v(", "),t("code",[a._v("dir")]),a._v(", "),t("code",[a._v("base")]),a._v(", "),t("code",[a._v("name")]),a._v(", "),t("code",[a._v("ext")]),a._v(" 属性的对象\n"),t("ul",[t("li",[t("code",[a._v("format")]),a._v(" 则是将这个对象代表的路径转成字符串形式，与 parse 相反")])])])]),a._v(" "),t("p",[a._v("如果有了一个路径指向修改其中的一个内容，那么就可以使用 "),t("code",[a._v("parse")]),a._v(" 转成对象然后修改后使用 "),t("code",[a._v("format")]),a._v(" 在转成一个新路径。")]),a._v(" "),t("p",[a._v("当为 "),t("code",[a._v("pathObject")]),a._v(" 提供属性时，注意以下组合，其中一些属性优先于另一些属性：")]),a._v(" "),t("ul",[t("li",[a._v("如果提供了 "),t("code",[a._v("pathObject.dir")]),a._v("，则忽略 "),t("code",[a._v("pathObject.root")]),a._v("。")]),a._v(" "),t("li",[a._v("如果 "),t("code",[a._v("pathObject.base")]),a._v(" 存在，则忽略 "),t("code",[a._v("pathObject.ext")]),a._v(" 和 "),t("code",[a._v("pathObject.name")]),a._v("。")])]),a._v(" "),t("h3",{attrs:{id:"_1-0-4-sep、delimiter、win32、posix"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-4-sep、delimiter、win32、posix"}},[a._v("#")]),a._v(" 1.0.4. sep、delimiter、win32、posix")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("delimiter")]),a._v("提供平台特定的路径分隔符：\n"),t("ul",[t("li",[t("code",[a._v("Windows")]),a._v(" 上是 "),t("code",[a._v(";")])]),a._v(" "),t("li",[t("code",[a._v("POSIX")]),a._v(" 上是 "),t("code",[a._v(":")])])])]),a._v(" "),t("li",[t("code",[a._v("sep")]),a._v("提供了平台特定的路径片段分隔符：\n"),t("ul",[t("li",[t("code",[a._v("Windows")]),a._v(" 上是 "),t("code",[a._v("\\")])]),a._v(" "),t("li",[t("code",[a._v("POSIX")]),a._v(" 上是 "),t("code",[a._v("/")])])])]),a._v(" "),t("li",[t("code",[a._v("path.win32")]),a._v(" 属性提供了 "),t("code",[a._v("path")]),a._v(" 方法针对 "),t("code",[a._v("Windows")]),a._v(" 的实现;")]),a._v(" "),t("li",[t("code",[a._v("path.posix")]),a._v(" 属性提供了 "),t("code",[a._v("path")]),a._v(" 方法针对 "),t("code",[a._v("POSIX")]),a._v(" 的实现。")])]),a._v(" "),t("h3",{attrs:{id:"_1-0-5-关于路径-dirname-process-cwd-path-resolve-三者的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-5-关于路径-dirname-process-cwd-path-resolve-三者的区别"}},[a._v("#")]),a._v(" 1.0.5. 关于路径，"),t("code",[a._v("__dirname")]),a._v("，"),t("code",[a._v("process.cwd()")]),a._v("，"),t("code",[a._v("path.resolve()")]),a._v("三者的区别")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("__dirname")]),a._v("与"),t("code",[a._v("__filename")]),a._v("总是返回文件的绝对路径，即物理磁盘上的路径")]),a._v(" "),t("li",[t("code",[a._v("process.cwd()")]),a._v("总是返回执行"),t("code",[a._v("node")]),a._v("命令时所在的文件夹路径，当前在哪里启动的脚本路径")]),a._v(" "),t("li",[t("code",[a._v("./")]),a._v("在"),t("code",[a._v("require")]),a._v("方法中总是相对当前文件所在文件夹的路径；在其他的地方和"),t("code",[a._v("process.cwd()")]),a._v("一样，相对"),t("code",[a._v("node")]),a._v("启动文件夹")])]),a._v(" "),t("p",[a._v("参考资料：")]),a._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"https://www.jianshu.com/p/08e014f786a4?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation",target:"_blank",rel:"noopener noreferrer"}},[a._v("初学node，你必须懂的几个api"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);