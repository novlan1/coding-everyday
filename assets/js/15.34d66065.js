(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{317:function(s,t,a){"use strict";a.r(t);var v=a(25),e=Object(v.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("ul",[t("li",[t("a",{attrs:{href:"#ssh%E7%AC%94%E8%AE%B0"}},[s._v("SSH笔记")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%B8%80%E4%BB%80%E4%B9%88%E6%98%AFssh"}},[s._v("一、什么是SSH？")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E4%BA%8C%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84%E7%94%A8%E6%B3%95"}},[s._v("二、最基本的用法")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E4%B8%89%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB"}},[s._v("三、中间人攻击")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%9B%9B%E5%8F%A3%E4%BB%A4%E7%99%BB%E5%BD%95"}},[s._v("四、口令登录")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E4%BA%94%E5%85%AC%E9%92%A5%E7%99%BB%E5%BD%95"}},[s._v("五、公钥登录")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%85%ADauthorized_keys%E6%96%87%E4%BB%B6"}},[s._v("六、authorized_keys文件")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E4%B8%83%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C"}},[s._v("七、远程操作")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%85%AB%E7%BB%91%E5%AE%9A%E6%9C%AC%E5%9C%B0%E7%AB%AF%E5%8F%A3"}},[s._v("八、绑定本地端口")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E4%B9%9D%E6%9C%AC%E5%9C%B0%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91"}},[s._v("九、本地端口转发")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%8D%81%E8%BF%9C%E7%A8%8B%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91"}},[s._v("十、远程端口转发")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%8D%81%E4%B8%80ssh%E7%9A%84%E5%85%B6%E4%BB%96%E5%8F%82%E6%95%B0"}},[s._v("十一、SSH的其他参数")])])])])]),s._v(" "),t("h2",{attrs:{id:"ssh笔记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh笔记"}},[s._v("#")]),s._v(" SSH笔记")]),s._v(" "),t("h3",{attrs:{id:"一、什么是ssh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是ssh"}},[s._v("#")]),s._v(" 一、什么是SSH？")]),s._v(" "),t("p",[s._v("简单说，SSH是一种网络协议，用于计算机之间的加密登录。")]),s._v(" "),t("p",[s._v("如果一个用户从本地计算机，使用SSH协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露。")]),s._v(" "),t("p",[s._v("最早的时候，互联网通信都是明文通信，一旦被截获，内容就暴露无疑。1995年，芬兰学者Tatu Ylonen设计了SSH协议，将登录信息全部加密，成为互联网安全的一个基本解决方案，迅速在全世界获得推广，目前已经成为Linux系统的标准配置。")]),s._v(" "),t("p",[s._v("需要指出的是，"),t("strong",[s._v("SSH只是一种协议，存在多种实现，既有商业实现，也有开源实现。本文针对的实现是OpenSSH，它是自由软件，应用非常广泛")]),s._v("。")]),s._v(" "),t("p",[s._v("此外，本文只讨论SSH在Linux Shell中的用法。如果要在Windows系统中使用SSH，会用到另一种软件PuTTY，这需要另文介绍。")]),s._v(" "),t("h3",{attrs:{id:"二、最基本的用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、最基本的用法"}},[s._v("#")]),s._v(" 二、最基本的用法")]),s._v(" "),t("p",[s._v("SSH主要用于远程登录。假定你要以用户名user，登录远程主机host，只要一条简单命令就可以了。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh user@host\n")])])]),t("p",[s._v("如果本地用户名与远程用户名一致，登录时可以省略用户名。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh host\n")])])]),t("p",[t("strong",[s._v("SSH的默认端口是22，也就是说，你的登录请求会送进远程主机的22端口。使用p参数，可以修改这个端口。")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh -p 2222 user@host\n")])])]),t("p",[s._v("上面这条命令表示，ssh直接连接远程主机的2222端口。")]),s._v(" "),t("h3",{attrs:{id:"三、中间人攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、中间人攻击"}},[s._v("#")]),s._v(" 三、中间人攻击")]),s._v(" "),t("p",[s._v("SSH之所以能够保证安全，原因在于它采用了公钥加密。")]),s._v(" "),t("p",[s._v("整个过程是这样的：\n（1）"),t("strong",[s._v("远程主机收到用户的登录请求，把自己的公钥发给用户")]),s._v("。\n（2）"),t("strong",[s._v("用户使用这个公钥，将登录密码加密后，发送回来")]),s._v("。\n（3）"),t("strong",[s._v("远程主机用自己的私钥，解密登录密码，如果密码正确，就同意用户登录")]),s._v("。")]),s._v(" "),t("p",[s._v("这个过程本身是安全的，但是实施的时候存在一个风险：如果有人截获了登录请求，然后冒充远程主机，将伪造的公钥发给用户，那么用户很难辨别真伪。因为"),t("strong",[s._v("不像https协议，SSH协议的公钥是没有证书中心（CA）公证的，也就是说，都是自己签发的")]),s._v("。")]),s._v(" "),t("p",[s._v("可以设想，"),t("strong",[s._v("如果攻击者插在用户与远程主机之间（比如在公共的wifi区域），用伪造的公钥，获取用户的登录密码。再用这个密码登录远程主机")]),s._v("，那么SSH的安全机制就荡然无存了。这种风险就是著名的 "),t("strong",[s._v('"中间人攻击"（Man-in-the-middle attack）')]),s._v("。")]),s._v(" "),t("p",[s._v("SSH协议是如何应对的呢？")]),s._v(" "),t("h3",{attrs:{id:"四、口令登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、口令登录"}},[s._v("#")]),s._v(" 四、口令登录")]),s._v(" "),t("p",[s._v("如果你是第一次登录对方主机，系统会出现下面的提示：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh user@host\n\n　　The authenticity of host 'host (12.18.429.21)' can't be established.\n\n　　RSA key fingerprint is 98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d.\n\n　　Are you sure you want to continue connecting (yes/no)?\n")])])]),t("p",[s._v("这段话的意思是，"),t("strong",[s._v("无法确认host主机的真实性，只知道它的公钥指纹")]),s._v("，问你还想继续连接吗？")]),s._v(" "),t("p",[t("strong",[s._v('所谓"公钥指纹"，是指公钥长度较长（这里采用RSA算法，长达1024位），很难比对，所以对其进行MD5计算，将它变成一个128位的指纹')]),s._v("。上例中是98:2e:d7:e0🇩🇪9f:ac:67:28:c2:42:2d:37:16:58:4d，再进行比较，就容易多了。")]),s._v(" "),t("p",[s._v("很自然的一个问题就是，"),t("strong",[s._v("用户怎么知道远程主机的公钥指纹应该是多少")]),s._v("？回答是没有好办法，"),t("strong",[s._v("远程主机必须在自己的网站上贴出公钥指纹，以便用户自行核对")]),s._v("。")]),s._v(" "),t("p",[s._v("假定经过风险衡量以后，用户决定接受这个远程主机的公钥。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　Are you sure you want to continue connecting (yes/no)? yes\n")])])]),t("p",[s._v("系统会出现一句提示，表示host主机已经得到认可。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　Warning: Permanently added 'host,12.18.429.21' (RSA) to the list of known hosts.\n")])])]),t("p",[s._v("然后，会要求输入密码。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　Password: (enter password)\n")])])]),t("p",[s._v("如果密码正确，就可以登录了。")]),s._v(" "),t("p",[s._v("当"),t("strong",[s._v("远程主机的公钥被接受以后")]),s._v("，它就会被保存在文件 "),t("strong",[s._v("$HOME/.ssh/known_hosts")]),s._v(" 之中。下次再连接这台主机，系统就会认出它的公钥已经保存在本地了，从而跳过警告部分，直接提示输入密码。")]),s._v(" "),t("p",[t("strong",[s._v("每个SSH用户都有自己的known_hosts文件")]),s._v("，此外系统也有一个这样的文件，通常是 "),t("strong",[s._v("/etc/ssh/ssh_known_hosts")]),s._v("，保存一些对所有用户都可信赖的远程主机的公钥。")]),s._v(" "),t("h3",{attrs:{id:"五、公钥登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、公钥登录"}},[s._v("#")]),s._v(" 五、公钥登录")]),s._v(" "),t("p",[s._v("使用密码登录，每次都必须输入密码，非常麻烦。好在SSH还提供了公钥登录，可以省去输入密码的步骤。")]),s._v(" "),t("p",[t("strong",[s._v('所谓"公钥登录"，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来')]),s._v("。"),t("strong",[s._v("远程主机用事先储存的公钥进行解密")]),s._v("，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。")]),s._v(" "),t("p",[s._v("这种方法要求用户必须提供自己的公钥。如果没有现成的，可以直接用ssh-keygen生成一个：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh-keygen\n")])])]),t("p",[s._v("运行上面的命令以后，系统会出现一系列提示，可以一路回车。其中有一个问题是，要不要对私钥设置口令（passphrase），如果担心私钥的安全，这里可以设置一个。")]),s._v(" "),t("p",[s._v("运行结束以后，"),t("strong",[s._v("在$HOME/.ssh/目录下，会新生成两个文件：id_rsa.pub和id_rsa。前者是你的公钥，后者是你的私钥")]),s._v("。")]),s._v(" "),t("p",[s._v("这时再输入下面的命令，将公钥传送到远程主机host上面：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh-copy-id user@host\n")])])]),t("p",[s._v("好了，从此你再登录，就不需要输入密码了。")]),s._v(" "),t("p",[s._v("如果还是不行，就打开远程主机的 "),t("strong",[s._v("/etc/ssh/sshd_config")]),s._v('这个文件，检查下面几行前面"#"注释是否取掉。')]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　RSAAuthentication yes\n　　PubkeyAuthentication yes\n　　AuthorizedKeysFile .ssh/authorized_keys\n")])])]),t("p",[s._v("然后，重启远程主机的ssh服务。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　// ubuntu系统\n　　service ssh restart\n\n　　// debian系统\n　　/etc/init.d/ssh restart\n")])])]),t("h3",{attrs:{id:"六、authorized-keys文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、authorized-keys文件"}},[s._v("#")]),s._v(" 六、authorized_keys文件")]),s._v(" "),t("p",[t("strong",[s._v("远程主机将用户的公钥")]),s._v("，保存在登录后的用户主目录的 "),t("strong",[s._v("$HOME/.ssh/authorized_keys")]),s._v("文件中。公钥就是一段字符串，只要把它追加在authorized_keys文件的末尾就行了。")]),s._v(" "),t("p",[s._v("这里不使用上面的ssh-copy-id命令，改用下面的命令，解释公钥的保存过程：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh user@host 'mkdir -p .ssh && cat >> .ssh/authorized_keys' < ~/.ssh/id_rsa.pub\n")])])]),t("p",[s._v("这条命令由多个语句组成，依次分解开来看：")]),s._v(" "),t("p",[s._v('（1）"$ ssh user@host"，表示登录远程主机；')]),s._v(" "),t("p",[s._v("（2）单引号中的mkdir .ssh && cat >> .ssh/authorized_keys，表示登录后在远程shell上执行的命令：")]),s._v(" "),t("p",[s._v("（3）"),t("strong",[s._v('"$ mkdir -p .ssh"')]),s._v(" 的作用是，如果用户主目录中的.ssh目录不存在，就创建一个；")]),s._v(" "),t("p",[s._v("（4）'cat >> .ssh/authorized_keys' < ~/.ssh/id_rsa.pub的作用是，将本地的公钥文件~/.ssh/id_rsa.pub，重定向追加到远程文件authorized_keys的末尾。")]),s._v(" "),t("p",[s._v("写入authorized_keys文件后，公钥登录的设置就完成了。")]),s._v(" "),t("h3",{attrs:{id:"七、远程操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、远程操作"}},[s._v("#")]),s._v(" 七、远程操作")]),s._v(" "),t("p",[s._v("SSH不仅可以用于远程主机登录，还可以直接在远程主机上执行操作。")]),s._v(" "),t("p",[s._v("上一节的操作，就是一个例子：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh user@host 'mkdir -p .ssh && cat >> .ssh/authorized_keys' < ~/.ssh/id_rsa.pub\n")])])]),t("p",[s._v("单引号中间的部分，表示在远程主机上执行的操作；后面的输入重定向，表示数据通过SSH传向远程主机。")]),s._v(" "),t("p",[s._v("这就是说，SSH可以在用户和远程主机之间，建立命令和数据的传输通道，因此很多事情都可以通过SSH来完成。")]),s._v(" "),t("p",[s._v("下面看几个例子。")]),s._v(" "),t("p",[s._v("【例1】"),t("strong",[s._v("将$HOME/src/目录下面的所有文件，复制到远程主机的$HOME/src/目录。")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ cd && tar czv src | ssh user@host 'tar xz'\n")])])]),t("p",[s._v("【例2】"),t("strong",[s._v("将远程主机$HOME/src/目录下面的所有文件，复制到用户的当前目录")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh user@host 'tar cz src' | tar xzv\n")])])]),t("p",[s._v("【例3】"),t("strong",[s._v("查看远程主机是否运行进程httpd。")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh user@host 'ps ax | grep [h]ttpd'\n")])])]),t("h3",{attrs:{id:"八、绑定本地端口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#八、绑定本地端口"}},[s._v("#")]),s._v(" 八、绑定本地端口")]),s._v(" "),t("p",[s._v("既然SSH可以传送数据，那么我们可以让那些不加密的网络连接，全部改走SSH连接，从而提高安全性。")]),s._v(" "),t("p",[s._v("假定我们要让8080端口的数据，都通过SSH传向远程主机，命令就这样写：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh -D 8080 user@host\n")])])]),t("p",[t("strong",[s._v("SSH会建立一个socket，去监听本地的8080端口。一旦有数据传向那个端口，就自动把它转移到SSH连接上面，发往远程主机")]),s._v("。可以想象，如果8080端口原来是一个不加密端口，现在将变成一个加密端口。")]),s._v(" "),t("h3",{attrs:{id:"九、本地端口转发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#九、本地端口转发"}},[s._v("#")]),s._v(" 九、本地端口转发")]),s._v(" "),t("p",[s._v('有时，绑定本地端口还不够，还必须指定数据传送的目标主机，从而形成点对点的"端口转发"。为了区别后文的"远程端口转发"，我们把这种情况称为 '),t("strong",[s._v('"本地端口转发"（Local forwarding）')]),s._v("。")]),s._v(" "),t("p",[t("strong",[s._v("假定host1是本地主机，host2是远程主机。"),t("strong",[s._v("由于种种原因，这两台主机之间无法连通。但是，另外")]),s._v("还有一台host3，可以同时连通前面两台主机")]),s._v("。因此，很自然的想法就是，"),t("strong",[s._v("通过host3，将host1连上host2。")])]),s._v(" "),t("p",[s._v("我们在host1执行下面的命令：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh -L 2121:host2:21 host3\n")])])]),t("p",[s._v("命令中的"),t("strong",[s._v("L参数")]),s._v('一共接受三个值，分别是"'),t("strong",[s._v("本地端口:目标主机:目标主机端口")]),s._v('"，它们之间用冒号分隔。这条命令的意思，就是'),t("strong",[s._v("指定SSH绑定本地端口2121，然后指定host3将所有的数据，转发到目标主机host2的21端口")]),s._v("（假定host2运行FTP，默认端口为21）。")]),s._v(" "),t("p",[s._v("这样一来，我们只要连接host1的2121端口，就等于连上了host2的21端口。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ftp localhost:2121\n")])])]),t("p",[s._v('"本地端口转发"使得host1和host3之间仿佛形成一个数据传输的秘密隧道，因此又被称为"'),t("strong",[s._v("SSH隧道")]),s._v('"。')]),s._v(" "),t("p",[s._v("下面是一个比较有趣的例子。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh -L 5900:localhost:5900 host3\n")])])]),t("p",[t("strong",[s._v("它表示将本机的5900端口绑定host3的5900端口")]),s._v("（"),t("strong",[s._v("这里的localhost指的是host3，因为目标主机是相对host3而言的")]),s._v("）。")]),s._v(" "),t("p",[s._v("另一个例子是"),t("strong",[s._v("通过host3的端口转发，ssh登录host2")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh -L 9001:host2:22 host3\n")])])]),t("p",[s._v("这时，"),t("strong",[s._v("只要ssh登录本机的9001端口，就相当于登录host2了")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh -p 9001 localhost\n")])])]),t("p",[s._v("上面的-p参数表示指定登录端口。")]),s._v(" "),t("h3",{attrs:{id:"十、远程端口转发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#十、远程端口转发"}},[s._v("#")]),s._v(" 十、远程端口转发")]),s._v(" "),t("p",[t("strong",[s._v('既然"本地端口转发"是指绑定本地端口的转发')]),s._v("，那么 "),t("strong",[s._v('"远程端口转发"（remote forwarding）当然是指绑定远程端口的转发')]),s._v("。")]),s._v(" "),t("p",[s._v("还是接着看上面那个例子，host1与host2之间无法连通，必须借助host3转发。但是，特殊情况出现了，"),t("strong",[s._v("host3是一台内网机器，它可以连接外网的host1，但是反过来就不行，外网的host1连不上内网的host3")]),s._v('。这时，"本地端口转发"就不能用了，怎么办？')]),s._v(" "),t("p",[s._v("解决办法是，"),t("strong",[s._v("既然host3可以连host1，那么就从host3上建立与host1的SSH连接，然后在host1上使用这条连接就可以了")]),s._v("。")]),s._v(" "),t("p",[s._v("我们在host3执行下面的命令：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh -R 2121:host2:21 host1\n")])])]),t("p",[t("strong",[s._v("R参数")]),s._v('也是接受三个值，分别是"'),t("strong",[s._v("远程主机端口:目标主机:目标主机端口")]),s._v('"。这条命令的意思，就是'),t("strong",[s._v("让host1监听它自己的2121端口，然后将所有数据经由host3，转发到host2的21端口")]),s._v('。由于对于host3来说，host1是远程主机，所以这种情况就被称为"远程端口绑定"。')]),s._v(" "),t("p",[s._v("绑定之后，我们在host1就可以连接host2了：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ftp localhost:2121\n")])])]),t("p",[s._v('这里必须指出，"远程端口转发"的前提条件是，host1和host3两台主机都有sshD和ssh客户端。')]),s._v(" "),t("h3",{attrs:{id:"十一、ssh的其他参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#十一、ssh的其他参数"}},[s._v("#")]),s._v(" 十一、SSH的其他参数")]),s._v(" "),t("p",[s._v("SSH还有一些别的参数，也值得介绍。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("N参数，表示只连接远程主机，不打开远程shell")]),s._v("；")]),s._v(" "),t("li",[t("strong",[s._v("T参数，表示不为这个连接分配TTY")]),s._v("。")]),s._v(" "),t("li",[t("strong",[s._v("这个两个参数可以放在一起用，代表这个SSH连接只用来传数据，不执行远程操作")]),s._v("。")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh -NT -D 8080 host\n")])])]),t("p",[t("strong",[s._v("f参数，表示SSH连接成功后，转入后台运")]),s._v("行。这样一来，你就可以在不中断SSH连接的情况下，在本地shell中执行其他操作。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("　　$ ssh -f -D 8080 host\n")])])]),t("p",[s._v("要关闭这个后台连接，就只有用kill命令去杀掉进程。")])])}),[],!1,null,null,null);t.default=e.exports}}]);