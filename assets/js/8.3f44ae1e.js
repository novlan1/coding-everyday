(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{312:function(_,v,t){"use strict";t.r(v);var a=t(25),r=Object(a.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("ul",[v("li",[v("a",{attrs:{href:"#1-pnpnpc-%E5%92%8C-np-hard-%E9%97%AE%E9%A2%98%E7%9A%84%E9%80%9A%E4%BF%97%E5%8C%96%E8%A7%A3%E9%87%8A%E5%92%8C%E8%AF%A6%E7%BB%86%E5%8C%BA%E5%88%86"}},[_._v("1. P、NP、NPC 和 NP-Hard 问题的通俗化解释和详细区分")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#2-%E8%A7%84%E7%BA%A6%E7%BA%A6%E5%8C%96"}},[_._v("2. 规约/约化")])]),_._v(" "),v("li",[v("a",{attrs:{href:"#3-%E5%88%A4%E6%96%AD-np-%E9%97%AE%E9%A2%98%E7%9A%84%E6%8A%80%E5%B7%A7"}},[_._v("3. 判断 NP 问题的技巧")])])]),_._v(" "),v("h3",{attrs:{id:"_1-p、np、npc-和-np-hard-问题的通俗化解释和详细区分"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-p、np、npc-和-np-hard-问题的通俗化解释和详细区分"}},[_._v("#")]),_._v(" 1. P、NP、NPC 和 NP-Hard 问题的通俗化解释和详细区分")]),_._v(" "),v("ol",[v("li",[_._v("多项式级的复杂度："),v("code",[_._v("O(1), O(n), O(n^2), O(lg(n)), O(nlg(n))")])]),_._v(" "),v("li",[_._v("非多项式级的复杂度："),v("code",[_._v("O(2^n), O(n!)")])])]),_._v(" "),v("ul",[v("li",[_._v("P 问题：可以在多项式时间内找到"),v("strong",[_._v("解决")]),_._v("该问题的算法")]),_._v(" "),v("li",[_._v("NP 问题：可以在多项式的时间里"),v("strong",[_._v("验证")]),_._v("该问题的一个解")]),_._v(" "),v("li",[_._v("NPC 问题：是一个 NP 问题，并且所有的 NP 问题都可以约化到该问题")]),_._v(" "),v("li",[_._v("NP-hard 问题：不一定是一个 NP 问题，但所有的 NP 问题都可以约化到该问题")])]),_._v(" "),v("p",[v("img",{attrs:{src:"/imgs/npc.png",alt:"NPC"}})]),_._v(" "),v("p",[_._v("注意：时间复杂度并不是表示一个程序解决问题需要花多少时间，而是当问题规模扩大后，程序需要的时间长度增长得有多快。")]),_._v(" "),v("h3",{attrs:{id:"_2-规约-约化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-规约-约化"}},[_._v("#")]),_._v(" 2. 规约/约化")]),_._v(" "),v("p",[_._v("问题A可以约化为问题B，称为“问题A可规约为问题B”，可以理解为问题B的解一定就是问题A的解，因此解决A不会难于解决B。由此可知问题B的时间复杂度一定大于等于问题A。")]),_._v(" "),v("p",[_._v("比如：求解一个一元一次方程和求解一个一元二次方程。那么我们说，前者可以规约为后者，意即知道如何解一个一元二次方程那么一定能解出一元一次方程。")]),_._v(" "),v("h3",{attrs:{id:"_3-判断-np-问题的技巧"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-判断-np-问题的技巧"}},[_._v("#")]),_._v(" 3. 判断 NP 问题的技巧")]),_._v(" "),v("ol",[v("li",[_._v("元素较少时算法的运行速度非常快，但随着元素数量的增加，速度会变得非常慢。")]),_._v(" "),v("li",[_._v("涉及“所有组合”的问题通常是NP完全问题。")]),_._v(" "),v("li",[_._v("不能将问题分成小问题，必须考虑各种可能的情况。这可能是NP完全问题。")]),_._v(" "),v("li",[_._v("如果问题涉及序列（如旅行商问题中的城市序列）且难以解决，它可能就是NP完全问题。")]),_._v(" "),v("li",[_._v("如果问题涉及集合（如广播台集合）且难以解决，它可能就是NP完全问题。")]),_._v(" "),v("li",[_._v("如果问题可转换为集合覆盖问题或旅行商问题，那它肯定是NP完全问题。")])])])}),[],!1,null,null,null);v.default=r.exports}}]);